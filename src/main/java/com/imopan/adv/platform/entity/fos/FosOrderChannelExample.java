package com.imopan.adv.platform.entity.fos;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FosOrderChannelExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	protected Integer limitStart;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	protected Integer limitEnd;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public FosOrderChannelExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public void setLimitStart(Integer limitStart) {
		this.limitStart = limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public Integer getLimitStart() {
		return limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public void setLimitEnd(Integer limitEnd) {
		this.limitEnd = limitEnd;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public Integer getLimitEnd() {
		return limitEnd;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andChannelOrderIdIsNull() {
			addCriterion("CHANNEL_ORDER_ID is null");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdIsNotNull() {
			addCriterion("CHANNEL_ORDER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdEqualTo(Integer value) {
			addCriterion("CHANNEL_ORDER_ID =", value, "channelOrderId");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdNotEqualTo(Integer value) {
			addCriterion("CHANNEL_ORDER_ID <>", value, "channelOrderId");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdGreaterThan(Integer value) {
			addCriterion("CHANNEL_ORDER_ID >", value, "channelOrderId");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("CHANNEL_ORDER_ID >=", value, "channelOrderId");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdLessThan(Integer value) {
			addCriterion("CHANNEL_ORDER_ID <", value, "channelOrderId");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdLessThanOrEqualTo(Integer value) {
			addCriterion("CHANNEL_ORDER_ID <=", value, "channelOrderId");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdIn(List<Integer> values) {
			addCriterion("CHANNEL_ORDER_ID in", values, "channelOrderId");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdNotIn(List<Integer> values) {
			addCriterion("CHANNEL_ORDER_ID not in", values, "channelOrderId");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdBetween(Integer value1, Integer value2) {
			addCriterion("CHANNEL_ORDER_ID between", value1, value2, "channelOrderId");
			return (Criteria) this;
		}

		public Criteria andChannelOrderIdNotBetween(Integer value1, Integer value2) {
			addCriterion("CHANNEL_ORDER_ID not between", value1, value2, "channelOrderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdIsNull() {
			addCriterion("ORDER_ID is null");
			return (Criteria) this;
		}

		public Criteria andOrderIdIsNotNull() {
			addCriterion("ORDER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andOrderIdEqualTo(Integer value) {
			addCriterion("ORDER_ID =", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotEqualTo(Integer value) {
			addCriterion("ORDER_ID <>", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdGreaterThan(Integer value) {
			addCriterion("ORDER_ID >", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ORDER_ID >=", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdLessThan(Integer value) {
			addCriterion("ORDER_ID <", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdLessThanOrEqualTo(Integer value) {
			addCriterion("ORDER_ID <=", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdIn(List<Integer> values) {
			addCriterion("ORDER_ID in", values, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotIn(List<Integer> values) {
			addCriterion("ORDER_ID not in", values, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdBetween(Integer value1, Integer value2) {
			addCriterion("ORDER_ID between", value1, value2, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ORDER_ID not between", value1, value2, "orderId");
			return (Criteria) this;
		}

		public Criteria andPayUnitIsNull() {
			addCriterion("PAY_UNIT is null");
			return (Criteria) this;
		}

		public Criteria andPayUnitIsNotNull() {
			addCriterion("PAY_UNIT is not null");
			return (Criteria) this;
		}

		public Criteria andPayUnitEqualTo(BigDecimal value) {
			addCriterion("PAY_UNIT =", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitNotEqualTo(BigDecimal value) {
			addCriterion("PAY_UNIT <>", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitGreaterThan(BigDecimal value) {
			addCriterion("PAY_UNIT >", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("PAY_UNIT >=", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitLessThan(BigDecimal value) {
			addCriterion("PAY_UNIT <", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitLessThanOrEqualTo(BigDecimal value) {
			addCriterion("PAY_UNIT <=", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitIn(List<BigDecimal> values) {
			addCriterion("PAY_UNIT in", values, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitNotIn(List<BigDecimal> values) {
			addCriterion("PAY_UNIT not in", values, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("PAY_UNIT between", value1, value2, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("PAY_UNIT not between", value1, value2, "payUnit");
			return (Criteria) this;
		}

		public Criteria andOrderStatusIsNull() {
			addCriterion("ORDER_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andOrderStatusIsNotNull() {
			addCriterion("ORDER_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andOrderStatusEqualTo(Byte value) {
			addCriterion("ORDER_STATUS =", value, "orderStatus");
			return (Criteria) this;
		}

		public Criteria andOrderStatusNotEqualTo(Byte value) {
			addCriterion("ORDER_STATUS <>", value, "orderStatus");
			return (Criteria) this;
		}

		public Criteria andOrderStatusGreaterThan(Byte value) {
			addCriterion("ORDER_STATUS >", value, "orderStatus");
			return (Criteria) this;
		}

		public Criteria andOrderStatusGreaterThanOrEqualTo(Byte value) {
			addCriterion("ORDER_STATUS >=", value, "orderStatus");
			return (Criteria) this;
		}

		public Criteria andOrderStatusLessThan(Byte value) {
			addCriterion("ORDER_STATUS <", value, "orderStatus");
			return (Criteria) this;
		}

		public Criteria andOrderStatusLessThanOrEqualTo(Byte value) {
			addCriterion("ORDER_STATUS <=", value, "orderStatus");
			return (Criteria) this;
		}

		public Criteria andOrderStatusIn(List<Byte> values) {
			addCriterion("ORDER_STATUS in", values, "orderStatus");
			return (Criteria) this;
		}

		public Criteria andOrderStatusNotIn(List<Byte> values) {
			addCriterion("ORDER_STATUS not in", values, "orderStatus");
			return (Criteria) this;
		}

		public Criteria andOrderStatusBetween(Byte value1, Byte value2) {
			addCriterion("ORDER_STATUS between", value1, value2, "orderStatus");
			return (Criteria) this;
		}

		public Criteria andOrderStatusNotBetween(Byte value1, Byte value2) {
			addCriterion("ORDER_STATUS not between", value1, value2, "orderStatus");
			return (Criteria) this;
		}

		public Criteria andChannelIdIsNull() {
			addCriterion("CHANNEL_ID is null");
			return (Criteria) this;
		}

		public Criteria andChannelIdIsNotNull() {
			addCriterion("CHANNEL_ID is not null");
			return (Criteria) this;
		}

		public Criteria andChannelIdEqualTo(Integer value) {
			addCriterion("CHANNEL_ID =", value, "channelId");
			return (Criteria) this;
		}

		public Criteria andChannelIdNotEqualTo(Integer value) {
			addCriterion("CHANNEL_ID <>", value, "channelId");
			return (Criteria) this;
		}

		public Criteria andChannelIdGreaterThan(Integer value) {
			addCriterion("CHANNEL_ID >", value, "channelId");
			return (Criteria) this;
		}

		public Criteria andChannelIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("CHANNEL_ID >=", value, "channelId");
			return (Criteria) this;
		}

		public Criteria andChannelIdLessThan(Integer value) {
			addCriterion("CHANNEL_ID <", value, "channelId");
			return (Criteria) this;
		}

		public Criteria andChannelIdLessThanOrEqualTo(Integer value) {
			addCriterion("CHANNEL_ID <=", value, "channelId");
			return (Criteria) this;
		}

		public Criteria andChannelIdIn(List<Integer> values) {
			addCriterion("CHANNEL_ID in", values, "channelId");
			return (Criteria) this;
		}

		public Criteria andChannelIdNotIn(List<Integer> values) {
			addCriterion("CHANNEL_ID not in", values, "channelId");
			return (Criteria) this;
		}

		public Criteria andChannelIdBetween(Integer value1, Integer value2) {
			addCriterion("CHANNEL_ID between", value1, value2, "channelId");
			return (Criteria) this;
		}

		public Criteria andChannelIdNotBetween(Integer value1, Integer value2) {
			addCriterion("CHANNEL_ID not between", value1, value2, "channelId");
			return (Criteria) this;
		}

		public Criteria andOuterUnitIsNull() {
			addCriterion("OUTER_UNIT is null");
			return (Criteria) this;
		}

		public Criteria andOuterUnitIsNotNull() {
			addCriterion("OUTER_UNIT is not null");
			return (Criteria) this;
		}

		public Criteria andOuterUnitEqualTo(BigDecimal value) {
			addCriterion("OUTER_UNIT =", value, "outerUnit");
			return (Criteria) this;
		}

		public Criteria andOuterUnitNotEqualTo(BigDecimal value) {
			addCriterion("OUTER_UNIT <>", value, "outerUnit");
			return (Criteria) this;
		}

		public Criteria andOuterUnitGreaterThan(BigDecimal value) {
			addCriterion("OUTER_UNIT >", value, "outerUnit");
			return (Criteria) this;
		}

		public Criteria andOuterUnitGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("OUTER_UNIT >=", value, "outerUnit");
			return (Criteria) this;
		}

		public Criteria andOuterUnitLessThan(BigDecimal value) {
			addCriterion("OUTER_UNIT <", value, "outerUnit");
			return (Criteria) this;
		}

		public Criteria andOuterUnitLessThanOrEqualTo(BigDecimal value) {
			addCriterion("OUTER_UNIT <=", value, "outerUnit");
			return (Criteria) this;
		}

		public Criteria andOuterUnitIn(List<BigDecimal> values) {
			addCriterion("OUTER_UNIT in", values, "outerUnit");
			return (Criteria) this;
		}

		public Criteria andOuterUnitNotIn(List<BigDecimal> values) {
			addCriterion("OUTER_UNIT not in", values, "outerUnit");
			return (Criteria) this;
		}

		public Criteria andOuterUnitBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("OUTER_UNIT between", value1, value2, "outerUnit");
			return (Criteria) this;
		}

		public Criteria andOuterUnitNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("OUTER_UNIT not between", value1, value2, "outerUnit");
			return (Criteria) this;
		}

		public Criteria andChannelStatusIsNull() {
			addCriterion("CHANNEL_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andChannelStatusIsNotNull() {
			addCriterion("CHANNEL_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andChannelStatusEqualTo(Byte value) {
			addCriterion("CHANNEL_STATUS =", value, "channelStatus");
			return (Criteria) this;
		}

		public Criteria andChannelStatusNotEqualTo(Byte value) {
			addCriterion("CHANNEL_STATUS <>", value, "channelStatus");
			return (Criteria) this;
		}

		public Criteria andChannelStatusGreaterThan(Byte value) {
			addCriterion("CHANNEL_STATUS >", value, "channelStatus");
			return (Criteria) this;
		}

		public Criteria andChannelStatusGreaterThanOrEqualTo(Byte value) {
			addCriterion("CHANNEL_STATUS >=", value, "channelStatus");
			return (Criteria) this;
		}

		public Criteria andChannelStatusLessThan(Byte value) {
			addCriterion("CHANNEL_STATUS <", value, "channelStatus");
			return (Criteria) this;
		}

		public Criteria andChannelStatusLessThanOrEqualTo(Byte value) {
			addCriterion("CHANNEL_STATUS <=", value, "channelStatus");
			return (Criteria) this;
		}

		public Criteria andChannelStatusIn(List<Byte> values) {
			addCriterion("CHANNEL_STATUS in", values, "channelStatus");
			return (Criteria) this;
		}

		public Criteria andChannelStatusNotIn(List<Byte> values) {
			addCriterion("CHANNEL_STATUS not in", values, "channelStatus");
			return (Criteria) this;
		}

		public Criteria andChannelStatusBetween(Byte value1, Byte value2) {
			addCriterion("CHANNEL_STATUS between", value1, value2, "channelStatus");
			return (Criteria) this;
		}

		public Criteria andChannelStatusNotBetween(Byte value1, Byte value2) {
			addCriterion("CHANNEL_STATUS not between", value1, value2, "channelStatus");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("`STATUS` is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("`STATUS` is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Byte value) {
			addCriterion("`STATUS` =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Byte value) {
			addCriterion("`STATUS` <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Byte value) {
			addCriterion("`STATUS` >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
			addCriterion("`STATUS` >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Byte value) {
			addCriterion("`STATUS` <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Byte value) {
			addCriterion("`STATUS` <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Byte> values) {
			addCriterion("`STATUS` in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Byte> values) {
			addCriterion("`STATUS` not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Byte value1, Byte value2) {
			addCriterion("`STATUS` between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Byte value1, Byte value2) {
			addCriterion("`STATUS` not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andBeginTimeIsNull() {
			addCriterion("BEGIN_TIME is null");
			return (Criteria) this;
		}

		public Criteria andBeginTimeIsNotNull() {
			addCriterion("BEGIN_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andBeginTimeEqualTo(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME =", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME <>", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME >", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME >=", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeLessThan(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME <", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME <=", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeIn(List<Date> values) {
			addCriterionForJDBCDate("BEGIN_TIME in", values, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("BEGIN_TIME not in", values, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("BEGIN_TIME between", value1, value2, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("BEGIN_TIME not between", value1, value2, "beginTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeIsNull() {
			addCriterion("END_TIME is null");
			return (Criteria) this;
		}

		public Criteria andEndTimeIsNotNull() {
			addCriterion("END_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andEndTimeEqualTo(Date value) {
			addCriterionForJDBCDate("END_TIME =", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("END_TIME <>", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("END_TIME >", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("END_TIME >=", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeLessThan(Date value) {
			addCriterionForJDBCDate("END_TIME <", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("END_TIME <=", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeIn(List<Date> values) {
			addCriterionForJDBCDate("END_TIME in", values, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("END_TIME not in", values, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("END_TIME between", value1, value2, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("END_TIME not between", value1, value2, "endTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("CREATE_TIME is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("CREATE_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("CREATE_TIME =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("CREATE_TIME <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("CREATE_TIME >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CREATE_TIME >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("CREATE_TIME <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("CREATE_TIME <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("CREATE_TIME in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("CREATE_TIME not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("CREATE_TIME between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("CREATE_TIME not between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeIsNull() {
			addCriterion("MODIFY_TIME is null");
			return (Criteria) this;
		}

		public Criteria andModifyTimeIsNotNull() {
			addCriterion("MODIFY_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andModifyTimeEqualTo(Date value) {
			addCriterion("MODIFY_TIME =", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeNotEqualTo(Date value) {
			addCriterion("MODIFY_TIME <>", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeGreaterThan(Date value) {
			addCriterion("MODIFY_TIME >", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("MODIFY_TIME >=", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeLessThan(Date value) {
			addCriterion("MODIFY_TIME <", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeLessThanOrEqualTo(Date value) {
			addCriterion("MODIFY_TIME <=", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeIn(List<Date> values) {
			addCriterion("MODIFY_TIME in", values, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeNotIn(List<Date> values) {
			addCriterion("MODIFY_TIME not in", values, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeBetween(Date value1, Date value2) {
			addCriterion("MODIFY_TIME between", value1, value2, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeNotBetween(Date value1, Date value2) {
			addCriterion("MODIFY_TIME not between", value1, value2, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andRelationIdIsNull() {
			addCriterion("RELATION_ID is null");
			return (Criteria) this;
		}

		public Criteria andRelationIdIsNotNull() {
			addCriterion("RELATION_ID is not null");
			return (Criteria) this;
		}

		public Criteria andRelationIdEqualTo(Integer value) {
			addCriterion("RELATION_ID =", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdNotEqualTo(Integer value) {
			addCriterion("RELATION_ID <>", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdGreaterThan(Integer value) {
			addCriterion("RELATION_ID >", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("RELATION_ID >=", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdLessThan(Integer value) {
			addCriterion("RELATION_ID <", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdLessThanOrEqualTo(Integer value) {
			addCriterion("RELATION_ID <=", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdIn(List<Integer> values) {
			addCriterion("RELATION_ID in", values, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdNotIn(List<Integer> values) {
			addCriterion("RELATION_ID not in", values, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdBetween(Integer value1, Integer value2) {
			addCriterion("RELATION_ID between", value1, value2, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdNotBetween(Integer value1, Integer value2) {
			addCriterion("RELATION_ID not between", value1, value2, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidIsNull() {
			addCriterion("RELATION_CHANNELID is null");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidIsNotNull() {
			addCriterion("RELATION_CHANNELID is not null");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidEqualTo(Integer value) {
			addCriterion("RELATION_CHANNELID =", value, "relationChannelid");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidNotEqualTo(Integer value) {
			addCriterion("RELATION_CHANNELID <>", value, "relationChannelid");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidGreaterThan(Integer value) {
			addCriterion("RELATION_CHANNELID >", value, "relationChannelid");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidGreaterThanOrEqualTo(Integer value) {
			addCriterion("RELATION_CHANNELID >=", value, "relationChannelid");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidLessThan(Integer value) {
			addCriterion("RELATION_CHANNELID <", value, "relationChannelid");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidLessThanOrEqualTo(Integer value) {
			addCriterion("RELATION_CHANNELID <=", value, "relationChannelid");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidIn(List<Integer> values) {
			addCriterion("RELATION_CHANNELID in", values, "relationChannelid");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidNotIn(List<Integer> values) {
			addCriterion("RELATION_CHANNELID not in", values, "relationChannelid");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidBetween(Integer value1, Integer value2) {
			addCriterion("RELATION_CHANNELID between", value1, value2, "relationChannelid");
			return (Criteria) this;
		}

		public Criteria andRelationChannelidNotBetween(Integer value1, Integer value2) {
			addCriterion("RELATION_CHANNELID not between", value1, value2, "relationChannelid");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return (Criteria) this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkIn(List<String> values) {
			addCriterion("REMARK in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotIn(List<String> values) {
			addCriterion("REMARK not in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andAutoflagIsNull() {
			addCriterion("AUTOFLAG is null");
			return (Criteria) this;
		}

		public Criteria andAutoflagIsNotNull() {
			addCriterion("AUTOFLAG is not null");
			return (Criteria) this;
		}

		public Criteria andAutoflagEqualTo(Byte value) {
			addCriterion("AUTOFLAG =", value, "autoflag");
			return (Criteria) this;
		}

		public Criteria andAutoflagNotEqualTo(Byte value) {
			addCriterion("AUTOFLAG <>", value, "autoflag");
			return (Criteria) this;
		}

		public Criteria andAutoflagGreaterThan(Byte value) {
			addCriterion("AUTOFLAG >", value, "autoflag");
			return (Criteria) this;
		}

		public Criteria andAutoflagGreaterThanOrEqualTo(Byte value) {
			addCriterion("AUTOFLAG >=", value, "autoflag");
			return (Criteria) this;
		}

		public Criteria andAutoflagLessThan(Byte value) {
			addCriterion("AUTOFLAG <", value, "autoflag");
			return (Criteria) this;
		}

		public Criteria andAutoflagLessThanOrEqualTo(Byte value) {
			addCriterion("AUTOFLAG <=", value, "autoflag");
			return (Criteria) this;
		}

		public Criteria andAutoflagIn(List<Byte> values) {
			addCriterion("AUTOFLAG in", values, "autoflag");
			return (Criteria) this;
		}

		public Criteria andAutoflagNotIn(List<Byte> values) {
			addCriterion("AUTOFLAG not in", values, "autoflag");
			return (Criteria) this;
		}

		public Criteria andAutoflagBetween(Byte value1, Byte value2) {
			addCriterion("AUTOFLAG between", value1, value2, "autoflag");
			return (Criteria) this;
		}

		public Criteria andAutoflagNotBetween(Byte value1, Byte value2) {
			addCriterion("AUTOFLAG not between", value1, value2, "autoflag");
			return (Criteria) this;
		}

		public Criteria andAdvancePayIsNull() {
			addCriterion("ADVANCE_PAY is null");
			return (Criteria) this;
		}

		public Criteria andAdvancePayIsNotNull() {
			addCriterion("ADVANCE_PAY is not null");
			return (Criteria) this;
		}

		public Criteria andAdvancePayEqualTo(BigDecimal value) {
			addCriterion("ADVANCE_PAY =", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayNotEqualTo(BigDecimal value) {
			addCriterion("ADVANCE_PAY <>", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayGreaterThan(BigDecimal value) {
			addCriterion("ADVANCE_PAY >", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ADVANCE_PAY >=", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayLessThan(BigDecimal value) {
			addCriterion("ADVANCE_PAY <", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ADVANCE_PAY <=", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayIn(List<BigDecimal> values) {
			addCriterion("ADVANCE_PAY in", values, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayNotIn(List<BigDecimal> values) {
			addCriterion("ADVANCE_PAY not in", values, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ADVANCE_PAY between", value1, value2, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ADVANCE_PAY not between", value1, value2, "advancePay");
			return (Criteria) this;
		}

		public Criteria andRemarkLikeInsensitive(String value) {
			addCriterion("upper(REMARK) like", value.toUpperCase(), "remark");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fos_order_channel
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fos_order_channel
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}