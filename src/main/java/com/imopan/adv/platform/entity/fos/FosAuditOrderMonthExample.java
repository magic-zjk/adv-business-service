package com.imopan.adv.platform.entity.fos;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FosAuditOrderMonthExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	protected Integer limitStart;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	protected Integer limitEnd;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public FosAuditOrderMonthExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public void setLimitStart(Integer limitStart) {
		this.limitStart = limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public Integer getLimitStart() {
		return limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public void setLimitEnd(Integer limitEnd) {
		this.limitEnd = limitEnd;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public Integer getLimitEnd() {
		return limitEnd;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdIsNull() {
			addCriterion("FOS_ORDER_MONTH_ID is null");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdIsNotNull() {
			addCriterion("FOS_ORDER_MONTH_ID is not null");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdEqualTo(Integer value) {
			addCriterion("FOS_ORDER_MONTH_ID =", value, "fosOrderMonthId");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdNotEqualTo(Integer value) {
			addCriterion("FOS_ORDER_MONTH_ID <>", value, "fosOrderMonthId");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdGreaterThan(Integer value) {
			addCriterion("FOS_ORDER_MONTH_ID >", value, "fosOrderMonthId");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("FOS_ORDER_MONTH_ID >=", value, "fosOrderMonthId");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdLessThan(Integer value) {
			addCriterion("FOS_ORDER_MONTH_ID <", value, "fosOrderMonthId");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdLessThanOrEqualTo(Integer value) {
			addCriterion("FOS_ORDER_MONTH_ID <=", value, "fosOrderMonthId");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdIn(List<Integer> values) {
			addCriterion("FOS_ORDER_MONTH_ID in", values, "fosOrderMonthId");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdNotIn(List<Integer> values) {
			addCriterion("FOS_ORDER_MONTH_ID not in", values, "fosOrderMonthId");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdBetween(Integer value1, Integer value2) {
			addCriterion("FOS_ORDER_MONTH_ID between", value1, value2,
					"fosOrderMonthId");
			return (Criteria) this;
		}

		public Criteria andFosOrderMonthIdNotBetween(Integer value1,
				Integer value2) {
			addCriterion("FOS_ORDER_MONTH_ID not between", value1, value2,
					"fosOrderMonthId");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmIsNull() {
			addCriterion("ORDER_SUBMIT_CONFIRM is null");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmIsNotNull() {
			addCriterion("ORDER_SUBMIT_CONFIRM is not null");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmEqualTo(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM =", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmNotEqualTo(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM <>", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmGreaterThan(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM >", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM >=", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmLessThan(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM <", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM <=", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmIn(List<Date> values) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM in", values,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmNotIn(List<Date> values) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM not in", values,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM between", value1,
					value2, "orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM not between", value1,
					value2, "orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountIsNull() {
			addCriterion("ORDER_UPDATE_O_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountIsNotNull() {
			addCriterion("ORDER_UPDATE_O_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountEqualTo(Integer value) {
			addCriterion("ORDER_UPDATE_O_COUNT =", value, "orderUpdateOCount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountNotEqualTo(Integer value) {
			addCriterion("ORDER_UPDATE_O_COUNT <>", value, "orderUpdateOCount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountGreaterThan(Integer value) {
			addCriterion("ORDER_UPDATE_O_COUNT >", value, "orderUpdateOCount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountGreaterThanOrEqualTo(Integer value) {
			addCriterion("ORDER_UPDATE_O_COUNT >=", value, "orderUpdateOCount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountLessThan(Integer value) {
			addCriterion("ORDER_UPDATE_O_COUNT <", value, "orderUpdateOCount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountLessThanOrEqualTo(Integer value) {
			addCriterion("ORDER_UPDATE_O_COUNT <=", value, "orderUpdateOCount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountIn(List<Integer> values) {
			addCriterion("ORDER_UPDATE_O_COUNT in", values, "orderUpdateOCount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountNotIn(List<Integer> values) {
			addCriterion("ORDER_UPDATE_O_COUNT not in", values,
					"orderUpdateOCount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountBetween(Integer value1,
				Integer value2) {
			addCriterion("ORDER_UPDATE_O_COUNT between", value1, value2,
					"orderUpdateOCount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOCountNotBetween(Integer value1,
				Integer value2) {
			addCriterion("ORDER_UPDATE_O_COUNT not between", value1, value2,
					"orderUpdateOCount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountIsNull() {
			addCriterion("ORDER_UPDATE_O_AMOUNT is null");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountIsNotNull() {
			addCriterion("ORDER_UPDATE_O_AMOUNT is not null");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountEqualTo(BigDecimal value) {
			addCriterion("ORDER_UPDATE_O_AMOUNT =", value, "orderUpdateOAmount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountNotEqualTo(BigDecimal value) {
			addCriterion("ORDER_UPDATE_O_AMOUNT <>", value,
					"orderUpdateOAmount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountGreaterThan(BigDecimal value) {
			addCriterion("ORDER_UPDATE_O_AMOUNT >", value, "orderUpdateOAmount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("ORDER_UPDATE_O_AMOUNT >=", value,
					"orderUpdateOAmount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountLessThan(BigDecimal value) {
			addCriterion("ORDER_UPDATE_O_AMOUNT <", value, "orderUpdateOAmount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ORDER_UPDATE_O_AMOUNT <=", value,
					"orderUpdateOAmount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountIn(List<BigDecimal> values) {
			addCriterion("ORDER_UPDATE_O_AMOUNT in", values,
					"orderUpdateOAmount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountNotIn(List<BigDecimal> values) {
			addCriterion("ORDER_UPDATE_O_AMOUNT not in", values,
					"orderUpdateOAmount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ORDER_UPDATE_O_AMOUNT between", value1, value2,
					"orderUpdateOAmount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateOAmountNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ORDER_UPDATE_O_AMOUNT not between", value1, value2,
					"orderUpdateOAmount");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutIsNull() {
			addCriterion("ORDER_UPDATE_CUT is null");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutIsNotNull() {
			addCriterion("ORDER_UPDATE_CUT is not null");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutEqualTo(BigDecimal value) {
			addCriterion("ORDER_UPDATE_CUT =", value, "orderUpdateCut");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutNotEqualTo(BigDecimal value) {
			addCriterion("ORDER_UPDATE_CUT <>", value, "orderUpdateCut");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutGreaterThan(BigDecimal value) {
			addCriterion("ORDER_UPDATE_CUT >", value, "orderUpdateCut");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ORDER_UPDATE_CUT >=", value, "orderUpdateCut");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutLessThan(BigDecimal value) {
			addCriterion("ORDER_UPDATE_CUT <", value, "orderUpdateCut");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ORDER_UPDATE_CUT <=", value, "orderUpdateCut");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutIn(List<BigDecimal> values) {
			addCriterion("ORDER_UPDATE_CUT in", values, "orderUpdateCut");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutNotIn(List<BigDecimal> values) {
			addCriterion("ORDER_UPDATE_CUT not in", values, "orderUpdateCut");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ORDER_UPDATE_CUT between", value1, value2,
					"orderUpdateCut");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateCutNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ORDER_UPDATE_CUT not between", value1, value2,
					"orderUpdateCut");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateIsNull() {
			addCriterion("ORDER_UPDATE_SALE_REBATE is null");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateIsNotNull() {
			addCriterion("ORDER_UPDATE_SALE_REBATE is not null");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateEqualTo(BigDecimal value) {
			addCriterion("ORDER_UPDATE_SALE_REBATE =", value,
					"orderUpdateSaleRebate");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateNotEqualTo(BigDecimal value) {
			addCriterion("ORDER_UPDATE_SALE_REBATE <>", value,
					"orderUpdateSaleRebate");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateGreaterThan(BigDecimal value) {
			addCriterion("ORDER_UPDATE_SALE_REBATE >", value,
					"orderUpdateSaleRebate");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("ORDER_UPDATE_SALE_REBATE >=", value,
					"orderUpdateSaleRebate");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateLessThan(BigDecimal value) {
			addCriterion("ORDER_UPDATE_SALE_REBATE <", value,
					"orderUpdateSaleRebate");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateLessThanOrEqualTo(
				BigDecimal value) {
			addCriterion("ORDER_UPDATE_SALE_REBATE <=", value,
					"orderUpdateSaleRebate");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateIn(List<BigDecimal> values) {
			addCriterion("ORDER_UPDATE_SALE_REBATE in", values,
					"orderUpdateSaleRebate");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateNotIn(List<BigDecimal> values) {
			addCriterion("ORDER_UPDATE_SALE_REBATE not in", values,
					"orderUpdateSaleRebate");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ORDER_UPDATE_SALE_REBATE between", value1, value2,
					"orderUpdateSaleRebate");
			return (Criteria) this;
		}

		public Criteria andOrderUpdateSaleRebateNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ORDER_UPDATE_SALE_REBATE not between", value1,
					value2, "orderUpdateSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusIsNull() {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusEqualTo(Byte value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS =", value,
					"financialSubmitOrderStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusNotEqualTo(Byte value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS <>", value,
					"financialSubmitOrderStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusGreaterThan(Byte value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS >", value,
					"financialSubmitOrderStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusGreaterThanOrEqualTo(
				Byte value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS >=", value,
					"financialSubmitOrderStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusLessThan(Byte value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS <", value,
					"financialSubmitOrderStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusLessThanOrEqualTo(
				Byte value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS <=", value,
					"financialSubmitOrderStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusIn(List<Byte> values) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS in", values,
					"financialSubmitOrderStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusNotIn(List<Byte> values) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS not in", values,
					"financialSubmitOrderStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusBetween(Byte value1,
				Byte value2) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS between", value1,
					value2, "financialSubmitOrderStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderStatusNotBetween(Byte value1,
				Byte value2) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_STATUS not between", value1,
					value2, "financialSubmitOrderStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountIsNull() {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountEqualTo(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT =", value,
					"financialSubmitOCount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountNotEqualTo(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT <>", value,
					"financialSubmitOCount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountGreaterThan(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT >", value,
					"financialSubmitOCount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountGreaterThanOrEqualTo(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT >=", value,
					"financialSubmitOCount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountLessThan(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT <", value,
					"financialSubmitOCount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountLessThanOrEqualTo(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT <=", value,
					"financialSubmitOCount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountIn(List<Integer> values) {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT in", values,
					"financialSubmitOCount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountNotIn(List<Integer> values) {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT not in", values,
					"financialSubmitOCount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountBetween(Integer value1,
				Integer value2) {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT between", value1, value2,
					"financialSubmitOCount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOCountNotBetween(Integer value1,
				Integer value2) {
			addCriterion("FINANCIAL_SUBMIT_O_COUNT not between", value1,
					value2, "financialSubmitOCount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountIsNull() {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT =", value,
					"financialSubmitOAmount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountNotEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT <>", value,
					"financialSubmitOAmount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountGreaterThan(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT >", value,
					"financialSubmitOAmount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT >=", value,
					"financialSubmitOAmount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountLessThan(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT <", value,
					"financialSubmitOAmount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountLessThanOrEqualTo(
				BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT <=", value,
					"financialSubmitOAmount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountIn(List<BigDecimal> values) {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT in", values,
					"financialSubmitOAmount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountNotIn(List<BigDecimal> values) {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT not in", values,
					"financialSubmitOAmount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT between", value1, value2,
					"financialSubmitOAmount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOAmountNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("FINANCIAL_SUBMIT_O_AMOUNT not between", value1,
					value2, "financialSubmitOAmount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutIsNull() {
			addCriterion("FINANCIAL_SUBMIT_CUT is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_CUT is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_CUT =", value, "financialSubmitCut");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutNotEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_CUT <>", value, "financialSubmitCut");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutGreaterThan(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_CUT >", value, "financialSubmitCut");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_CUT >=", value, "financialSubmitCut");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutLessThan(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_CUT <", value, "financialSubmitCut");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutLessThanOrEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_CUT <=", value, "financialSubmitCut");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutIn(List<BigDecimal> values) {
			addCriterion("FINANCIAL_SUBMIT_CUT in", values,
					"financialSubmitCut");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutNotIn(List<BigDecimal> values) {
			addCriterion("FINANCIAL_SUBMIT_CUT not in", values,
					"financialSubmitCut");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("FINANCIAL_SUBMIT_CUT between", value1, value2,
					"financialSubmitCut");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCutNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("FINANCIAL_SUBMIT_CUT not between", value1, value2,
					"financialSubmitCut");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateIsNull() {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE =", value,
					"financialSubmitSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateNotEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE <>", value,
					"financialSubmitSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateGreaterThan(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE >", value,
					"financialSubmitSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE >=", value,
					"financialSubmitSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateLessThan(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE <", value,
					"financialSubmitSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateLessThanOrEqualTo(
				BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE <=", value,
					"financialSubmitSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateIn(List<BigDecimal> values) {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE in", values,
					"financialSubmitSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateNotIn(
				List<BigDecimal> values) {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE not in", values,
					"financialSubmitSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE between", value1,
					value2, "financialSubmitSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitSaleRebateNotBetween(
				BigDecimal value1, BigDecimal value2) {
			addCriterion("FINANCIAL_SUBMIT_SALE_REBATE not between", value1,
					value2, "financialSubmitSaleRebate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateIsNull() {
			addCriterion("FINANCIAL_SUBMIT_ORDER_DATE is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_ORDER_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateEqualTo(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_ORDER_DATE =", value,
					"financialSubmitOrderDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_ORDER_DATE <>", value,
					"financialSubmitOrderDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateGreaterThan(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_ORDER_DATE >", value,
					"financialSubmitOrderDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateGreaterThanOrEqualTo(
				Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_ORDER_DATE >=", value,
					"financialSubmitOrderDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateLessThan(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_ORDER_DATE <", value,
					"financialSubmitOrderDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_ORDER_DATE <=", value,
					"financialSubmitOrderDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateIn(List<Date> values) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_ORDER_DATE in", values,
					"financialSubmitOrderDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_ORDER_DATE not in",
					values, "financialSubmitOrderDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateBetween(Date value1,
				Date value2) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_ORDER_DATE between",
					value1, value2, "financialSubmitOrderDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderDateNotBetween(Date value1,
				Date value2) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_ORDER_DATE not between",
					value1, value2, "financialSubmitOrderDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeIsNull() {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeEqualTo(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME =", value,
					"financialSubmitOrderNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeNotEqualTo(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME <>", value,
					"financialSubmitOrderNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeGreaterThan(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME >", value,
					"financialSubmitOrderNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeGreaterThanOrEqualTo(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME >=", value,
					"financialSubmitOrderNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeLessThan(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME <", value,
					"financialSubmitOrderNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeLessThanOrEqualTo(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME <=", value,
					"financialSubmitOrderNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeIn(
				List<Integer> values) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME in", values,
					"financialSubmitOrderNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeNotIn(
				List<Integer> values) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME not in",
					values, "financialSubmitOrderNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeBetween(
				Integer value1, Integer value2) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME between",
					value1, value2, "financialSubmitOrderNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughTimeNotBetween(
				Integer value1, Integer value2) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME not between",
					value1, value2, "financialSubmitOrderNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonIsNull() {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonEqualTo(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON =", value,
					"financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonNotEqualTo(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON <>", value,
					"financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonGreaterThan(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON >", value,
					"financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonGreaterThanOrEqualTo(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON >=", value,
					"financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonLessThan(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON <", value,
					"financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonLessThanOrEqualTo(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON <=", value,
					"financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonLike(String value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON like",
					value, "financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonNotLike(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON not like",
					value, "financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonIn(
				List<String> values) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON in", values,
					"financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonNotIn(
				List<String> values) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON not in",
					values, "financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonBetween(
				String value1, String value2) {
			addCriterion("FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON between",
					value1, value2, "financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonNotBetween(
				String value1, String value2) {
			addCriterion(
					"FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON not between",
					value1, value2, "financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusIsNull() {
			addCriterion("DRAW_BILL_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusIsNotNull() {
			addCriterion("DRAW_BILL_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusEqualTo(Byte value) {
			addCriterion("DRAW_BILL_STATUS =", value, "drawBillStatus");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusNotEqualTo(Byte value) {
			addCriterion("DRAW_BILL_STATUS <>", value, "drawBillStatus");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusGreaterThan(Byte value) {
			addCriterion("DRAW_BILL_STATUS >", value, "drawBillStatus");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusGreaterThanOrEqualTo(Byte value) {
			addCriterion("DRAW_BILL_STATUS >=", value, "drawBillStatus");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusLessThan(Byte value) {
			addCriterion("DRAW_BILL_STATUS <", value, "drawBillStatus");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusLessThanOrEqualTo(Byte value) {
			addCriterion("DRAW_BILL_STATUS <=", value, "drawBillStatus");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusIn(List<Byte> values) {
			addCriterion("DRAW_BILL_STATUS in", values, "drawBillStatus");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusNotIn(List<Byte> values) {
			addCriterion("DRAW_BILL_STATUS not in", values, "drawBillStatus");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusBetween(Byte value1, Byte value2) {
			addCriterion("DRAW_BILL_STATUS between", value1, value2,
					"drawBillStatus");
			return (Criteria) this;
		}

		public Criteria andDrawBillStatusNotBetween(Byte value1, Byte value2) {
			addCriterion("DRAW_BILL_STATUS not between", value1, value2,
					"drawBillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOrderNotthroughReasonLikeInsensitive(
				String value) {
			addCriterion(
					"upper(FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON) like",
					value.toUpperCase(), "financialSubmitOrderNotthroughReason");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fos_audit_order_month
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fos_audit_order_month
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}