package com.imopan.adv.platform.entity.fos;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FosAuditCpDayExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	protected Integer limitStart;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	protected Integer limitEnd;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public FosAuditCpDayExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public void setLimitStart(Integer limitStart) {
		this.limitStart = limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public Integer getLimitStart() {
		return limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public void setLimitEnd(Integer limitEnd) {
		this.limitEnd = limitEnd;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public Integer getLimitEnd() {
		return limitEnd;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOcDayIdIsNull() {
			addCriterion("OC_DAY_ID is null");
			return (Criteria) this;
		}

		public Criteria andOcDayIdIsNotNull() {
			addCriterion("OC_DAY_ID is not null");
			return (Criteria) this;
		}

		public Criteria andOcDayIdEqualTo(Integer value) {
			addCriterion("OC_DAY_ID =", value, "ocDayId");
			return (Criteria) this;
		}

		public Criteria andOcDayIdNotEqualTo(Integer value) {
			addCriterion("OC_DAY_ID <>", value, "ocDayId");
			return (Criteria) this;
		}

		public Criteria andOcDayIdGreaterThan(Integer value) {
			addCriterion("OC_DAY_ID >", value, "ocDayId");
			return (Criteria) this;
		}

		public Criteria andOcDayIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("OC_DAY_ID >=", value, "ocDayId");
			return (Criteria) this;
		}

		public Criteria andOcDayIdLessThan(Integer value) {
			addCriterion("OC_DAY_ID <", value, "ocDayId");
			return (Criteria) this;
		}

		public Criteria andOcDayIdLessThanOrEqualTo(Integer value) {
			addCriterion("OC_DAY_ID <=", value, "ocDayId");
			return (Criteria) this;
		}

		public Criteria andOcDayIdIn(List<Integer> values) {
			addCriterion("OC_DAY_ID in", values, "ocDayId");
			return (Criteria) this;
		}

		public Criteria andOcDayIdNotIn(List<Integer> values) {
			addCriterion("OC_DAY_ID not in", values, "ocDayId");
			return (Criteria) this;
		}

		public Criteria andOcDayIdBetween(Integer value1, Integer value2) {
			addCriterion("OC_DAY_ID between", value1, value2, "ocDayId");
			return (Criteria) this;
		}

		public Criteria andOcDayIdNotBetween(Integer value1, Integer value2) {
			addCriterion("OC_DAY_ID not between", value1, value2, "ocDayId");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmIsNull() {
			addCriterion("ORDER_SUBMIT_CONFIRM is null");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmIsNotNull() {
			addCriterion("ORDER_SUBMIT_CONFIRM is not null");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmEqualTo(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM =", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmNotEqualTo(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM <>", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmGreaterThan(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM >", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM >=", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmLessThan(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM <", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM <=", value,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmIn(List<Date> values) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM in", values,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmNotIn(List<Date> values) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM not in", values,
					"orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM between", value1,
					value2, "orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andOrderSubmitConfirmNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ORDER_SUBMIT_CONFIRM not between", value1,
					value2, "orderSubmitConfirm");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitIsNull() {
			addCriterion("CP_SUBMIT_PAYUNIT is null");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitIsNotNull() {
			addCriterion("CP_SUBMIT_PAYUNIT is not null");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitEqualTo(BigDecimal value) {
			addCriterion("CP_SUBMIT_PAYUNIT =", value, "cpSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitNotEqualTo(BigDecimal value) {
			addCriterion("CP_SUBMIT_PAYUNIT <>", value, "cpSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitGreaterThan(BigDecimal value) {
			addCriterion("CP_SUBMIT_PAYUNIT >", value, "cpSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("CP_SUBMIT_PAYUNIT >=", value, "cpSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitLessThan(BigDecimal value) {
			addCriterion("CP_SUBMIT_PAYUNIT <", value, "cpSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitLessThanOrEqualTo(BigDecimal value) {
			addCriterion("CP_SUBMIT_PAYUNIT <=", value, "cpSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitIn(List<BigDecimal> values) {
			addCriterion("CP_SUBMIT_PAYUNIT in", values, "cpSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitNotIn(List<BigDecimal> values) {
			addCriterion("CP_SUBMIT_PAYUNIT not in", values, "cpSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("CP_SUBMIT_PAYUNIT between", value1, value2,
					"cpSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andCpSubmitPayunitNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("CP_SUBMIT_PAYUNIT not between", value1, value2,
					"cpSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountIsNull() {
			addCriterion("CP_SUBMIT_OCOUNT is null");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountIsNotNull() {
			addCriterion("CP_SUBMIT_OCOUNT is not null");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountEqualTo(Integer value) {
			addCriterion("CP_SUBMIT_OCOUNT =", value, "cpSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountNotEqualTo(Integer value) {
			addCriterion("CP_SUBMIT_OCOUNT <>", value, "cpSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountGreaterThan(Integer value) {
			addCriterion("CP_SUBMIT_OCOUNT >", value, "cpSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountGreaterThanOrEqualTo(Integer value) {
			addCriterion("CP_SUBMIT_OCOUNT >=", value, "cpSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountLessThan(Integer value) {
			addCriterion("CP_SUBMIT_OCOUNT <", value, "cpSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountLessThanOrEqualTo(Integer value) {
			addCriterion("CP_SUBMIT_OCOUNT <=", value, "cpSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountIn(List<Integer> values) {
			addCriterion("CP_SUBMIT_OCOUNT in", values, "cpSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountNotIn(List<Integer> values) {
			addCriterion("CP_SUBMIT_OCOUNT not in", values, "cpSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountBetween(Integer value1, Integer value2) {
			addCriterion("CP_SUBMIT_OCOUNT between", value1, value2,
					"cpSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOcountNotBetween(Integer value1,
				Integer value2) {
			addCriterion("CP_SUBMIT_OCOUNT not between", value1, value2,
					"cpSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountIsNull() {
			addCriterion("CP_SUBMIT_OAMOUNT is null");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountIsNotNull() {
			addCriterion("CP_SUBMIT_OAMOUNT is not null");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountEqualTo(BigDecimal value) {
			addCriterion("CP_SUBMIT_OAMOUNT =", value, "cpSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountNotEqualTo(BigDecimal value) {
			addCriterion("CP_SUBMIT_OAMOUNT <>", value, "cpSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountGreaterThan(BigDecimal value) {
			addCriterion("CP_SUBMIT_OAMOUNT >", value, "cpSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("CP_SUBMIT_OAMOUNT >=", value, "cpSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountLessThan(BigDecimal value) {
			addCriterion("CP_SUBMIT_OAMOUNT <", value, "cpSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountLessThanOrEqualTo(BigDecimal value) {
			addCriterion("CP_SUBMIT_OAMOUNT <=", value, "cpSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountIn(List<BigDecimal> values) {
			addCriterion("CP_SUBMIT_OAMOUNT in", values, "cpSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountNotIn(List<BigDecimal> values) {
			addCriterion("CP_SUBMIT_OAMOUNT not in", values, "cpSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("CP_SUBMIT_OAMOUNT between", value1, value2,
					"cpSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andCpSubmitOamountNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("CP_SUBMIT_OAMOUNT not between", value1, value2,
					"cpSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusIsNull() {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusEqualTo(Byte value) {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS =", value,
					"financialSubmitCpStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusNotEqualTo(Byte value) {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS <>", value,
					"financialSubmitCpStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusGreaterThan(Byte value) {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS >", value,
					"financialSubmitCpStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusGreaterThanOrEqualTo(
				Byte value) {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS >=", value,
					"financialSubmitCpStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusLessThan(Byte value) {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS <", value,
					"financialSubmitCpStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusLessThanOrEqualTo(Byte value) {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS <=", value,
					"financialSubmitCpStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusIn(List<Byte> values) {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS in", values,
					"financialSubmitCpStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusNotIn(List<Byte> values) {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS not in", values,
					"financialSubmitCpStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusBetween(Byte value1,
				Byte value2) {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS between", value1, value2,
					"financialSubmitCpStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpStatusNotBetween(Byte value1,
				Byte value2) {
			addCriterion("FINANCIAL_SUBMIT_CP_STATUS not between", value1,
					value2, "financialSubmitCpStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitIsNull() {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT =", value,
					"financialSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitNotEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT <>", value,
					"financialSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitGreaterThan(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT >", value,
					"financialSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT >=", value,
					"financialSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitLessThan(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT <", value,
					"financialSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitLessThanOrEqualTo(
				BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT <=", value,
					"financialSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitIn(List<BigDecimal> values) {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT in", values,
					"financialSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitNotIn(List<BigDecimal> values) {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT not in", values,
					"financialSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT between", value1, value2,
					"financialSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitPayunitNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("FINANCIAL_SUBMIT_PAYUNIT not between", value1,
					value2, "financialSubmitPayunit");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountIsNull() {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountEqualTo(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT =", value,
					"financialSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountNotEqualTo(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT <>", value,
					"financialSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountGreaterThan(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT >", value,
					"financialSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountGreaterThanOrEqualTo(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT >=", value,
					"financialSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountLessThan(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT <", value,
					"financialSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountLessThanOrEqualTo(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT <=", value,
					"financialSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountIn(List<Integer> values) {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT in", values,
					"financialSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountNotIn(List<Integer> values) {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT not in", values,
					"financialSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountBetween(Integer value1,
				Integer value2) {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT between", value1, value2,
					"financialSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOcountNotBetween(Integer value1,
				Integer value2) {
			addCriterion("FINANCIAL_SUBMIT_OCOUNT not between", value1, value2,
					"financialSubmitOcount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountIsNull() {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT =", value,
					"financialSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountNotEqualTo(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT <>", value,
					"financialSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountGreaterThan(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT >", value,
					"financialSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountGreaterThanOrEqualTo(
				BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT >=", value,
					"financialSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountLessThan(BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT <", value,
					"financialSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountLessThanOrEqualTo(
				BigDecimal value) {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT <=", value,
					"financialSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountIn(List<BigDecimal> values) {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT in", values,
					"financialSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountNotIn(List<BigDecimal> values) {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT not in", values,
					"financialSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT between", value1, value2,
					"financialSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitOamountNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("FINANCIAL_SUBMIT_OAMOUNT not between", value1,
					value2, "financialSubmitOamount");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateIsNull() {
			addCriterion("FINANCIAL_SUBMIT_CP_DATE is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_CP_DATE is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateEqualTo(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_CP_DATE =", value,
					"financialSubmitCpDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_CP_DATE <>", value,
					"financialSubmitCpDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateGreaterThan(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_CP_DATE >", value,
					"financialSubmitCpDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_CP_DATE >=", value,
					"financialSubmitCpDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateLessThan(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_CP_DATE <", value,
					"financialSubmitCpDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_CP_DATE <=", value,
					"financialSubmitCpDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateIn(List<Date> values) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_CP_DATE in", values,
					"financialSubmitCpDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_CP_DATE not in", values,
					"financialSubmitCpDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_CP_DATE between", value1,
					value2, "financialSubmitCpDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpDateNotBetween(Date value1,
				Date value2) {
			addCriterionForJDBCDate("FINANCIAL_SUBMIT_CP_DATE not between",
					value1, value2, "financialSubmitCpDate");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeIsNull() {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeEqualTo(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME =", value,
					"financialSubmitCpNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeNotEqualTo(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME <>", value,
					"financialSubmitCpNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeGreaterThan(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME >", value,
					"financialSubmitCpNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeGreaterThanOrEqualTo(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME >=", value,
					"financialSubmitCpNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeLessThan(Integer value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME <", value,
					"financialSubmitCpNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeLessThanOrEqualTo(
				Integer value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME <=", value,
					"financialSubmitCpNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeIn(
				List<Integer> values) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME in", values,
					"financialSubmitCpNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeNotIn(
				List<Integer> values) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME not in", values,
					"financialSubmitCpNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeBetween(
				Integer value1, Integer value2) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME between", value1,
					value2, "financialSubmitCpNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughTimeNotBetween(
				Integer value1, Integer value2) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME not between",
					value1, value2, "financialSubmitCpNotthroughTime");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonIsNull() {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON is null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonIsNotNull() {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonEqualTo(String value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON =", value,
					"financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonNotEqualTo(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON <>", value,
					"financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonGreaterThan(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON >", value,
					"financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonGreaterThanOrEqualTo(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON >=", value,
					"financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonLessThan(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON <", value,
					"financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonLessThanOrEqualTo(
				String value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON <=", value,
					"financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonLike(String value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON like", value,
					"financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonNotLike(String value) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON not like",
					value, "financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonIn(
				List<String> values) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON in", values,
					"financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonNotIn(
				List<String> values) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON not in",
					values, "financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonBetween(
				String value1, String value2) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON between",
					value1, value2, "financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonNotBetween(
				String value1, String value2) {
			addCriterion("FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON not between",
					value1, value2, "financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountIsNull() {
			addCriterion("AVG_MONTH_OCOUNT is null");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountIsNotNull() {
			addCriterion("AVG_MONTH_OCOUNT is not null");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountEqualTo(Integer value) {
			addCriterion("AVG_MONTH_OCOUNT =", value, "avgMonthOcount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountNotEqualTo(Integer value) {
			addCriterion("AVG_MONTH_OCOUNT <>", value, "avgMonthOcount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountGreaterThan(Integer value) {
			addCriterion("AVG_MONTH_OCOUNT >", value, "avgMonthOcount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountGreaterThanOrEqualTo(Integer value) {
			addCriterion("AVG_MONTH_OCOUNT >=", value, "avgMonthOcount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountLessThan(Integer value) {
			addCriterion("AVG_MONTH_OCOUNT <", value, "avgMonthOcount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountLessThanOrEqualTo(Integer value) {
			addCriterion("AVG_MONTH_OCOUNT <=", value, "avgMonthOcount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountIn(List<Integer> values) {
			addCriterion("AVG_MONTH_OCOUNT in", values, "avgMonthOcount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountNotIn(List<Integer> values) {
			addCriterion("AVG_MONTH_OCOUNT not in", values, "avgMonthOcount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountBetween(Integer value1, Integer value2) {
			addCriterion("AVG_MONTH_OCOUNT between", value1, value2,
					"avgMonthOcount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOcountNotBetween(Integer value1,
				Integer value2) {
			addCriterion("AVG_MONTH_OCOUNT not between", value1, value2,
					"avgMonthOcount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountIsNull() {
			addCriterion("AVG_MONTH_OAMOUNT is null");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountIsNotNull() {
			addCriterion("AVG_MONTH_OAMOUNT is not null");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountEqualTo(BigDecimal value) {
			addCriterion("AVG_MONTH_OAMOUNT =", value, "avgMonthOamount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountNotEqualTo(BigDecimal value) {
			addCriterion("AVG_MONTH_OAMOUNT <>", value, "avgMonthOamount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountGreaterThan(BigDecimal value) {
			addCriterion("AVG_MONTH_OAMOUNT >", value, "avgMonthOamount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("AVG_MONTH_OAMOUNT >=", value, "avgMonthOamount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountLessThan(BigDecimal value) {
			addCriterion("AVG_MONTH_OAMOUNT <", value, "avgMonthOamount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountLessThanOrEqualTo(BigDecimal value) {
			addCriterion("AVG_MONTH_OAMOUNT <=", value, "avgMonthOamount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountIn(List<BigDecimal> values) {
			addCriterion("AVG_MONTH_OAMOUNT in", values, "avgMonthOamount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountNotIn(List<BigDecimal> values) {
			addCriterion("AVG_MONTH_OAMOUNT not in", values, "avgMonthOamount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("AVG_MONTH_OAMOUNT between", value1, value2,
					"avgMonthOamount");
			return (Criteria) this;
		}

		public Criteria andAvgMonthOamountNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("AVG_MONTH_OAMOUNT not between", value1, value2,
					"avgMonthOamount");
			return (Criteria) this;
		}

		public Criteria andAvgCutIsNull() {
			addCriterion("AVG_CUT is null");
			return (Criteria) this;
		}

		public Criteria andAvgCutIsNotNull() {
			addCriterion("AVG_CUT is not null");
			return (Criteria) this;
		}

		public Criteria andAvgCutEqualTo(BigDecimal value) {
			addCriterion("AVG_CUT =", value, "avgCut");
			return (Criteria) this;
		}

		public Criteria andAvgCutNotEqualTo(BigDecimal value) {
			addCriterion("AVG_CUT <>", value, "avgCut");
			return (Criteria) this;
		}

		public Criteria andAvgCutGreaterThan(BigDecimal value) {
			addCriterion("AVG_CUT >", value, "avgCut");
			return (Criteria) this;
		}

		public Criteria andAvgCutGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("AVG_CUT >=", value, "avgCut");
			return (Criteria) this;
		}

		public Criteria andAvgCutLessThan(BigDecimal value) {
			addCriterion("AVG_CUT <", value, "avgCut");
			return (Criteria) this;
		}

		public Criteria andAvgCutLessThanOrEqualTo(BigDecimal value) {
			addCriterion("AVG_CUT <=", value, "avgCut");
			return (Criteria) this;
		}

		public Criteria andAvgCutIn(List<BigDecimal> values) {
			addCriterion("AVG_CUT in", values, "avgCut");
			return (Criteria) this;
		}

		public Criteria andAvgCutNotIn(List<BigDecimal> values) {
			addCriterion("AVG_CUT not in", values, "avgCut");
			return (Criteria) this;
		}

		public Criteria andAvgCutBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("AVG_CUT between", value1, value2, "avgCut");
			return (Criteria) this;
		}

		public Criteria andAvgCutNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("AVG_CUT not between", value1, value2, "avgCut");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateIsNull() {
			addCriterion("AVG_SALE_REBATE is null");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateIsNotNull() {
			addCriterion("AVG_SALE_REBATE is not null");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateEqualTo(BigDecimal value) {
			addCriterion("AVG_SALE_REBATE =", value, "avgSaleRebate");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateNotEqualTo(BigDecimal value) {
			addCriterion("AVG_SALE_REBATE <>", value, "avgSaleRebate");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateGreaterThan(BigDecimal value) {
			addCriterion("AVG_SALE_REBATE >", value, "avgSaleRebate");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("AVG_SALE_REBATE >=", value, "avgSaleRebate");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateLessThan(BigDecimal value) {
			addCriterion("AVG_SALE_REBATE <", value, "avgSaleRebate");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateLessThanOrEqualTo(BigDecimal value) {
			addCriterion("AVG_SALE_REBATE <=", value, "avgSaleRebate");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateIn(List<BigDecimal> values) {
			addCriterion("AVG_SALE_REBATE in", values, "avgSaleRebate");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateNotIn(List<BigDecimal> values) {
			addCriterion("AVG_SALE_REBATE not in", values, "avgSaleRebate");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("AVG_SALE_REBATE between", value1, value2,
					"avgSaleRebate");
			return (Criteria) this;
		}

		public Criteria andAvgSaleRebateNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("AVG_SALE_REBATE not between", value1, value2,
					"avgSaleRebate");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyIsNull() {
			addCriterion("AVG_MONEY is null");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyIsNotNull() {
			addCriterion("AVG_MONEY is not null");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyEqualTo(BigDecimal value) {
			addCriterion("AVG_MONEY =", value, "avgMoney");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyNotEqualTo(BigDecimal value) {
			addCriterion("AVG_MONEY <>", value, "avgMoney");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyGreaterThan(BigDecimal value) {
			addCriterion("AVG_MONEY >", value, "avgMoney");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("AVG_MONEY >=", value, "avgMoney");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyLessThan(BigDecimal value) {
			addCriterion("AVG_MONEY <", value, "avgMoney");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("AVG_MONEY <=", value, "avgMoney");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyIn(List<BigDecimal> values) {
			addCriterion("AVG_MONEY in", values, "avgMoney");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyNotIn(List<BigDecimal> values) {
			addCriterion("AVG_MONEY not in", values, "avgMoney");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("AVG_MONEY between", value1, value2, "avgMoney");
			return (Criteria) this;
		}

		public Criteria andAvgMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("AVG_MONEY not between", value1, value2, "avgMoney");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyIsNull() {
			addCriterion("AVG_RETURN_MONEY is null");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyIsNotNull() {
			addCriterion("AVG_RETURN_MONEY is not null");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyEqualTo(BigDecimal value) {
			addCriterion("AVG_RETURN_MONEY =", value, "avgReturnMoney");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyNotEqualTo(BigDecimal value) {
			addCriterion("AVG_RETURN_MONEY <>", value, "avgReturnMoney");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyGreaterThan(BigDecimal value) {
			addCriterion("AVG_RETURN_MONEY >", value, "avgReturnMoney");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("AVG_RETURN_MONEY >=", value, "avgReturnMoney");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyLessThan(BigDecimal value) {
			addCriterion("AVG_RETURN_MONEY <", value, "avgReturnMoney");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyLessThanOrEqualTo(BigDecimal value) {
			addCriterion("AVG_RETURN_MONEY <=", value, "avgReturnMoney");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyIn(List<BigDecimal> values) {
			addCriterion("AVG_RETURN_MONEY in", values, "avgReturnMoney");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyNotIn(List<BigDecimal> values) {
			addCriterion("AVG_RETURN_MONEY not in", values, "avgReturnMoney");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("AVG_RETURN_MONEY between", value1, value2,
					"avgReturnMoney");
			return (Criteria) this;
		}

		public Criteria andAvgReturnMoneyNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("AVG_RETURN_MONEY not between", value1, value2,
					"avgReturnMoney");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusIsNull() {
			addCriterion("ORDER_MONTH_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusIsNotNull() {
			addCriterion("ORDER_MONTH_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusEqualTo(Byte value) {
			addCriterion("ORDER_MONTH_STATUS =", value, "orderMonthStatus");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusNotEqualTo(Byte value) {
			addCriterion("ORDER_MONTH_STATUS <>", value, "orderMonthStatus");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusGreaterThan(Byte value) {
			addCriterion("ORDER_MONTH_STATUS >", value, "orderMonthStatus");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusGreaterThanOrEqualTo(Byte value) {
			addCriterion("ORDER_MONTH_STATUS >=", value, "orderMonthStatus");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusLessThan(Byte value) {
			addCriterion("ORDER_MONTH_STATUS <", value, "orderMonthStatus");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusLessThanOrEqualTo(Byte value) {
			addCriterion("ORDER_MONTH_STATUS <=", value, "orderMonthStatus");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusIn(List<Byte> values) {
			addCriterion("ORDER_MONTH_STATUS in", values, "orderMonthStatus");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusNotIn(List<Byte> values) {
			addCriterion("ORDER_MONTH_STATUS not in", values,
					"orderMonthStatus");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusBetween(Byte value1, Byte value2) {
			addCriterion("ORDER_MONTH_STATUS between", value1, value2,
					"orderMonthStatus");
			return (Criteria) this;
		}

		public Criteria andOrderMonthStatusNotBetween(Byte value1, Byte value2) {
			addCriterion("ORDER_MONTH_STATUS not between", value1, value2,
					"orderMonthStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusIsNull() {
			addCriterion("FINANCIAL_DRAWBILL_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusIsNotNull() {
			addCriterion("FINANCIAL_DRAWBILL_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusEqualTo(Byte value) {
			addCriterion("FINANCIAL_DRAWBILL_STATUS =", value,
					"financialDrawbillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusNotEqualTo(Byte value) {
			addCriterion("FINANCIAL_DRAWBILL_STATUS <>", value,
					"financialDrawbillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusGreaterThan(Byte value) {
			addCriterion("FINANCIAL_DRAWBILL_STATUS >", value,
					"financialDrawbillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusGreaterThanOrEqualTo(
				Byte value) {
			addCriterion("FINANCIAL_DRAWBILL_STATUS >=", value,
					"financialDrawbillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusLessThan(Byte value) {
			addCriterion("FINANCIAL_DRAWBILL_STATUS <", value,
					"financialDrawbillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusLessThanOrEqualTo(Byte value) {
			addCriterion("FINANCIAL_DRAWBILL_STATUS <=", value,
					"financialDrawbillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusIn(List<Byte> values) {
			addCriterion("FINANCIAL_DRAWBILL_STATUS in", values,
					"financialDrawbillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusNotIn(List<Byte> values) {
			addCriterion("FINANCIAL_DRAWBILL_STATUS not in", values,
					"financialDrawbillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusBetween(Byte value1,
				Byte value2) {
			addCriterion("FINANCIAL_DRAWBILL_STATUS between", value1, value2,
					"financialDrawbillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialDrawbillStatusNotBetween(Byte value1,
				Byte value2) {
			addCriterion("FINANCIAL_DRAWBILL_STATUS not between", value1,
					value2, "financialDrawbillStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusIsNull() {
			addCriterion("FINANCIAL_RECEIPT_STATUS is null");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusIsNotNull() {
			addCriterion("FINANCIAL_RECEIPT_STATUS is not null");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusEqualTo(Byte value) {
			addCriterion("FINANCIAL_RECEIPT_STATUS =", value,
					"financialReceiptStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusNotEqualTo(Byte value) {
			addCriterion("FINANCIAL_RECEIPT_STATUS <>", value,
					"financialReceiptStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusGreaterThan(Byte value) {
			addCriterion("FINANCIAL_RECEIPT_STATUS >", value,
					"financialReceiptStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusGreaterThanOrEqualTo(Byte value) {
			addCriterion("FINANCIAL_RECEIPT_STATUS >=", value,
					"financialReceiptStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusLessThan(Byte value) {
			addCriterion("FINANCIAL_RECEIPT_STATUS <", value,
					"financialReceiptStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusLessThanOrEqualTo(Byte value) {
			addCriterion("FINANCIAL_RECEIPT_STATUS <=", value,
					"financialReceiptStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusIn(List<Byte> values) {
			addCriterion("FINANCIAL_RECEIPT_STATUS in", values,
					"financialReceiptStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusNotIn(List<Byte> values) {
			addCriterion("FINANCIAL_RECEIPT_STATUS not in", values,
					"financialReceiptStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusBetween(Byte value1,
				Byte value2) {
			addCriterion("FINANCIAL_RECEIPT_STATUS between", value1, value2,
					"financialReceiptStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialReceiptStatusNotBetween(Byte value1,
				Byte value2) {
			addCriterion("FINANCIAL_RECEIPT_STATUS not between", value1,
					value2, "financialReceiptStatus");
			return (Criteria) this;
		}

		public Criteria andFinancialSubmitCpNotthroughReasonLikeInsensitive(
				String value) {
			addCriterion("upper(FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON) like",
					value.toUpperCase(), "financialSubmitCpNotthroughReason");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fos_audit_cp_day
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fos_audit_cp_day
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}