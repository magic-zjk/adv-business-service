package com.imopan.adv.platform.entity.fos;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FosOrderExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_order
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_order
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_order
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_order
	 * @mbggenerated
	 */
	protected Integer limitStart;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table fos_order
	 * @mbggenerated
	 */
	protected Integer limitEnd;




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public FosOrderExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public void setLimitStart(Integer limitStart) {
		this.limitStart = limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public Integer getLimitStart() {
		return limitStart;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public void setLimitEnd(Integer limitEnd) {
		this.limitEnd = limitEnd;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public Integer getLimitEnd() {
		return limitEnd;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fos_order
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andOrderIdIsNull() {
			addCriterion("ORDER_ID is null");
			return (Criteria) this;
		}

		public Criteria andOrderIdIsNotNull() {
			addCriterion("ORDER_ID is not null");
			return (Criteria) this;
		}

		public Criteria andOrderIdEqualTo(Integer value) {
			addCriterion("ORDER_ID =", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotEqualTo(Integer value) {
			addCriterion("ORDER_ID <>", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdGreaterThan(Integer value) {
			addCriterion("ORDER_ID >", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ORDER_ID >=", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdLessThan(Integer value) {
			addCriterion("ORDER_ID <", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdLessThanOrEqualTo(Integer value) {
			addCriterion("ORDER_ID <=", value, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdIn(List<Integer> values) {
			addCriterion("ORDER_ID in", values, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotIn(List<Integer> values) {
			addCriterion("ORDER_ID not in", values, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdBetween(Integer value1, Integer value2) {
			addCriterion("ORDER_ID between", value1, value2, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ORDER_ID not between", value1, value2, "orderId");
			return (Criteria) this;
		}

		public Criteria andOrderNameIsNull() {
			addCriterion("ORDER_NAME is null");
			return (Criteria) this;
		}

		public Criteria andOrderNameIsNotNull() {
			addCriterion("ORDER_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andOrderNameEqualTo(String value) {
			addCriterion("ORDER_NAME =", value, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameNotEqualTo(String value) {
			addCriterion("ORDER_NAME <>", value, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameGreaterThan(String value) {
			addCriterion("ORDER_NAME >", value, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameGreaterThanOrEqualTo(String value) {
			addCriterion("ORDER_NAME >=", value, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameLessThan(String value) {
			addCriterion("ORDER_NAME <", value, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameLessThanOrEqualTo(String value) {
			addCriterion("ORDER_NAME <=", value, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameLike(String value) {
			addCriterion("ORDER_NAME like", value, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameNotLike(String value) {
			addCriterion("ORDER_NAME not like", value, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameIn(List<String> values) {
			addCriterion("ORDER_NAME in", values, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameNotIn(List<String> values) {
			addCriterion("ORDER_NAME not in", values, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameBetween(String value1, String value2) {
			addCriterion("ORDER_NAME between", value1, value2, "orderName");
			return (Criteria) this;
		}

		public Criteria andOrderNameNotBetween(String value1, String value2) {
			addCriterion("ORDER_NAME not between", value1, value2, "orderName");
			return (Criteria) this;
		}

		public Criteria andProductNameIsNull() {
			addCriterion("PRODUCT_NAME is null");
			return (Criteria) this;
		}

		public Criteria andProductNameIsNotNull() {
			addCriterion("PRODUCT_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andProductNameEqualTo(String value) {
			addCriterion("PRODUCT_NAME =", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameNotEqualTo(String value) {
			addCriterion("PRODUCT_NAME <>", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameGreaterThan(String value) {
			addCriterion("PRODUCT_NAME >", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameGreaterThanOrEqualTo(String value) {
			addCriterion("PRODUCT_NAME >=", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameLessThan(String value) {
			addCriterion("PRODUCT_NAME <", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameLessThanOrEqualTo(String value) {
			addCriterion("PRODUCT_NAME <=", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameLike(String value) {
			addCriterion("PRODUCT_NAME like", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameNotLike(String value) {
			addCriterion("PRODUCT_NAME not like", value, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameIn(List<String> values) {
			addCriterion("PRODUCT_NAME in", values, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameNotIn(List<String> values) {
			addCriterion("PRODUCT_NAME not in", values, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameBetween(String value1, String value2) {
			addCriterion("PRODUCT_NAME between", value1, value2, "productName");
			return (Criteria) this;
		}

		public Criteria andProductNameNotBetween(String value1, String value2) {
			addCriterion("PRODUCT_NAME not between", value1, value2,
					"productName");
			return (Criteria) this;
		}

		public Criteria andDirectorIdIsNull() {
			addCriterion("DIRECTOR_ID is null");
			return (Criteria) this;
		}

		public Criteria andDirectorIdIsNotNull() {
			addCriterion("DIRECTOR_ID is not null");
			return (Criteria) this;
		}

		public Criteria andDirectorIdEqualTo(Integer value) {
			addCriterion("DIRECTOR_ID =", value, "directorId");
			return (Criteria) this;
		}

		public Criteria andDirectorIdNotEqualTo(Integer value) {
			addCriterion("DIRECTOR_ID <>", value, "directorId");
			return (Criteria) this;
		}

		public Criteria andDirectorIdGreaterThan(Integer value) {
			addCriterion("DIRECTOR_ID >", value, "directorId");
			return (Criteria) this;
		}

		public Criteria andDirectorIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("DIRECTOR_ID >=", value, "directorId");
			return (Criteria) this;
		}

		public Criteria andDirectorIdLessThan(Integer value) {
			addCriterion("DIRECTOR_ID <", value, "directorId");
			return (Criteria) this;
		}

		public Criteria andDirectorIdLessThanOrEqualTo(Integer value) {
			addCriterion("DIRECTOR_ID <=", value, "directorId");
			return (Criteria) this;
		}

		public Criteria andDirectorIdIn(List<Integer> values) {
			addCriterion("DIRECTOR_ID in", values, "directorId");
			return (Criteria) this;
		}

		public Criteria andDirectorIdNotIn(List<Integer> values) {
			addCriterion("DIRECTOR_ID not in", values, "directorId");
			return (Criteria) this;
		}

		public Criteria andDirectorIdBetween(Integer value1, Integer value2) {
			addCriterion("DIRECTOR_ID between", value1, value2, "directorId");
			return (Criteria) this;
		}

		public Criteria andDirectorIdNotBetween(Integer value1, Integer value2) {
			addCriterion("DIRECTOR_ID not between", value1, value2,
					"directorId");
			return (Criteria) this;
		}

		public Criteria andDirectorNameIsNull() {
			addCriterion("DIRECTOR_NAME is null");
			return (Criteria) this;
		}

		public Criteria andDirectorNameIsNotNull() {
			addCriterion("DIRECTOR_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andDirectorNameEqualTo(String value) {
			addCriterion("DIRECTOR_NAME =", value, "directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameNotEqualTo(String value) {
			addCriterion("DIRECTOR_NAME <>", value, "directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameGreaterThan(String value) {
			addCriterion("DIRECTOR_NAME >", value, "directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameGreaterThanOrEqualTo(String value) {
			addCriterion("DIRECTOR_NAME >=", value, "directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameLessThan(String value) {
			addCriterion("DIRECTOR_NAME <", value, "directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameLessThanOrEqualTo(String value) {
			addCriterion("DIRECTOR_NAME <=", value, "directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameLike(String value) {
			addCriterion("DIRECTOR_NAME like", value, "directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameNotLike(String value) {
			addCriterion("DIRECTOR_NAME not like", value, "directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameIn(List<String> values) {
			addCriterion("DIRECTOR_NAME in", values, "directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameNotIn(List<String> values) {
			addCriterion("DIRECTOR_NAME not in", values, "directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameBetween(String value1, String value2) {
			addCriterion("DIRECTOR_NAME between", value1, value2,
					"directorName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameNotBetween(String value1, String value2) {
			addCriterion("DIRECTOR_NAME not between", value1, value2,
					"directorName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameIsNull() {
			addCriterion("COOPERATE_NAME is null");
			return (Criteria) this;
		}

		public Criteria andCooperateNameIsNotNull() {
			addCriterion("COOPERATE_NAME is not null");
			return (Criteria) this;
		}

		public Criteria andCooperateNameEqualTo(String value) {
			addCriterion("COOPERATE_NAME =", value, "cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameNotEqualTo(String value) {
			addCriterion("COOPERATE_NAME <>", value, "cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameGreaterThan(String value) {
			addCriterion("COOPERATE_NAME >", value, "cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameGreaterThanOrEqualTo(String value) {
			addCriterion("COOPERATE_NAME >=", value, "cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameLessThan(String value) {
			addCriterion("COOPERATE_NAME <", value, "cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameLessThanOrEqualTo(String value) {
			addCriterion("COOPERATE_NAME <=", value, "cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameLike(String value) {
			addCriterion("COOPERATE_NAME like", value, "cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameNotLike(String value) {
			addCriterion("COOPERATE_NAME not like", value, "cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameIn(List<String> values) {
			addCriterion("COOPERATE_NAME in", values, "cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameNotIn(List<String> values) {
			addCriterion("COOPERATE_NAME not in", values, "cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameBetween(String value1, String value2) {
			addCriterion("COOPERATE_NAME between", value1, value2,
					"cooperateName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameNotBetween(String value1, String value2) {
			addCriterion("COOPERATE_NAME not between", value1, value2,
					"cooperateName");
			return (Criteria) this;
		}

		public Criteria andCpMainIsNull() {
			addCriterion("CP_MAIN is null");
			return (Criteria) this;
		}

		public Criteria andCpMainIsNotNull() {
			addCriterion("CP_MAIN is not null");
			return (Criteria) this;
		}

		public Criteria andCpMainEqualTo(Byte value) {
			addCriterion("CP_MAIN =", value, "cpMain");
			return (Criteria) this;
		}

		public Criteria andCpMainNotEqualTo(Byte value) {
			addCriterion("CP_MAIN <>", value, "cpMain");
			return (Criteria) this;
		}

		public Criteria andCpMainGreaterThan(Byte value) {
			addCriterion("CP_MAIN >", value, "cpMain");
			return (Criteria) this;
		}

		public Criteria andCpMainGreaterThanOrEqualTo(Byte value) {
			addCriterion("CP_MAIN >=", value, "cpMain");
			return (Criteria) this;
		}

		public Criteria andCpMainLessThan(Byte value) {
			addCriterion("CP_MAIN <", value, "cpMain");
			return (Criteria) this;
		}

		public Criteria andCpMainLessThanOrEqualTo(Byte value) {
			addCriterion("CP_MAIN <=", value, "cpMain");
			return (Criteria) this;
		}

		public Criteria andCpMainIn(List<Byte> values) {
			addCriterion("CP_MAIN in", values, "cpMain");
			return (Criteria) this;
		}

		public Criteria andCpMainNotIn(List<Byte> values) {
			addCriterion("CP_MAIN not in", values, "cpMain");
			return (Criteria) this;
		}

		public Criteria andCpMainBetween(Byte value1, Byte value2) {
			addCriterion("CP_MAIN between", value1, value2, "cpMain");
			return (Criteria) this;
		}

		public Criteria andCpMainNotBetween(Byte value1, Byte value2) {
			addCriterion("CP_MAIN not between", value1, value2, "cpMain");
			return (Criteria) this;
		}

		public Criteria andPayUnitIsNull() {
			addCriterion("PAY_UNIT is null");
			return (Criteria) this;
		}

		public Criteria andPayUnitIsNotNull() {
			addCriterion("PAY_UNIT is not null");
			return (Criteria) this;
		}

		public Criteria andPayUnitEqualTo(BigDecimal value) {
			addCriterion("PAY_UNIT =", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitNotEqualTo(BigDecimal value) {
			addCriterion("PAY_UNIT <>", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitGreaterThan(BigDecimal value) {
			addCriterion("PAY_UNIT >", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("PAY_UNIT >=", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitLessThan(BigDecimal value) {
			addCriterion("PAY_UNIT <", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitLessThanOrEqualTo(BigDecimal value) {
			addCriterion("PAY_UNIT <=", value, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitIn(List<BigDecimal> values) {
			addCriterion("PAY_UNIT in", values, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitNotIn(List<BigDecimal> values) {
			addCriterion("PAY_UNIT not in", values, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("PAY_UNIT between", value1, value2, "payUnit");
			return (Criteria) this;
		}

		public Criteria andPayUnitNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("PAY_UNIT not between", value1, value2, "payUnit");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("`STATUS` is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("`STATUS` is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Byte value) {
			addCriterion("`STATUS` =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Byte value) {
			addCriterion("`STATUS` <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Byte value) {
			addCriterion("`STATUS` >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
			addCriterion("`STATUS` >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Byte value) {
			addCriterion("`STATUS` <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Byte value) {
			addCriterion("`STATUS` <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Byte> values) {
			addCriterion("`STATUS` in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Byte> values) {
			addCriterion("`STATUS` not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Byte value1, Byte value2) {
			addCriterion("`STATUS` between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Byte value1, Byte value2) {
			addCriterion("`STATUS` not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andAdvancePayIsNull() {
			addCriterion("ADVANCE_PAY is null");
			return (Criteria) this;
		}

		public Criteria andAdvancePayIsNotNull() {
			addCriterion("ADVANCE_PAY is not null");
			return (Criteria) this;
		}

		public Criteria andAdvancePayEqualTo(BigDecimal value) {
			addCriterion("ADVANCE_PAY =", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayNotEqualTo(BigDecimal value) {
			addCriterion("ADVANCE_PAY <>", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayGreaterThan(BigDecimal value) {
			addCriterion("ADVANCE_PAY >", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ADVANCE_PAY >=", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayLessThan(BigDecimal value) {
			addCriterion("ADVANCE_PAY <", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ADVANCE_PAY <=", value, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayIn(List<BigDecimal> values) {
			addCriterion("ADVANCE_PAY in", values, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayNotIn(List<BigDecimal> values) {
			addCriterion("ADVANCE_PAY not in", values, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ADVANCE_PAY between", value1, value2, "advancePay");
			return (Criteria) this;
		}

		public Criteria andAdvancePayNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("ADVANCE_PAY not between", value1, value2,
					"advancePay");
			return (Criteria) this;
		}

		public Criteria andOrderTypeIsNull() {
			addCriterion("ORDER_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andOrderTypeIsNotNull() {
			addCriterion("ORDER_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andOrderTypeEqualTo(Byte value) {
			addCriterion("ORDER_TYPE =", value, "orderType");
			return (Criteria) this;
		}

		public Criteria andOrderTypeNotEqualTo(Byte value) {
			addCriterion("ORDER_TYPE <>", value, "orderType");
			return (Criteria) this;
		}

		public Criteria andOrderTypeGreaterThan(Byte value) {
			addCriterion("ORDER_TYPE >", value, "orderType");
			return (Criteria) this;
		}

		public Criteria andOrderTypeGreaterThanOrEqualTo(Byte value) {
			addCriterion("ORDER_TYPE >=", value, "orderType");
			return (Criteria) this;
		}

		public Criteria andOrderTypeLessThan(Byte value) {
			addCriterion("ORDER_TYPE <", value, "orderType");
			return (Criteria) this;
		}

		public Criteria andOrderTypeLessThanOrEqualTo(Byte value) {
			addCriterion("ORDER_TYPE <=", value, "orderType");
			return (Criteria) this;
		}

		public Criteria andOrderTypeIn(List<Byte> values) {
			addCriterion("ORDER_TYPE in", values, "orderType");
			return (Criteria) this;
		}

		public Criteria andOrderTypeNotIn(List<Byte> values) {
			addCriterion("ORDER_TYPE not in", values, "orderType");
			return (Criteria) this;
		}

		public Criteria andOrderTypeBetween(Byte value1, Byte value2) {
			addCriterion("ORDER_TYPE between", value1, value2, "orderType");
			return (Criteria) this;
		}

		public Criteria andOrderTypeNotBetween(Byte value1, Byte value2) {
			addCriterion("ORDER_TYPE not between", value1, value2, "orderType");
			return (Criteria) this;
		}

		public Criteria andBeginTimeIsNull() {
			addCriterion("BEGIN_TIME is null");
			return (Criteria) this;
		}

		public Criteria andBeginTimeIsNotNull() {
			addCriterion("BEGIN_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andBeginTimeEqualTo(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME =", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME <>", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME >", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME >=", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeLessThan(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME <", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("BEGIN_TIME <=", value, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeIn(List<Date> values) {
			addCriterionForJDBCDate("BEGIN_TIME in", values, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("BEGIN_TIME not in", values, "beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("BEGIN_TIME between", value1, value2,
					"beginTime");
			return (Criteria) this;
		}

		public Criteria andBeginTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("BEGIN_TIME not between", value1, value2,
					"beginTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeIsNull() {
			addCriterion("END_TIME is null");
			return (Criteria) this;
		}

		public Criteria andEndTimeIsNotNull() {
			addCriterion("END_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andEndTimeEqualTo(Date value) {
			addCriterionForJDBCDate("END_TIME =", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("END_TIME <>", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("END_TIME >", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("END_TIME >=", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeLessThan(Date value) {
			addCriterionForJDBCDate("END_TIME <", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("END_TIME <=", value, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeIn(List<Date> values) {
			addCriterionForJDBCDate("END_TIME in", values, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("END_TIME not in", values, "endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("END_TIME between", value1, value2,
					"endTime");
			return (Criteria) this;
		}

		public Criteria andEndTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("END_TIME not between", value1, value2,
					"endTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("CREATE_TIME is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("CREATE_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("CREATE_TIME =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("CREATE_TIME <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("CREATE_TIME >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("CREATE_TIME >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("CREATE_TIME <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("CREATE_TIME <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("CREATE_TIME in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("CREATE_TIME not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("CREATE_TIME between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("CREATE_TIME not between", value1, value2,
					"createTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeIsNull() {
			addCriterion("MODIFY_TIME is null");
			return (Criteria) this;
		}

		public Criteria andModifyTimeIsNotNull() {
			addCriterion("MODIFY_TIME is not null");
			return (Criteria) this;
		}

		public Criteria andModifyTimeEqualTo(Date value) {
			addCriterion("MODIFY_TIME =", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeNotEqualTo(Date value) {
			addCriterion("MODIFY_TIME <>", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeGreaterThan(Date value) {
			addCriterion("MODIFY_TIME >", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("MODIFY_TIME >=", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeLessThan(Date value) {
			addCriterion("MODIFY_TIME <", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeLessThanOrEqualTo(Date value) {
			addCriterion("MODIFY_TIME <=", value, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeIn(List<Date> values) {
			addCriterion("MODIFY_TIME in", values, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeNotIn(List<Date> values) {
			addCriterion("MODIFY_TIME not in", values, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeBetween(Date value1, Date value2) {
			addCriterion("MODIFY_TIME between", value1, value2, "modifyTime");
			return (Criteria) this;
		}

		public Criteria andModifyTimeNotBetween(Date value1, Date value2) {
			addCriterion("MODIFY_TIME not between", value1, value2,
					"modifyTime");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("REMARK is null");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("REMARK is not null");
			return (Criteria) this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("REMARK =", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("REMARK <>", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("REMARK >", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("REMARK >=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("REMARK <", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("REMARK <=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("REMARK like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("REMARK not like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkIn(List<String> values) {
			addCriterion("REMARK in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotIn(List<String> values) {
			addCriterion("REMARK not in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("REMARK between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("REMARK not between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andRelationIdIsNull() {
			addCriterion("RELATION_ID is null");
			return (Criteria) this;
		}

		public Criteria andRelationIdIsNotNull() {
			addCriterion("RELATION_ID is not null");
			return (Criteria) this;
		}

		public Criteria andRelationIdEqualTo(Integer value) {
			addCriterion("RELATION_ID =", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdNotEqualTo(Integer value) {
			addCriterion("RELATION_ID <>", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdGreaterThan(Integer value) {
			addCriterion("RELATION_ID >", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("RELATION_ID >=", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdLessThan(Integer value) {
			addCriterion("RELATION_ID <", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdLessThanOrEqualTo(Integer value) {
			addCriterion("RELATION_ID <=", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdIn(List<Integer> values) {
			addCriterion("RELATION_ID in", values, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdNotIn(List<Integer> values) {
			addCriterion("RELATION_ID not in", values, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdBetween(Integer value1, Integer value2) {
			addCriterion("RELATION_ID between", value1, value2, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdNotBetween(Integer value1, Integer value2) {
			addCriterion("RELATION_ID not between", value1, value2,
					"relationId");
			return (Criteria) this;
		}

		public Criteria andIsSplitIsNull() {
			addCriterion("IS_SPLIT is null");
			return (Criteria) this;
		}

		public Criteria andIsSplitIsNotNull() {
			addCriterion("IS_SPLIT is not null");
			return (Criteria) this;
		}

		public Criteria andIsSplitEqualTo(Integer value) {
			addCriterion("IS_SPLIT =", value, "isSplit");
			return (Criteria) this;
		}

		public Criteria andIsSplitNotEqualTo(Integer value) {
			addCriterion("IS_SPLIT <>", value, "isSplit");
			return (Criteria) this;
		}

		public Criteria andIsSplitGreaterThan(Integer value) {
			addCriterion("IS_SPLIT >", value, "isSplit");
			return (Criteria) this;
		}

		public Criteria andIsSplitGreaterThanOrEqualTo(Integer value) {
			addCriterion("IS_SPLIT >=", value, "isSplit");
			return (Criteria) this;
		}

		public Criteria andIsSplitLessThan(Integer value) {
			addCriterion("IS_SPLIT <", value, "isSplit");
			return (Criteria) this;
		}

		public Criteria andIsSplitLessThanOrEqualTo(Integer value) {
			addCriterion("IS_SPLIT <=", value, "isSplit");
			return (Criteria) this;
		}

		public Criteria andIsSplitIn(List<Integer> values) {
			addCriterion("IS_SPLIT in", values, "isSplit");
			return (Criteria) this;
		}

		public Criteria andIsSplitNotIn(List<Integer> values) {
			addCriterion("IS_SPLIT not in", values, "isSplit");
			return (Criteria) this;
		}

		public Criteria andIsSplitBetween(Integer value1, Integer value2) {
			addCriterion("IS_SPLIT between", value1, value2, "isSplit");
			return (Criteria) this;
		}

		public Criteria andIsSplitNotBetween(Integer value1, Integer value2) {
			addCriterion("IS_SPLIT not between", value1, value2, "isSplit");
			return (Criteria) this;
		}

		public Criteria andSplitParentIsNull() {
			addCriterion("SPLIT_PARENT is null");
			return (Criteria) this;
		}

		public Criteria andSplitParentIsNotNull() {
			addCriterion("SPLIT_PARENT is not null");
			return (Criteria) this;
		}

		public Criteria andSplitParentEqualTo(Integer value) {
			addCriterion("SPLIT_PARENT =", value, "splitParent");
			return (Criteria) this;
		}

		public Criteria andSplitParentNotEqualTo(Integer value) {
			addCriterion("SPLIT_PARENT <>", value, "splitParent");
			return (Criteria) this;
		}

		public Criteria andSplitParentGreaterThan(Integer value) {
			addCriterion("SPLIT_PARENT >", value, "splitParent");
			return (Criteria) this;
		}

		public Criteria andSplitParentGreaterThanOrEqualTo(Integer value) {
			addCriterion("SPLIT_PARENT >=", value, "splitParent");
			return (Criteria) this;
		}

		public Criteria andSplitParentLessThan(Integer value) {
			addCriterion("SPLIT_PARENT <", value, "splitParent");
			return (Criteria) this;
		}

		public Criteria andSplitParentLessThanOrEqualTo(Integer value) {
			addCriterion("SPLIT_PARENT <=", value, "splitParent");
			return (Criteria) this;
		}

		public Criteria andSplitParentIn(List<Integer> values) {
			addCriterion("SPLIT_PARENT in", values, "splitParent");
			return (Criteria) this;
		}

		public Criteria andSplitParentNotIn(List<Integer> values) {
			addCriterion("SPLIT_PARENT not in", values, "splitParent");
			return (Criteria) this;
		}

		public Criteria andSplitParentBetween(Integer value1, Integer value2) {
			addCriterion("SPLIT_PARENT between", value1, value2, "splitParent");
			return (Criteria) this;
		}

		public Criteria andSplitParentNotBetween(Integer value1, Integer value2) {
			addCriterion("SPLIT_PARENT not between", value1, value2,
					"splitParent");
			return (Criteria) this;
		}

		public Criteria andExtendTypeIsNull() {
			addCriterion("EXTEND_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andExtendTypeIsNotNull() {
			addCriterion("EXTEND_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andExtendTypeEqualTo(Byte value) {
			addCriterion("EXTEND_TYPE =", value, "extendType");
			return (Criteria) this;
		}

		public Criteria andExtendTypeNotEqualTo(Byte value) {
			addCriterion("EXTEND_TYPE <>", value, "extendType");
			return (Criteria) this;
		}

		public Criteria andExtendTypeGreaterThan(Byte value) {
			addCriterion("EXTEND_TYPE >", value, "extendType");
			return (Criteria) this;
		}

		public Criteria andExtendTypeGreaterThanOrEqualTo(Byte value) {
			addCriterion("EXTEND_TYPE >=", value, "extendType");
			return (Criteria) this;
		}

		public Criteria andExtendTypeLessThan(Byte value) {
			addCriterion("EXTEND_TYPE <", value, "extendType");
			return (Criteria) this;
		}

		public Criteria andExtendTypeLessThanOrEqualTo(Byte value) {
			addCriterion("EXTEND_TYPE <=", value, "extendType");
			return (Criteria) this;
		}

		public Criteria andExtendTypeIn(List<Byte> values) {
			addCriterion("EXTEND_TYPE in", values, "extendType");
			return (Criteria) this;
		}

		public Criteria andExtendTypeNotIn(List<Byte> values) {
			addCriterion("EXTEND_TYPE not in", values, "extendType");
			return (Criteria) this;
		}

		public Criteria andExtendTypeBetween(Byte value1, Byte value2) {
			addCriterion("EXTEND_TYPE between", value1, value2, "extendType");
			return (Criteria) this;
		}

		public Criteria andExtendTypeNotBetween(Byte value1, Byte value2) {
			addCriterion("EXTEND_TYPE not between", value1, value2,
					"extendType");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentIsNull() {
			addCriterion("ORDER_DEPARTMENT is null");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentIsNotNull() {
			addCriterion("ORDER_DEPARTMENT is not null");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentEqualTo(Byte value) {
			addCriterion("ORDER_DEPARTMENT =", value, "orderDepartment");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentNotEqualTo(Byte value) {
			addCriterion("ORDER_DEPARTMENT <>", value, "orderDepartment");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentGreaterThan(Byte value) {
			addCriterion("ORDER_DEPARTMENT >", value, "orderDepartment");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentGreaterThanOrEqualTo(Byte value) {
			addCriterion("ORDER_DEPARTMENT >=", value, "orderDepartment");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentLessThan(Byte value) {
			addCriterion("ORDER_DEPARTMENT <", value, "orderDepartment");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentLessThanOrEqualTo(Byte value) {
			addCriterion("ORDER_DEPARTMENT <=", value, "orderDepartment");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentIn(List<Byte> values) {
			addCriterion("ORDER_DEPARTMENT in", values, "orderDepartment");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentNotIn(List<Byte> values) {
			addCriterion("ORDER_DEPARTMENT not in", values, "orderDepartment");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentBetween(Byte value1, Byte value2) {
			addCriterion("ORDER_DEPARTMENT between", value1, value2,
					"orderDepartment");
			return (Criteria) this;
		}

		public Criteria andOrderDepartmentNotBetween(Byte value1, Byte value2) {
			addCriterion("ORDER_DEPARTMENT not between", value1, value2,
					"orderDepartment");
			return (Criteria) this;
		}

		public Criteria andContractNumberIsNull() {
			addCriterion("CONTRACT_NUMBER is null");
			return (Criteria) this;
		}

		public Criteria andContractNumberIsNotNull() {
			addCriterion("CONTRACT_NUMBER is not null");
			return (Criteria) this;
		}

		public Criteria andContractNumberEqualTo(String value) {
			addCriterion("CONTRACT_NUMBER =", value, "contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberNotEqualTo(String value) {
			addCriterion("CONTRACT_NUMBER <>", value, "contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberGreaterThan(String value) {
			addCriterion("CONTRACT_NUMBER >", value, "contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberGreaterThanOrEqualTo(String value) {
			addCriterion("CONTRACT_NUMBER >=", value, "contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberLessThan(String value) {
			addCriterion("CONTRACT_NUMBER <", value, "contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberLessThanOrEqualTo(String value) {
			addCriterion("CONTRACT_NUMBER <=", value, "contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberLike(String value) {
			addCriterion("CONTRACT_NUMBER like", value, "contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberNotLike(String value) {
			addCriterion("CONTRACT_NUMBER not like", value, "contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberIn(List<String> values) {
			addCriterion("CONTRACT_NUMBER in", values, "contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberNotIn(List<String> values) {
			addCriterion("CONTRACT_NUMBER not in", values, "contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberBetween(String value1, String value2) {
			addCriterion("CONTRACT_NUMBER between", value1, value2,
					"contractNumber");
			return (Criteria) this;
		}

		public Criteria andContractNumberNotBetween(String value1, String value2) {
			addCriterion("CONTRACT_NUMBER not between", value1, value2,
					"contractNumber");
			return (Criteria) this;
		}

		public Criteria andAccessTypeIsNull() {
			addCriterion("ACCESS_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andAccessTypeIsNotNull() {
			addCriterion("ACCESS_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andAccessTypeEqualTo(Byte value) {
			addCriterion("ACCESS_TYPE =", value, "accessType");
			return (Criteria) this;
		}

		public Criteria andAccessTypeNotEqualTo(Byte value) {
			addCriterion("ACCESS_TYPE <>", value, "accessType");
			return (Criteria) this;
		}

		public Criteria andAccessTypeGreaterThan(Byte value) {
			addCriterion("ACCESS_TYPE >", value, "accessType");
			return (Criteria) this;
		}

		public Criteria andAccessTypeGreaterThanOrEqualTo(Byte value) {
			addCriterion("ACCESS_TYPE >=", value, "accessType");
			return (Criteria) this;
		}

		public Criteria andAccessTypeLessThan(Byte value) {
			addCriterion("ACCESS_TYPE <", value, "accessType");
			return (Criteria) this;
		}

		public Criteria andAccessTypeLessThanOrEqualTo(Byte value) {
			addCriterion("ACCESS_TYPE <=", value, "accessType");
			return (Criteria) this;
		}

		public Criteria andAccessTypeIn(List<Byte> values) {
			addCriterion("ACCESS_TYPE in", values, "accessType");
			return (Criteria) this;
		}

		public Criteria andAccessTypeNotIn(List<Byte> values) {
			addCriterion("ACCESS_TYPE not in", values, "accessType");
			return (Criteria) this;
		}

		public Criteria andAccessTypeBetween(Byte value1, Byte value2) {
			addCriterion("ACCESS_TYPE between", value1, value2, "accessType");
			return (Criteria) this;
		}

		public Criteria andAccessTypeNotBetween(Byte value1, Byte value2) {
			addCriterion("ACCESS_TYPE not between", value1, value2,
					"accessType");
			return (Criteria) this;
		}

		public Criteria andOrderNameLikeInsensitive(String value) {
			addCriterion("upper(ORDER_NAME) like", value.toUpperCase(),
					"orderName");
			return (Criteria) this;
		}

		public Criteria andProductNameLikeInsensitive(String value) {
			addCriterion("upper(PRODUCT_NAME) like", value.toUpperCase(),
					"productName");
			return (Criteria) this;
		}

		public Criteria andDirectorNameLikeInsensitive(String value) {
			addCriterion("upper(DIRECTOR_NAME) like", value.toUpperCase(),
					"directorName");
			return (Criteria) this;
		}

		public Criteria andCooperateNameLikeInsensitive(String value) {
			addCriterion("upper(COOPERATE_NAME) like", value.toUpperCase(),
					"cooperateName");
			return (Criteria) this;
		}

		public Criteria andRemarkLikeInsensitive(String value) {
			addCriterion("upper(REMARK) like", value.toUpperCase(), "remark");
			return (Criteria) this;
		}

		public Criteria andContractNumberLikeInsensitive(String value) {
			addCriterion("upper(CONTRACT_NUMBER) like", value.toUpperCase(),
					"contractNumber");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table fos_order
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fos_order
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
    
    
    //支持数据级
    private String names;
    private Integer teamId;


	

	public String getNames() {
		return names;
	}

	public void setNames(String names) {
		this.names = names;
	}

	public Integer getTeamId() {
		return teamId;
	}

	public void setTeamId(Integer teamId) {
		this.teamId = teamId;
	}
    
    
    
    
    
    
    
    
    
    
    
}