<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imopan.adv.platform.mapper.fos.FosTicketOrderMapper">
  <resultMap id="BaseResultMap" type="com.imopan.adv.platform.entity.fos.FosTicketOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ORDER_ID" jdbcType="INTEGER" property="orderId" />
    <result column="ORDER_NAME" jdbcType="VARCHAR" property="orderName" />
    <result column="PRODUCT_NAME" jdbcType="VARCHAR" property="productName" />
    <result column="COMPANY" jdbcType="VARCHAR" property="company" />
    <result column="CP_MAIN" jdbcType="VARCHAR" property="cpMain" />
    <result column="TAKE_COMPANY" jdbcType="VARCHAR" property="takeCompany" />
    <result column="O_UNIT" jdbcType="DECIMAL" property="oUnit" />
    <result column="O_COUNT" jdbcType="INTEGER" property="oCount" />
    <result column="O_COUNT_SUM" jdbcType="INTEGER" property="oCountSum" />
    <result column="O_AMOUNT_SUM" jdbcType="DECIMAL" property="oAmountSum" />
    <result column="SUB_O_AMOUNT" jdbcType="DECIMAL" property="subOAmount" />
    <result column="SUB_C_AMOUNT" jdbcType="DECIMAL" property="subCAmount" />
    <result column="PROFIT" jdbcType="DECIMAL" property="profit" />
    <result column="PROFIT_MARGIN" jdbcType="DECIMAL" property="profitMargin" />
    <result column="CUT" jdbcType="DECIMAL" property="cut" />
    <result column="SALE_REBATE" jdbcType="DECIMAL" property="saleRebate" />
    <result column="MONEY" jdbcType="DECIMAL" property="money" />
    <result column="TICKET_CODE" jdbcType="VARCHAR" property="ticketCode" />
    <result column="TICKET_NUM" jdbcType="VARCHAR" property="ticketNum" />
    <result column="IS_CASHIER_TICKET" jdbcType="INTEGER" property="isCashierTicket" />
    <result column="TICKET_BEGINTIME" jdbcType="DATE" property="ticketBegintime" />
    <result column="TICKET_ENDTIME" jdbcType="DATE" property="ticketEndtime" />
    <result column="DATA_TIME" jdbcType="TIMESTAMP" property="dataTime" />
    <result column="STATUS" jdbcType="TINYINT" property="status" />
    <result column="RETURN_MONEY" jdbcType="DECIMAL" property="returnMoney" />
    <result column="RETURN_DATE" jdbcType="DATE" property="returnDate" />
    <result column="RETURN_TIME" jdbcType="TIMESTAMP" property="returnTime" />
    <result column="ADVANCE_PAY" jdbcType="DECIMAL" property="advancePay" />
    <result column="OPERATE_TIME" jdbcType="DATE" property="operateTime" />
    <result column="DRAW_ITEM" jdbcType="TINYINT" property="drawItem" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, ORDER_ID, ORDER_NAME, PRODUCT_NAME, COMPANY, CP_MAIN, TAKE_COMPANY, O_UNIT, O_COUNT, 
    O_COUNT_SUM, O_AMOUNT_SUM, SUB_O_AMOUNT, SUB_C_AMOUNT, PROFIT, PROFIT_MARGIN, CUT, 
    SALE_REBATE, MONEY, TICKET_CODE, TICKET_NUM, IS_CASHIER_TICKET, TICKET_BEGINTIME, 
    TICKET_ENDTIME, DATA_TIME, `STATUS`, RETURN_MONEY, RETURN_DATE, RETURN_TIME, ADVANCE_PAY, 
    OPERATE_TIME, DRAW_ITEM
  </sql>
  <select id="selectByExample" parameterType="com.imopan.adv.platform.entity.fos.FosTicketOrderExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from fos_ticket_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="getMonthIncomeHistoryList" parameterType="map" resultType="com.imopan.adv.platform.entity.fos.FosTicketOrderImpl">
    SELECT 
		odr.ID as id, odr.ORDER_ID as orderId, odr.ORDER_NAME as orderName, odr.PRODUCT_NAME as productName, 
		odr.COMPANY as company, odr.CP_MAIN as cpMain, odr.TAKE_COMPANY as takeCompany, 
		odr.O_UNIT as oUnit, odr.O_COUNT as oCount, odr.O_COUNT_SUM as oCountSum, 
    	odr.O_AMOUNT_SUM as oAmountSum, odr.SUB_O_AMOUNT as subOAmount, odr.SUB_C_AMOUNT as subCAmount, 
		odr.PROFIT as profit, odr.PROFIT_MARGIN as profitMargin, odr.CUT as cut, odr.SALE_REBATE as saleRebate, 
		odr.MONEY as money, 
		odr.TICKET_CODE as ticketCode, odr.TICKET_NUM as ticketNum, odr.IS_CASHIER_TICKET as isCashierTicket, 
		odr.TICKET_BEGINTIME as ticketBegintime, odr.TICKET_ENDTIME as ticketEndtime, odr.DATA_TIME as dataTime, 
		odr.`STATUS` as status, odr.RETURN_MONEY as returnMoney, odr.RETURN_DATE as returnDate, 
		odr.RETURN_TIME as returnTime, odr.ADVANCE_PAY as advancePay,odr.OPERATE_TIME as operateTime, 
		odr.DRAW_ITEM as drawItem,fo.DIRECTOR_NAME as directorName,fo.EXTEND_TYPE as extendType 

	FROM 
		fos_ticket_order odr LEFT JOIN fos_order fo ON odr.ORDER_ID = fo.ORDER_ID 
	where 
		1=1 
	<!-- 数据级控制  begin -->
	<if test="businessNames != null">
		AND  fo.DIRECTOR_NAME in  ${businessNames}
	</if>
	<if test="teamId != null">
		AND  fo.ORDER_DEPARTMENT =  #{teamId}
	</if>
	<!-- 数据级控制  end -->
    <if test="id != null">
      AND odr.ID = #{id,jdbcType=INTEGER}
    </if>
    <if test="orderName != null">
      AND odr.ORDER_NAME like #{orderName,jdbcType=VARCHAR}
    </if>
    <if test="company != null">
      AND odr.COMPANY like #{company,jdbcType=VARCHAR}
    </if>
    <if test="status != null">
      AND odr.STATUS = #{status,jdbcType=TINYINT}
    </if>
    <if test="directorId != null">
      AND fo.DIRECTOR_ID = #{directorId,jdbcType=INTEGER}
    </if>
    <if test="beginTime != null and endTime != null">
      AND (odr.TICKET_BEGINTIME &gt;= #{beginTime,jdbcType=VARCHAR} AND odr.TICKET_BEGINTIME &lt;= #{endTime,jdbcType=VARCHAR} 
      OR odr.TICKET_ENDTIME &gt;= #{beginTime,jdbcType=VARCHAR} AND odr.TICKET_ENDTIME &lt;= #{endTime,jdbcType=VARCHAR}) 
    </if>
    ORDER BY odr.ID desc 
    <if test="limitStart != null and limitStart&gt;=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="countMonthIncomeByExample" resultType="java.lang.Integer" parameterType="map">
  	select count(*) 
	  	from (SELECT 
			odr.ID, odr.ORDER_ID, odr.ORDER_NAME, odr.PRODUCT_NAME, odr.COMPANY, odr.CP_MAIN, odr.TAKE_COMPANY, 
			odr.O_UNIT, odr.O_COUNT, odr.O_COUNT_SUM, 
	    	odr.O_AMOUNT_SUM, odr.SUB_O_AMOUNT, odr.SUB_C_AMOUNT, 
			odr.PROFIT, odr.PROFIT_MARGIN, odr.CUT, odr.SALE_REBATE, odr.MONEY, 
			odr.TICKET_CODE, odr.TICKET_NUM, odr.IS_CASHIER_TICKET, odr.TICKET_BEGINTIME, 
	    	odr.TICKET_ENDTIME, odr.DATA_TIME, odr.`STATUS`, odr.RETURN_MONEY, odr.RETURN_DATE, odr.RETURN_TIME, 
			odr.ADVANCE_PAY, 
	    	odr.OPERATE_TIME, odr.DRAW_ITEM ,fo.DIRECTOR_NAME,fo.EXTEND_TYPE
	
		FROM 
			fos_ticket_order odr LEFT JOIN fos_order fo ON odr.ORDER_ID = fo.ORDER_ID 
		where 
			1=1 
		<!-- 数据级控制  begin -->
		<if test="businessNames != null">
			AND  fo.DIRECTOR_NAME in  ${businessNames}
		</if>
		<if test="teamId != null">
			AND  fo.ORDER_DEPARTMENT =  #{teamId}
		</if>
		<!-- 数据级控制  end -->
	    <if test="id != null">
	      AND odr.ID = #{id,jdbcType=INTEGER}
	    </if>
	    <if test="orderName != null">
	      AND odr.ORDER_NAME like #{orderName,jdbcType=VARCHAR}
	    </if>
	    <if test="company != null">
	      AND odr.COMPANY like #{company,jdbcType=VARCHAR}
	    </if>
	    <if test="status != null">
	      AND odr.STATUS = #{status,jdbcType=TINYINT}
	    </if>
	    <if test="directorId != null">
	      AND fo.DIRECTOR_ID = #{directorId,jdbcType=INTEGER}
	    </if>
	    <if test="beginTime != null and endTime != null">
      	  AND (odr.TICKET_BEGINTIME &gt;= #{beginTime,jdbcType=VARCHAR} AND odr.TICKET_BEGINTIME &lt;= #{endTime,jdbcType=VARCHAR} 
          OR odr.TICKET_ENDTIME &gt;= #{beginTime,jdbcType=VARCHAR} AND odr.TICKET_ENDTIME &lt;= #{endTime,jdbcType=VARCHAR}) 
    	</if>
	    ) w 
  </select>
  <select id="getMonthIncomeSum" resultType="com.imopan.adv.platform.entity.fos.FosTicketOrderImpl" parameterType="map">
  	select SUM(w.SUB_O_AMOUNT) subOAmount ,SUM(w.MONEY) money,SUM(w.CUT) cut,SUM(w.RETURN_MONEY) returnMoney  
	  	from (SELECT 
			odr.ID, odr.ORDER_ID, odr.ORDER_NAME, odr.PRODUCT_NAME, odr.COMPANY, odr.CP_MAIN, odr.TAKE_COMPANY, 
			odr.O_UNIT, odr.O_COUNT, odr.O_COUNT_SUM, 
	    	odr.O_AMOUNT_SUM, odr.SUB_O_AMOUNT, odr.SUB_C_AMOUNT, 
			odr.PROFIT, odr.PROFIT_MARGIN, odr.CUT, odr.SALE_REBATE, odr.MONEY, 
			odr.TICKET_CODE, odr.TICKET_NUM, odr.IS_CASHIER_TICKET, odr.TICKET_BEGINTIME, 
	    	odr.TICKET_ENDTIME, odr.DATA_TIME, odr.`STATUS`, odr.RETURN_MONEY, odr.RETURN_DATE, odr.RETURN_TIME, 
			odr.ADVANCE_PAY, 
	    	odr.OPERATE_TIME, odr.DRAW_ITEM ,fo.DIRECTOR_NAME,fo.EXTEND_TYPE
	
		FROM 
			fos_ticket_order odr LEFT JOIN fos_order fo ON odr.ORDER_ID = fo.ORDER_ID 
		where 
			1=1 
		<!-- 数据级控制  begin -->
		<if test="businessNames != null">
			AND  fo.DIRECTOR_NAME in  ${businessNames}
		</if>
		<if test="teamId != null">
			AND  fo.ORDER_DEPARTMENT =  #{teamId}
		</if>
		<!-- 数据级控制  end -->
	    <if test="id != null">
	      AND odr.ID = #{id,jdbcType=INTEGER}
	    </if>
	    <if test="orderName != null">
	      AND odr.ORDER_NAME like #{orderName,jdbcType=VARCHAR}
	    </if>
	    <if test="company != null">
	      AND odr.COMPANY like #{company,jdbcType=VARCHAR}
	    </if>
	    <if test="status != null">
	      AND odr.STATUS = #{status,jdbcType=TINYINT}
	    </if>
	    <if test="directorId != null">
	      AND fo.DIRECTOR_ID = #{directorId,jdbcType=INTEGER}
	    </if>
	    <if test="beginTime != null and endTime != null">
      	  AND (odr.TICKET_BEGINTIME &gt;= #{beginTime,jdbcType=VARCHAR} AND odr.TICKET_BEGINTIME &lt;= #{endTime,jdbcType=VARCHAR} 
          OR odr.TICKET_ENDTIME &gt;= #{beginTime,jdbcType=VARCHAR} AND odr.TICKET_ENDTIME &lt;= #{endTime,jdbcType=VARCHAR}) 
    	</if>) w 
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from fos_ticket_order
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from fos_ticket_order
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.imopan.adv.platform.entity.fos.FosTicketOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into fos_ticket_order (ID, ORDER_ID, ORDER_NAME, 
      PRODUCT_NAME, COMPANY, CP_MAIN, 
      TAKE_COMPANY, O_UNIT, O_COUNT, 
      O_COUNT_SUM, O_AMOUNT_SUM, SUB_O_AMOUNT, 
      SUB_C_AMOUNT, PROFIT, PROFIT_MARGIN, 
      CUT, SALE_REBATE, MONEY, 
      TICKET_CODE, TICKET_NUM, IS_CASHIER_TICKET, 
      TICKET_BEGINTIME, TICKET_ENDTIME, DATA_TIME, 
      `STATUS`, RETURN_MONEY, RETURN_DATE, 
      RETURN_TIME, ADVANCE_PAY, OPERATE_TIME, 
      DRAW_ITEM)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{orderName,jdbcType=VARCHAR}, 
      #{productName,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{cpMain,jdbcType=VARCHAR}, 
      #{takeCompany,jdbcType=VARCHAR}, #{oUnit,jdbcType=DECIMAL}, #{oCount,jdbcType=INTEGER}, 
      #{oCountSum,jdbcType=INTEGER}, #{oAmountSum,jdbcType=DECIMAL}, #{subOAmount,jdbcType=DECIMAL}, 
      #{subCAmount,jdbcType=DECIMAL}, #{profit,jdbcType=DECIMAL}, #{profitMargin,jdbcType=DECIMAL}, 
      #{cut,jdbcType=DECIMAL}, #{saleRebate,jdbcType=DECIMAL}, #{money,jdbcType=DECIMAL}, 
      #{ticketCode,jdbcType=VARCHAR}, #{ticketNum,jdbcType=VARCHAR}, #{isCashierTicket,jdbcType=INTEGER}, 
      #{ticketBegintime,jdbcType=DATE}, #{ticketEndtime,jdbcType=DATE}, #{dataTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT}, #{returnMoney,jdbcType=DECIMAL}, #{returnDate,jdbcType=DATE}, 
      #{returnTime,jdbcType=TIMESTAMP}, #{advancePay,jdbcType=DECIMAL}, #{operateTime,jdbcType=DATE}, 
      #{drawItem,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.imopan.adv.platform.entity.fos.FosTicketOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into fos_ticket_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="orderId != null">
        ORDER_ID,
      </if>
      <if test="orderName != null">
        ORDER_NAME,
      </if>
      <if test="productName != null">
        PRODUCT_NAME,
      </if>
      <if test="company != null">
        COMPANY,
      </if>
      <if test="cpMain != null">
        CP_MAIN,
      </if>
      <if test="takeCompany != null">
        TAKE_COMPANY,
      </if>
      <if test="oUnit != null">
        O_UNIT,
      </if>
      <if test="oCount != null">
        O_COUNT,
      </if>
      <if test="oCountSum != null">
        O_COUNT_SUM,
      </if>
      <if test="oAmountSum != null">
        O_AMOUNT_SUM,
      </if>
      <if test="subOAmount != null">
        SUB_O_AMOUNT,
      </if>
      <if test="subCAmount != null">
        SUB_C_AMOUNT,
      </if>
      <if test="profit != null">
        PROFIT,
      </if>
      <if test="profitMargin != null">
        PROFIT_MARGIN,
      </if>
      <if test="cut != null">
        CUT,
      </if>
      <if test="saleRebate != null">
        SALE_REBATE,
      </if>
      <if test="money != null">
        MONEY,
      </if>
      <if test="ticketCode != null">
        TICKET_CODE,
      </if>
      <if test="ticketNum != null">
        TICKET_NUM,
      </if>
      <if test="isCashierTicket != null">
        IS_CASHIER_TICKET,
      </if>
      <if test="ticketBegintime != null">
        TICKET_BEGINTIME,
      </if>
      <if test="ticketEndtime != null">
        TICKET_ENDTIME,
      </if>
      <if test="dataTime != null">
        DATA_TIME,
      </if>
      <if test="status != null">
        `STATUS`,
      </if>
      <if test="returnMoney != null">
        RETURN_MONEY,
      </if>
      <if test="returnDate != null">
        RETURN_DATE,
      </if>
      <if test="returnTime != null">
        RETURN_TIME,
      </if>
      <if test="advancePay != null">
        ADVANCE_PAY,
      </if>
      <if test="operateTime != null">
        OPERATE_TIME,
      </if>
      <if test="drawItem != null">
        DRAW_ITEM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderName != null">
        #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="cpMain != null">
        #{cpMain,jdbcType=VARCHAR},
      </if>
      <if test="takeCompany != null">
        #{takeCompany,jdbcType=VARCHAR},
      </if>
      <if test="oUnit != null">
        #{oUnit,jdbcType=DECIMAL},
      </if>
      <if test="oCount != null">
        #{oCount,jdbcType=INTEGER},
      </if>
      <if test="oCountSum != null">
        #{oCountSum,jdbcType=INTEGER},
      </if>
      <if test="oAmountSum != null">
        #{oAmountSum,jdbcType=DECIMAL},
      </if>
      <if test="subOAmount != null">
        #{subOAmount,jdbcType=DECIMAL},
      </if>
      <if test="subCAmount != null">
        #{subCAmount,jdbcType=DECIMAL},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DECIMAL},
      </if>
      <if test="profitMargin != null">
        #{profitMargin,jdbcType=DECIMAL},
      </if>
      <if test="cut != null">
        #{cut,jdbcType=DECIMAL},
      </if>
      <if test="saleRebate != null">
        #{saleRebate,jdbcType=DECIMAL},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="ticketCode != null">
        #{ticketCode,jdbcType=VARCHAR},
      </if>
      <if test="ticketNum != null">
        #{ticketNum,jdbcType=VARCHAR},
      </if>
      <if test="isCashierTicket != null">
        #{isCashierTicket,jdbcType=INTEGER},
      </if>
      <if test="ticketBegintime != null">
        #{ticketBegintime,jdbcType=DATE},
      </if>
      <if test="ticketEndtime != null">
        #{ticketEndtime,jdbcType=DATE},
      </if>
      <if test="dataTime != null">
        #{dataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="returnMoney != null">
        #{returnMoney,jdbcType=DECIMAL},
      </if>
      <if test="returnDate != null">
        #{returnDate,jdbcType=DATE},
      </if>
      <if test="returnTime != null">
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="advancePay != null">
        #{advancePay,jdbcType=DECIMAL},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=DATE},
      </if>
      <if test="drawItem != null">
        #{drawItem,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imopan.adv.platform.entity.fos.FosTicketOrderExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from fos_ticket_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update fos_ticket_order
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        ORDER_ID = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderName != null">
        ORDER_NAME = #{record.orderName,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        PRODUCT_NAME = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        COMPANY = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.cpMain != null">
        CP_MAIN = #{record.cpMain,jdbcType=VARCHAR},
      </if>
      <if test="record.takeCompany != null">
        TAKE_COMPANY = #{record.takeCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.oUnit != null">
        O_UNIT = #{record.oUnit,jdbcType=DECIMAL},
      </if>
      <if test="record.oCount != null">
        O_COUNT = #{record.oCount,jdbcType=INTEGER},
      </if>
      <if test="record.oCountSum != null">
        O_COUNT_SUM = #{record.oCountSum,jdbcType=INTEGER},
      </if>
      <if test="record.oAmountSum != null">
        O_AMOUNT_SUM = #{record.oAmountSum,jdbcType=DECIMAL},
      </if>
      <if test="record.subOAmount != null">
        SUB_O_AMOUNT = #{record.subOAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.subCAmount != null">
        SUB_C_AMOUNT = #{record.subCAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.profit != null">
        PROFIT = #{record.profit,jdbcType=DECIMAL},
      </if>
      <if test="record.profitMargin != null">
        PROFIT_MARGIN = #{record.profitMargin,jdbcType=DECIMAL},
      </if>
      <if test="record.cut != null">
        CUT = #{record.cut,jdbcType=DECIMAL},
      </if>
      <if test="record.saleRebate != null">
        SALE_REBATE = #{record.saleRebate,jdbcType=DECIMAL},
      </if>
      <if test="record.money != null">
        MONEY = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.ticketCode != null">
        TICKET_CODE = #{record.ticketCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketNum != null">
        TICKET_NUM = #{record.ticketNum,jdbcType=VARCHAR},
      </if>
      <if test="record.isCashierTicket != null">
        IS_CASHIER_TICKET = #{record.isCashierTicket,jdbcType=INTEGER},
      </if>
      <if test="record.ticketBegintime != null">
        TICKET_BEGINTIME = #{record.ticketBegintime,jdbcType=DATE},
      </if>
      <if test="record.ticketEndtime != null">
        TICKET_ENDTIME = #{record.ticketEndtime,jdbcType=DATE},
      </if>
      <if test="record.dataTime != null">
        DATA_TIME = #{record.dataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `STATUS` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.returnMoney != null">
        RETURN_MONEY = #{record.returnMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.returnDate != null">
        RETURN_DATE = #{record.returnDate,jdbcType=DATE},
      </if>
      <if test="record.returnTime != null">
        RETURN_TIME = #{record.returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.advancePay != null">
        ADVANCE_PAY = #{record.advancePay,jdbcType=DECIMAL},
      </if>
      <if test="record.operateTime != null">
        OPERATE_TIME = #{record.operateTime,jdbcType=DATE},
      </if>
      <if test="record.drawItem != null">
        DRAW_ITEM = #{record.drawItem,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update fos_ticket_order
    set ID = #{record.id,jdbcType=INTEGER},
      ORDER_ID = #{record.orderId,jdbcType=INTEGER},
      ORDER_NAME = #{record.orderName,jdbcType=VARCHAR},
      PRODUCT_NAME = #{record.productName,jdbcType=VARCHAR},
      COMPANY = #{record.company,jdbcType=VARCHAR},
      CP_MAIN = #{record.cpMain,jdbcType=VARCHAR},
      TAKE_COMPANY = #{record.takeCompany,jdbcType=VARCHAR},
      O_UNIT = #{record.oUnit,jdbcType=DECIMAL},
      O_COUNT = #{record.oCount,jdbcType=INTEGER},
      O_COUNT_SUM = #{record.oCountSum,jdbcType=INTEGER},
      O_AMOUNT_SUM = #{record.oAmountSum,jdbcType=DECIMAL},
      SUB_O_AMOUNT = #{record.subOAmount,jdbcType=DECIMAL},
      SUB_C_AMOUNT = #{record.subCAmount,jdbcType=DECIMAL},
      PROFIT = #{record.profit,jdbcType=DECIMAL},
      PROFIT_MARGIN = #{record.profitMargin,jdbcType=DECIMAL},
      CUT = #{record.cut,jdbcType=DECIMAL},
      SALE_REBATE = #{record.saleRebate,jdbcType=DECIMAL},
      MONEY = #{record.money,jdbcType=DECIMAL},
      TICKET_CODE = #{record.ticketCode,jdbcType=VARCHAR},
      TICKET_NUM = #{record.ticketNum,jdbcType=VARCHAR},
      IS_CASHIER_TICKET = #{record.isCashierTicket,jdbcType=INTEGER},
      TICKET_BEGINTIME = #{record.ticketBegintime,jdbcType=DATE},
      TICKET_ENDTIME = #{record.ticketEndtime,jdbcType=DATE},
      DATA_TIME = #{record.dataTime,jdbcType=TIMESTAMP},
      `STATUS` = #{record.status,jdbcType=TINYINT},
      RETURN_MONEY = #{record.returnMoney,jdbcType=DECIMAL},
      RETURN_DATE = #{record.returnDate,jdbcType=DATE},
      RETURN_TIME = #{record.returnTime,jdbcType=TIMESTAMP},
      ADVANCE_PAY = #{record.advancePay,jdbcType=DECIMAL},
      OPERATE_TIME = #{record.operateTime,jdbcType=DATE},
      DRAW_ITEM = #{record.drawItem,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imopan.adv.platform.entity.fos.FosTicketOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update fos_ticket_order
    <set>
      <if test="orderId != null">
        ORDER_ID = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderName != null">
        ORDER_NAME = #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        PRODUCT_NAME = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        COMPANY = #{company,jdbcType=VARCHAR},
      </if>
      <if test="cpMain != null">
        CP_MAIN = #{cpMain,jdbcType=VARCHAR},
      </if>
      <if test="takeCompany != null">
        TAKE_COMPANY = #{takeCompany,jdbcType=VARCHAR},
      </if>
      <if test="oUnit != null">
        O_UNIT = #{oUnit,jdbcType=DECIMAL},
      </if>
      <if test="oCount != null">
        O_COUNT = #{oCount,jdbcType=INTEGER},
      </if>
      <if test="oCountSum != null">
        O_COUNT_SUM = #{oCountSum,jdbcType=INTEGER},
      </if>
      <if test="oAmountSum != null">
        O_AMOUNT_SUM = #{oAmountSum,jdbcType=DECIMAL},
      </if>
      <if test="subOAmount != null">
        SUB_O_AMOUNT = #{subOAmount,jdbcType=DECIMAL},
      </if>
      <if test="subCAmount != null">
        SUB_C_AMOUNT = #{subCAmount,jdbcType=DECIMAL},
      </if>
      <if test="profit != null">
        PROFIT = #{profit,jdbcType=DECIMAL},
      </if>
      <if test="profitMargin != null">
        PROFIT_MARGIN = #{profitMargin,jdbcType=DECIMAL},
      </if>
      <if test="cut != null">
        CUT = #{cut,jdbcType=DECIMAL},
      </if>
      <if test="saleRebate != null">
        SALE_REBATE = #{saleRebate,jdbcType=DECIMAL},
      </if>
      <if test="money != null">
        MONEY = #{money,jdbcType=DECIMAL},
      </if>
      <if test="ticketCode != null">
        TICKET_CODE = #{ticketCode,jdbcType=VARCHAR},
      </if>
      <if test="ticketNum != null">
        TICKET_NUM = #{ticketNum,jdbcType=VARCHAR},
      </if>
      <if test="isCashierTicket != null">
        IS_CASHIER_TICKET = #{isCashierTicket,jdbcType=INTEGER},
      </if>
      <if test="ticketBegintime != null">
        TICKET_BEGINTIME = #{ticketBegintime,jdbcType=DATE},
      </if>
      <if test="ticketEndtime != null">
        TICKET_ENDTIME = #{ticketEndtime,jdbcType=DATE},
      </if>
      <if test="dataTime != null">
        DATA_TIME = #{dataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `STATUS` = #{status,jdbcType=TINYINT},
      </if>
      <if test="returnMoney != null">
        RETURN_MONEY = #{returnMoney,jdbcType=DECIMAL},
      </if>
      <if test="returnDate != null">
        RETURN_DATE = #{returnDate,jdbcType=DATE},
      </if>
      <if test="returnTime != null">
        RETURN_TIME = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="advancePay != null">
        ADVANCE_PAY = #{advancePay,jdbcType=DECIMAL},
      </if>
      <if test="operateTime != null">
        OPERATE_TIME = #{operateTime,jdbcType=DATE},
      </if>
      <if test="drawItem != null">
        DRAW_ITEM = #{drawItem,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imopan.adv.platform.entity.fos.FosTicketOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update fos_ticket_order
    set ORDER_ID = #{orderId,jdbcType=INTEGER},
      ORDER_NAME = #{orderName,jdbcType=VARCHAR},
      PRODUCT_NAME = #{productName,jdbcType=VARCHAR},
      COMPANY = #{company,jdbcType=VARCHAR},
      CP_MAIN = #{cpMain,jdbcType=VARCHAR},
      TAKE_COMPANY = #{takeCompany,jdbcType=VARCHAR},
      O_UNIT = #{oUnit,jdbcType=DECIMAL},
      O_COUNT = #{oCount,jdbcType=INTEGER},
      O_COUNT_SUM = #{oCountSum,jdbcType=INTEGER},
      O_AMOUNT_SUM = #{oAmountSum,jdbcType=DECIMAL},
      SUB_O_AMOUNT = #{subOAmount,jdbcType=DECIMAL},
      SUB_C_AMOUNT = #{subCAmount,jdbcType=DECIMAL},
      PROFIT = #{profit,jdbcType=DECIMAL},
      PROFIT_MARGIN = #{profitMargin,jdbcType=DECIMAL},
      CUT = #{cut,jdbcType=DECIMAL},
      SALE_REBATE = #{saleRebate,jdbcType=DECIMAL},
      MONEY = #{money,jdbcType=DECIMAL},
      TICKET_CODE = #{ticketCode,jdbcType=VARCHAR},
      TICKET_NUM = #{ticketNum,jdbcType=VARCHAR},
      IS_CASHIER_TICKET = #{isCashierTicket,jdbcType=INTEGER},
      TICKET_BEGINTIME = #{ticketBegintime,jdbcType=DATE},
      TICKET_ENDTIME = #{ticketEndtime,jdbcType=DATE},
      DATA_TIME = #{dataTime,jdbcType=TIMESTAMP},
      `STATUS` = #{status,jdbcType=TINYINT},
      RETURN_MONEY = #{returnMoney,jdbcType=DECIMAL},
      RETURN_DATE = #{returnDate,jdbcType=DATE},
      RETURN_TIME = #{returnTime,jdbcType=TIMESTAMP},
      ADVANCE_PAY = #{advancePay,jdbcType=DECIMAL},
      OPERATE_TIME = #{operateTime,jdbcType=DATE},
      DRAW_ITEM = #{drawItem,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
	<select id="findTicketOrder" parameterType="map" resultMap="BaseResultMap">
		SELECT
		OM.ORDER_ID ORDER_ID,
		OM.ORDER_NAME ORDER_NAME,
		OM.PRODUCT_NAME
		PRODUCT_NAME,
		OM.COOPERATE_NAME COMPANY,
		OM.CP_MAIN CP_MAIN,
		OM.O_COUNT
		O_COUNT,
		OM.O_AMOUNT O_AMOUNT,
		OM.O_COUNT_SUM O_COUNT_SUM,
		OM.O_AMOUNT_SUM O_AMOUNT_SUM,
		OM.CUT CUT,
		OM.SALE_REBATE SALE_REBATE,
		OM.SUB_O_AMOUNT SUB_O_AMOUNT,
		SUM(OCD.C_AMOUNT) +
		SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT) SUB_C_AMOUNT,
		OM.SUB_O_AMOUNT - (
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT)
		) PROFIT,
		(
		OM.SUB_O_AMOUNT - (
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT)
		)
		) / OM.SUB_O_AMOUNT PROFIT_MARGIN,
		OM.ENTRY_BEGINTIME TICKET_BEGINTIME,
		OM.ENTRY_ENDTIME TICKET_ENDTIME,
		O.ADVANCE_PAY ADVANCE_PAY,
		OM.CREATE_TIME OPERATE_TIME
		FROM
		FOS_ORDER_MONTH OM
		LEFT OUTER JOIN (
		SELECT
		*
		FROM
		FOS_OC_DAY
		WHERE 1=1
		<!-- CHANNEL_MONTH_STATUS = 1 -->
		AND OC_DAY_STATUS = 0
		AND ENTRY_DAY_STATUS = 1
		) OCD ON OM.ORDER_ID = OCD.ORDER_ID
		LEFT OUTER JOIN FOS_ORDER O ON OM.ORDER_ID=O.ORDER_ID
		WHERE
		1 = 1
		AND OM.`STATUS` = 0
		AND OM.ENTRY_TICKET = 1
		AND OM.ENTRY_MONEY = 1
		AND OM.`ENTRY_BEGINTIME` &lt;= OCD.`ENTRY_TIME` AND OM.`ENTRY_ENDTIME` &gt;=
		OCD.`ENTRY_TIME`
		<if test="orderName != null">
			AND OM.ORDER_NAME like #{orderName}
		</if>
		<if test="productName != null">
			AND OM.PRODUCT_NAME like #{productName}
		</if>
		<if test="orderId != null">
			AND OM.ORDER_ID like #{orderId}
		</if>
		<if test="entryBegintime != null and entryEndtime != null">
			AND OM.ENTRY_BEGINTIME=#{entryBegintime} AND
			OM.ENTRY_ENDTIME=#{entryEndtime}
		</if>
		GROUP BY
		OM.ORDER_ID,OM.ENTRY_BEGINTIME,OM.ENTRY_ENDTIME
		ORDER BY OM.CREATE_TIME DESC
		LIMIT #{LimitStart} , #{LimitEnd}


	</select>
	<select id="countFindTicketOrder" parameterType="map" resultType="java.lang.Integer">
		SELECT COUNT(W.ORDER_ID)
		FROM(
		SELECT
		OM.ORDER_ID ORDER_ID,
		OM.ORDER_NAME ORDER_NAME,
		OM.PRODUCT_NAME
		PRODUCT_NAME,
		OM.COOPERATE_NAME COMPANY,
		OM.CP_MAIN CP_MAIN,
		OM.O_COUNT
		O_COUNT,
		OM.O_AMOUNT O_AMOUNT,
		OM.O_COUNT_SUM O_COUNT_SUM,
		OM.O_AMOUNT_SUM O_AMOUNT_SUM,
		OM.CUT CUT,
		OM.SALE_REBATE SALE_REBATE,
		OM.SUB_O_AMOUNT SUB_O_AMOUNT,
		SUM(OCD.C_AMOUNT) +
		SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT) SUB_C_AMOUNT,
		OM.SUB_O_AMOUNT - (
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT)
		) PROFIT,
		(
		OM.SUB_O_AMOUNT - (
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT)
		)
		) / OM.SUB_O_AMOUNT PROFIT_MARGIN,
		OM.ENTRY_BEGINTIME TICKET_BEGINTIME,
		OM.ENTRY_ENDTIME TICKET_ENDTIME
		FROM
		FOS_ORDER_MONTH OM
		LEFT OUTER JOIN (
		SELECT
		*
		FROM
		FOS_OC_DAY
		WHERE 1=1
		<!-- CHANNEL_MONTH_STATUS = 1 -->
		AND OC_DAY_STATUS = 0
		AND ENTRY_DAY_STATUS = 1
		) OCD ON OM.ORDER_ID = OCD.ORDER_ID
		WHERE
		1 = 1
		AND OM.`STATUS` = 0
		AND OM.ENTRY_TICKET = 1
		AND OM.ENTRY_MONEY = 1
		AND OM.`ENTRY_BEGINTIME` &lt;= OCD.`ENTRY_TIME` AND OM.`ENTRY_ENDTIME` &gt;=
		OCD.`ENTRY_TIME`
		<if test="orderName != null">
			AND OM.ORDER_NAME like #{orderName}
		</if>
		<if test="productName != null">
			AND OM.PRODUCT_NAME like #{productName}
		</if>
		<if test="entryBegintime != null and entryEndtime != null">
			AND OM.ENTRY_BEGINTIME=#{entryBegintime} AND
			OM.ENTRY_ENDTIME=#{entryEndtime}
		</if>
		GROUP BY
		OM.ORDER_ID,OM.ENTRY_BEGINTIME,OM.ENTRY_ENDTIME
		) W
	</select>
	
	
	<resultMap id="ReceiptHistoryResultMap" type="com.imopan.adv.platform.vo.fos.FosTicketOrderVo">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="ORDER_ID" jdbcType="INTEGER" property="orderId" />
		<result column="ORDER_NAME" jdbcType="VARCHAR" property="orderName" />
		<result column="PRODUCT_NAME" jdbcType="VARCHAR" property="productName" />
		<result column="COMPANY" jdbcType="VARCHAR" property="company" />
		<result column="CP_MAIN" jdbcType="VARCHAR" property="cpMain" />
		<result column="TAKE_COMPANY" jdbcType="VARCHAR" property="takeCompany" />
		<result column="O_UNIT" jdbcType="DECIMAL" property="oUnit" />
		<result column="O_COUNT" jdbcType="INTEGER" property="oCount" />
		<result column="O_COUNT_SUM" jdbcType="INTEGER" property="oCountSum" />
		<result column="O_AMOUNT_SUM" jdbcType="DECIMAL" property="oAmountSum" />
		<result column="SUB_O_AMOUNT" jdbcType="DECIMAL" property="subOAmount" />
		<result column="SUB_C_AMOUNT" jdbcType="DECIMAL" property="subCAmount" />
		<result column="PROFIT" jdbcType="DECIMAL" property="profit" />
		<result column="PROFIT_MARGIN" jdbcType="DECIMAL" property="profitMargin" />
		<result column="CUT" jdbcType="DECIMAL" property="cut" />
		<result column="SALE_REBATE" jdbcType="DECIMAL" property="saleRebate" />
		<result column="MONEY" jdbcType="DECIMAL" property="money" />
		<result column="TICKET_CODE" jdbcType="VARCHAR" property="ticketCode" />
		<result column="TICKET_NUM" jdbcType="VARCHAR" property="ticketNum" />
		<result column="IS_CASHIER_TICKET" jdbcType="INTEGER" property="isCashierTicket" />
		<result column="TICKET_BEGINTIME" jdbcType="DATE" property="ticketBegintime" />
		<result column="TICKET_ENDTIME" jdbcType="DATE" property="ticketEndtime" />
		<result column="DATA_TIME" jdbcType="TIMESTAMP" property="dataTime" />
		<result column="STATUS" jdbcType="TINYINT" property="status" />
		<result column="RETURN_MONEY" jdbcType="DECIMAL" property="returnMoney" />
		<result column="RETURN_DATE" jdbcType="DATE" property="returnDate" />
		<result column="RETURN_TIME" jdbcType="TIMESTAMP" property="returnTime" />
		<result column="ADVANCE_PAY" jdbcType="DECIMAL" property="advancePay" />
		<result column="OPERATE_TIME" jdbcType="DATE" property="operateTime" />
		<result column="EXTEND_TYPE" jdbcType="TINYINT" property="extendType" />
		<result column="DIRECTOR_NAME" jdbcType="VARCHAR" property="directorName" />
		<result column="COOPERATE_NAME" jdbcType="VARCHAR" property="cooperateName" />
		<result column="DRAW_ITEM" jdbcType="TINYINT" property="drawItem" />
		<result column="ORDER_DEPARTMENT" jdbcType="TINYINT" property="orderDepartment" />
	</resultMap>
	
	<select id="findReceiptHistoryList" parameterType="map" resultMap="ReceiptHistoryResultMap">
		SELECT
			T.*,
			O.DIRECTOR_NAME,
			O.EXTEND_TYPE,
			o.ORDER_DEPARTMENT
		FROM
			FOS_TICKET_ORDER T
			LEFT JOIN FOS_ORDER O ON T.ORDER_ID = O.ORDER_ID
		WHERE 1=1
		
			<!-- 数据级控制 -->
			<if test="businessNames != null">
				AND  o.DIRECTOR_NAME in  ${businessNames}
			</if>
			<if test="teamId != null">
				AND  o.ORDER_DEPARTMENT =  #{teamId}
			</if>
		
			<if test="orderDepartment != null">
				AND  o.ORDER_DEPARTMENT =  #{orderDepartment}
			</if>
		
			<if test="status != null">
				AND T.STATUS = #{status}
			</if>
			<if test="orderName != null">
				AND T.ORDER_NAME like #{orderName}
			</if>
			<if test="productName != null">
				AND T.PRODUCT_NAME like #{productName}
			</if>
			<if test="directorName != null">
				AND O.DIRECTOR_NAME like #{directorName}
			</if>
			<if test="company != null">
				AND T.COMPANY like #{company}
			</if>
			<if test="extendType != null">
				AND O.EXTEND_TYPE = #{extendType}
			</if>
			<if test="entryBegintime != null and entryEndtime != null">
				AND ((T.TICKET_BEGINTIME &gt;= #{entryBegintime} AND T.TICKET_BEGINTIME &lt;= #{entryEndtime})
				OR (T.TICKET_ENDTIME &gt;= #{entryBegintime} AND T.TICKET_ENDTIME &lt;= #{entryEndtime})
				OR (T.TICKET_BEGINTIME &lt;= #{entryBegintime} AND T.TICKET_ENDTIME &gt;= #{entryEndtime})
				)
			</if>
		ORDER BY T.ORDER_ID DESC
		<if test="LimitStart != null and LimitStart&gt;=0">
			LIMIT #{LimitStart} , #{LimitEnd}
		</if>
			
	</select>
	
	<select id="countFindReceiptHistoryList" parameterType="map" resultType="java.lang.Integer">
		select count(*)
		from(
			SELECT
			T.*,
			O.DIRECTOR_NAME,
			O.EXTEND_TYPE
		FROM
			FOS_TICKET_ORDER T
			LEFT JOIN FOS_ORDER O ON T.ORDER_ID = O.ORDER_ID
		WHERE 1=1
			
			<!-- 数据级控制 -->
			<if test="businessNames != null">
				AND  o.DIRECTOR_NAME in  ${businessNames}
			</if>
			<if test="teamId != null">
				AND  o.ORDER_DEPARTMENT =  #{teamId}
			</if>
			
			<if test="orderDepartment != null">
				AND  o.ORDER_DEPARTMENT =  #{orderDepartment}
			</if>
		
			<if test="status != null">
				AND T.STATUS = #{status}
			</if>
			<if test="orderName != null">
				AND T.ORDER_NAME like #{orderName}
			</if>
			<if test="productName != null">
				AND T.PRODUCT_NAME like #{productName}
			</if>
			<if test="directorName != null">
				AND O.DIRECTOR_NAME like #{directorName}
			</if>
			<if test="company != null">
				AND T.COMPANY like #{company}
			</if>
			<if test="extendType != null">
				AND O.EXTEND_TYPE = #{extendType}
			</if>
			<if test="entryBegintime != null and entryEndtime != null">
				AND ((T.TICKET_BEGINTIME &gt;= #{entryBegintime} AND T.TICKET_BEGINTIME &lt;= #{entryEndtime})
				OR (T.TICKET_ENDTIME &gt;= #{entryBegintime} AND T.TICKET_ENDTIME &lt;= #{entryEndtime})
				OR (T.TICKET_BEGINTIME &lt;= #{entryBegintime} AND T.TICKET_ENDTIME &gt;= #{entryEndtime})
				)
			</if>
		ORDER BY T.ORDER_ID DESC
		) w
	</select>
	
	
	<select id="findReceiptHistoryListSum" parameterType="map" resultMap="ReceiptHistoryResultMap">
		SELECT
			SUM(T.MONEY) MONEY,
			SUM(T.CUT) CUT,
			SUM(T.RETURN_MONEY) RETURN_MONEY,
			SUM(T.SUB_O_AMOUNT) SUB_O_AMOUNT
		FROM
			FOS_TICKET_ORDER T
			LEFT JOIN FOS_ORDER O ON T.ORDER_ID = O.ORDER_ID
		WHERE 1=1
		
			<!-- 数据级控制 -->
			<if test="businessNames != null">
				AND  o.DIRECTOR_NAME in  ${businessNames}
			</if>
			<if test="teamId != null">
				AND  o.ORDER_DEPARTMENT =  #{teamId}
			</if>
		
			<if test="orderDepartment != null">
				AND  o.ORDER_DEPARTMENT =  #{orderDepartment}
			</if>
		
			<if test="status != null">
				AND T.STATUS = #{status}
			</if>
			<if test="orderName != null">
				AND T.ORDER_NAME like #{orderName}
			</if>
			<if test="productName != null">
				AND T.PRODUCT_NAME like #{productName}
			</if>
			<if test="directorName != null">
				AND O.DIRECTOR_NAME like #{directorName}
			</if>
			<if test="company != null">
				AND T.COMPANY like #{company}
			</if>
			<if test="extendType != null">
				AND O.EXTEND_TYPE = #{extendType}
			</if>
			<if test="entryBegintime != null and entryEndtime != null">
				AND ((T.TICKET_BEGINTIME &gt;= #{entryBegintime} AND T.TICKET_BEGINTIME &lt;= #{entryEndtime})
				OR (T.TICKET_ENDTIME &gt;= #{entryBegintime} AND T.TICKET_ENDTIME &lt;= #{entryEndtime})
				OR (T.TICKET_BEGINTIME &lt;= #{entryBegintime} AND T.TICKET_ENDTIME &gt;= #{entryEndtime})
				)
			</if>
	</select>
	<select id="findAdutiTicketOrder" parameterType="map" resultMap="BaseResultMap">
		SELECT
				OM.ORDER_ID ORDER_ID,
				OM.ORDER_NAME ORDER_NAME,
				OM.PRODUCT_NAME PRODUCT_NAME,
				OM.COOPERATE_NAME COMPANY,
				OM.CP_MAIN CP_MAIN,
				OM.O_COUNT_SUM O_COUNT_SUM,
				OM.O_AMOUNT_SUM O_AMOUNT_SUM,
				AOM.FINANCIAL_SUBMIT_O_COUNT O_COUNT,
				AOM.FINANCIAL_SUBMIT_O_AMOUNT O_AMOUNT,
				AOM.FINANCIAL_SUBMIT_O_AMOUNT SUB_O_AMOUNT,
				AOM.FINANCIAL_SUBMIT_CUT CUT,
				SUM(OCD.FINANCIALSUBMITCAMOUNT) + SUM(OCD.AVGMEDIAREBATE) + SUM(OCD.AVGOTHEREXPENSE) + AOM.FINANCIAL_SUBMIT_SALE_REBATE - SUM(OCD.AVGCHANNELCUT) SUB_C_AMOUNT,
				AOM.FINANCIAL_SUBMIT_O_AMOUNT - (
					SUM(OCD.FINANCIALSUBMITCAMOUNT) + SUM(OCD.AVGMEDIAREBATE) + SUM(OCD.AVGOTHEREXPENSE) + AOM.FINANCIAL_SUBMIT_SALE_REBATE - SUM(OCD.AVGCHANNELCUT)
				) PROFIT,
				((
					AOM.FINANCIAL_SUBMIT_O_AMOUNT - (
					SUM(OCD.FINANCIALSUBMITCAMOUNT) + SUM(OCD.AVGMEDIAREBATE) + SUM(OCD.AVGOTHEREXPENSE) + AOM.FINANCIAL_SUBMIT_SALE_REBATE - SUM(OCD.AVGCHANNELCUT)
					) 
				) / (AOM.FINANCIAL_SUBMIT_O_AMOUNT) )PROFIT_MARGIN,
				OM.ENTRY_BEGINTIME TICKET_BEGINTIME,
				OM.ENTRY_ENDTIME TICKET_ENDTIME,
				O.ADVANCE_PAY ADVANCE_PAY,
				AOM.FINANCIAL_SUBMIT_ORDER_DATE OPERATE_TIME
		FROM
			FOS_ORDER_MONTH OM
		LEFT JOIN FOS_AUDIT_ORDER_MONTH AOM ON OM.ID = AOM.FOS_ORDER_MONTH_ID
		LEFT OUTER JOIN (
			SELECT
				FOD.CHANNEL_ORDER_ID CHANNELORDERID,
				FOD.ORDER_ID ORDERID,
				FOD.ORDER_NAME ORDERNAME,
				FOD.PRODUCT_NAME PRODUCTNAME,
				FOD.ORDER_DIRECTOR_NAME ORDERDIRECTORNAME,
				FOD.COOPERATE_NAME COOPERATENAME,
				FOD.CP_MAIN CPMAIN,
				FOD.PAY_UNIT PAYUNIT,
				FOD.O_COUNT OCOUNT,
				FOD.O_AMOUNT OAMOUNT,
				FOD.CHANNEL_ID CHANNELID,
				FOD.CHANNEL_NAME CHANNELNAME,
				FOD.OUTER_UNIT OUTERUNIT,
				FOD.C_COUNT CCOUNT,
				FOD.C_AMOUNT CAMOUNT,
				FOD.CHANNEL_DIRECTOR_NAME CHANNELDIRECTORNAME,
				FOD.ENTRY_DAY_STATUS ENTRYDAYSTATUS,
				FOD.CREATE_TIME CREATETIME,
				FOD.MODIFY_TIME MODIFYTIME,
				FOD.OC_DAY_STATUS OCDAYSTATUS,
				FOD.ENTRY_TIME ENTRYTIME,
				FOD.CHANNEL_MONTH_STATUS CHANNELMONTHSTATUS,
				FOD.AVG_MEDIA_REBATE AVGMEDIAREBATE,
				FOD.AVG_OTHER_EXPENSE AVGOTHEREXPENSE,
				FOD.AVG_CHANNEL_CUT AVGCHANNELCUT,
				FOD.ORDER_MONTH_STATUS ORDERMONTHSTATUS,
				FACPD.ID AUDITCPID,
				FACPD.OC_DAY_ID AUDITCPOCDAYID,
				FACPD.ORDER_SUBMIT_CONFIRM ORDERSUBMITCONFIRM,
				FACPD.CP_SUBMIT_PAYUNIT CPSUBMITPAYUNIT,
				FACPD.CP_SUBMIT_OCOUNT CPSUBMITOCOUNT,
				FACPD.CP_SUBMIT_OAMOUNT CPSUBMITOAMOUNT,
				FACPD.FINANCIAL_SUBMIT_CP_STATUS FINANCIALSUBMITCPSTATUS,
				FACPD.FINANCIAL_SUBMIT_PAYUNIT FINANCIALSUBMITPAYUNIT,
				FACPD.FINANCIAL_SUBMIT_OCOUNT FINANCIALSUBMITOCOUNT,
				FACPD.FINANCIAL_SUBMIT_OAMOUNT FINANCIALSUBMITOAMOUNT,
				FACPD.FINANCIAL_SUBMIT_CP_DATE FINANCIALSUBMITCPDATE,
				FACPD.FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME FINANCIALSUBMITCPNOTTHROUGHTIME,
				FACPD.FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON FINANCIALSUBMITCPNOTTHROUGHREASON,
				FACPD.AVG_MONTH_OCOUNT AVGMONTHOCOUNT,
				FACPD.AVG_MONTH_OAMOUNT AVGMONTHOAMOUNT,
				FACPD.AVG_CUT AVGCUT,
				FACPD.AVG_SALE_REBATE AVGSALEREBATE,
				FACPD.AVG_MONEY AUDITCPAVGMONEY,
				FACPD.AVG_RETURN_MONEY AVGRETURNMONEY,
				FACPD.ORDER_MONTH_STATUS FOSAUDITCPDAYORDERMONTHSTATUS,
				FACPD.FINANCIAL_DRAWBILL_STATUS FINANCIALDRAWBILLSTATUS,
				FACPD.FINANCIAL_RECEIPT_STATUS FINANCIALRECEIPTSTATUS,
				FACHD.ID AUDITCHANNELID,
				FACHD.OC_DAY_ID OCDAYID,
				FACHD.CHANNEL_SUBMIT_CONFIRM CHANNELSUBMITCONFIRM,
				FACHD.CHANNEL_SUBMIT_OUTERUNIT CHANNELSUBMITOUTERUNIT,
				FACHD.CHANNEL_SUBMIT_CCOUNT CHANNELSUBMITCCOUNT,
				FACHD.CHANNEL_SUBMIT_CAMOUNT CHANNELSUBMITCAMOUNT,
				FACHD.FINANCIAL_SUBMIT_CHANNEL_STATUS FINANCIALSUBMITCHANNELSTATUS,
				FACHD.FINANCIAL_SUBMIT_OUTERUNIT FINANCIALSUBMITOUTERUNIT,
				FACHD.FINANCIAL_SUBMIT_CCOUNT FINANCIALSUBMITCCOUNT,
				FACHD.FINANCIAL_SUBMIT_CAMOUNT FINANCIALSUBMITCAMOUNT,
				FACHD.FINANCIAL_SUBMIT_CHANNEL_DATE FINANCIALSUBMITCHANNELDATE,
				FACHD.FINANCIAL_SUBMIT_CHANNEL_NOTTHROUGH_TIME FINANCIALSUBMITCHANNELNOTTHROUGHTIME,
				FACHD.FINANCIAL_SUBMIT_CHANNEL_NOTTHROUGH_REASON FINANCIALSUBMITCHANNELNOTTHROUGHREASON,
				FACHD.AVG_MONTH_CCOUNT AVGMONTHCCOUNT,
				FACHD.AVG_MONTH_CAMOUNT AVGMONTHCAMOUNT,
				FACHD.AVG_SUB_AMOUNT AVGSUBAMOUNT,
				FACHD.AVG_MEDIA_REBATE AUDITCHANNELAVGMEDIAREBATE,
				FACHD.AVG_OTHER_EXPENSE AUDITCHANNELAVGOTHEREXPENSE,
				FACHD.AVG_CHANNEL_CUT AUDITCHANNELAVGCHANNELCUT,
				FACHD.AVG_MONEY AVGMONEY,
				FACHD.AVG_PAY_MONEY AVGPAYMONEY,
				FACHD.CHANNEL_MONTH_STATUS FOSAUDITCHANNELDAYMONTHSTATUS,
				FACHD.FINANCIAL_RECEIVE_STATUS FINANCIALRECEIVESTATUS,
				FACHD.FINANCIAL_PAY_STATUS FINANCIALPAYSTATUS
			FROM
				FOS_OC_DAY FOD
			LEFT JOIN FOS_AUDIT_CP_DAY FACPD ON FOD.ID = FACPD.OC_DAY_ID
			LEFT JOIN FOS_AUDIT_CHANNEL_DAY FACHD ON FOD.ID = FACHD.OC_DAY_ID
			WHERE
				1 = 1
			AND FOD.OC_DAY_STATUS = 0
			AND FOD.ENTRY_DAY_STATUS = 1
			AND FACPD.FINANCIAL_SUBMIT_CP_STATUS = 3
		) OCD ON OM.ORDER_ID = OCD.ORDERID
		LEFT OUTER JOIN FOS_ORDER O ON OM.ORDER_ID = O.ORDER_ID
		WHERE
			1 = 1
		AND OM.`STATUS` = 0
		AND OM.ENTRY_TICKET = 1
		AND OM.ENTRY_MONEY = 1
		AND AOM.FINANCIAL_SUBMIT_ORDER_STATUS = 3
		AND AOM.DRAW_BILL_STATUS = 1
		AND OM.`ENTRY_BEGINTIME` &lt;= OCD.`ENTRYTIME`
		AND OM.`ENTRY_ENDTIME` &gt;= OCD.`ENTRYTIME`
		
		<!-- 数据级控制 -->
		<if test="businessNames != null">
			AND  o.DIRECTOR_NAME in  ${businessNames}
		</if>
		<if test="channelNames != null">
			AND  OCD.CHANNELDIRECTORNAME in  ${channelNames}
		</if>
		<if test="teamId != null">
			AND  o.ORDER_DEPARTMENT =  #{teamId}
		</if>
		
		<if test="orderName != null">
			AND OM.ORDER_NAME like #{orderName}
		</if>
		<if test="productName != null">
			AND OM.PRODUCT_NAME like #{productName}
		</if>
		<if test="orderId != null">
			AND OM.ORDER_ID like #{orderId}
		</if>
		<if test="entryBegintime != null and entryEndtime != null">
			AND OM.ENTRY_BEGINTIME=#{entryBegintime} AND
			OM.ENTRY_ENDTIME=#{entryEndtime}
		</if>
		GROUP BY
			OM.ORDER_ID,
			OM.ENTRY_BEGINTIME,
			OM.ENTRY_ENDTIME
		ORDER BY
			OM.CREATE_TIME DESC
	LIMIT #{LimitStart} , #{LimitEnd}
	</select>
	
	<select id="countFindAdutiTicketOrder" parameterType="map" resultType="java.lang.Integer">
		select count(w.ORDER_ID)
		from (
				SELECT
				OM.ORDER_ID ORDER_ID,
				OM.ORDER_NAME ORDER_NAME,
				OM.PRODUCT_NAME PRODUCT_NAME,
				OM.COOPERATE_NAME COMPANY,
				OM.CP_MAIN CP_MAIN,
				OM.O_COUNT_SUM O_COUNT_SUM,
				OM.O_AMOUNT_SUM O_AMOUNT_SUM,
				AOM.FINANCIAL_SUBMIT_O_COUNT O_COUNT,
				AOM.FINANCIAL_SUBMIT_O_AMOUNT O_AMOUNT,
				AOM.FINANCIAL_SUBMIT_O_AMOUNT SUB_O_AMOUNT,
				AOM.FINANCIAL_SUBMIT_CUT CUT,
				SUM(OCD.FINANCIALSUBMITCAMOUNT) + SUM(OCD.AVGMEDIAREBATE) + SUM(OCD.AVGOTHEREXPENSE) + AOM.FINANCIAL_SUBMIT_SALE_REBATE - SUM(OCD.AVGCHANNELCUT) SUB_C_AMOUNT,
				AOM.FINANCIAL_SUBMIT_O_AMOUNT - (
					SUM(OCD.FINANCIALSUBMITCAMOUNT) + SUM(OCD.AVGMEDIAREBATE) + SUM(OCD.AVGOTHEREXPENSE) + AOM.FINANCIAL_SUBMIT_SALE_REBATE - SUM(OCD.AVGCHANNELCUT)
				) PROFIT,
				((
					AOM.FINANCIAL_SUBMIT_O_AMOUNT - (
					SUM(OCD.FINANCIALSUBMITCAMOUNT) + SUM(OCD.AVGMEDIAREBATE) + SUM(OCD.AVGOTHEREXPENSE) + AOM.FINANCIAL_SUBMIT_SALE_REBATE - SUM(OCD.AVGCHANNELCUT)
					) 
				) / (AOM.FINANCIAL_SUBMIT_O_AMOUNT) )PROFIT_MARGIN,
				OM.ENTRY_BEGINTIME TICKET_BEGINTIME,
				OM.ENTRY_ENDTIME TICKET_ENDTIME,
				O.ADVANCE_PAY ADVANCE_PAY,
				AOM.FINANCIAL_SUBMIT_ORDER_DATE OPERATE_TIME
		FROM
			FOS_ORDER_MONTH OM
		LEFT JOIN FOS_AUDIT_ORDER_MONTH AOM ON OM.ID = AOM.FOS_ORDER_MONTH_ID
		LEFT OUTER JOIN (
			SELECT
				FOD.CHANNEL_ORDER_ID CHANNELORDERID,
				FOD.ORDER_ID ORDERID,
				FOD.ORDER_NAME ORDERNAME,
				FOD.PRODUCT_NAME PRODUCTNAME,
				FOD.ORDER_DIRECTOR_NAME ORDERDIRECTORNAME,
				FOD.COOPERATE_NAME COOPERATENAME,
				FOD.CP_MAIN CPMAIN,
				FOD.PAY_UNIT PAYUNIT,
				FOD.O_COUNT OCOUNT,
				FOD.O_AMOUNT OAMOUNT,
				FOD.CHANNEL_ID CHANNELID,
				FOD.CHANNEL_NAME CHANNELNAME,
				FOD.OUTER_UNIT OUTERUNIT,
				FOD.C_COUNT CCOUNT,
				FOD.C_AMOUNT CAMOUNT,
				FOD.CHANNEL_DIRECTOR_NAME CHANNELDIRECTORNAME,
				FOD.ENTRY_DAY_STATUS ENTRYDAYSTATUS,
				FOD.CREATE_TIME CREATETIME,
				FOD.MODIFY_TIME MODIFYTIME,
				FOD.OC_DAY_STATUS OCDAYSTATUS,
				FOD.ENTRY_TIME ENTRYTIME,
				FOD.CHANNEL_MONTH_STATUS CHANNELMONTHSTATUS,
				FOD.AVG_MEDIA_REBATE AVGMEDIAREBATE,
				FOD.AVG_OTHER_EXPENSE AVGOTHEREXPENSE,
				FOD.AVG_CHANNEL_CUT AVGCHANNELCUT,
				FOD.ORDER_MONTH_STATUS ORDERMONTHSTATUS,
				FACPD.ID AUDITCPID,
				FACPD.OC_DAY_ID AUDITCPOCDAYID,
				FACPD.ORDER_SUBMIT_CONFIRM ORDERSUBMITCONFIRM,
				FACPD.CP_SUBMIT_PAYUNIT CPSUBMITPAYUNIT,
				FACPD.CP_SUBMIT_OCOUNT CPSUBMITOCOUNT,
				FACPD.CP_SUBMIT_OAMOUNT CPSUBMITOAMOUNT,
				FACPD.FINANCIAL_SUBMIT_CP_STATUS FINANCIALSUBMITCPSTATUS,
				FACPD.FINANCIAL_SUBMIT_PAYUNIT FINANCIALSUBMITPAYUNIT,
				FACPD.FINANCIAL_SUBMIT_OCOUNT FINANCIALSUBMITOCOUNT,
				FACPD.FINANCIAL_SUBMIT_OAMOUNT FINANCIALSUBMITOAMOUNT,
				FACPD.FINANCIAL_SUBMIT_CP_DATE FINANCIALSUBMITCPDATE,
				FACPD.FINANCIAL_SUBMIT_CP_NOTTHROUGH_TIME FINANCIALSUBMITCPNOTTHROUGHTIME,
				FACPD.FINANCIAL_SUBMIT_CP_NOTTHROUGH_REASON FINANCIALSUBMITCPNOTTHROUGHREASON,
				FACPD.AVG_MONTH_OCOUNT AVGMONTHOCOUNT,
				FACPD.AVG_MONTH_OAMOUNT AVGMONTHOAMOUNT,
				FACPD.AVG_CUT AVGCUT,
				FACPD.AVG_SALE_REBATE AVGSALEREBATE,
				FACPD.AVG_MONEY AUDITCPAVGMONEY,
				FACPD.AVG_RETURN_MONEY AVGRETURNMONEY,
				FACPD.ORDER_MONTH_STATUS FOSAUDITCPDAYORDERMONTHSTATUS,
				FACPD.FINANCIAL_DRAWBILL_STATUS FINANCIALDRAWBILLSTATUS,
				FACPD.FINANCIAL_RECEIPT_STATUS FINANCIALRECEIPTSTATUS,
				FACHD.ID AUDITCHANNELID,
				FACHD.OC_DAY_ID OCDAYID,
				FACHD.CHANNEL_SUBMIT_CONFIRM CHANNELSUBMITCONFIRM,
				FACHD.CHANNEL_SUBMIT_OUTERUNIT CHANNELSUBMITOUTERUNIT,
				FACHD.CHANNEL_SUBMIT_CCOUNT CHANNELSUBMITCCOUNT,
				FACHD.CHANNEL_SUBMIT_CAMOUNT CHANNELSUBMITCAMOUNT,
				FACHD.FINANCIAL_SUBMIT_CHANNEL_STATUS FINANCIALSUBMITCHANNELSTATUS,
				FACHD.FINANCIAL_SUBMIT_OUTERUNIT FINANCIALSUBMITOUTERUNIT,
				FACHD.FINANCIAL_SUBMIT_CCOUNT FINANCIALSUBMITCCOUNT,
				FACHD.FINANCIAL_SUBMIT_CAMOUNT FINANCIALSUBMITCAMOUNT,
				FACHD.FINANCIAL_SUBMIT_CHANNEL_DATE FINANCIALSUBMITCHANNELDATE,
				FACHD.FINANCIAL_SUBMIT_CHANNEL_NOTTHROUGH_TIME FINANCIALSUBMITCHANNELNOTTHROUGHTIME,
				FACHD.FINANCIAL_SUBMIT_CHANNEL_NOTTHROUGH_REASON FINANCIALSUBMITCHANNELNOTTHROUGHREASON,
				FACHD.AVG_MONTH_CCOUNT AVGMONTHCCOUNT,
				FACHD.AVG_MONTH_CAMOUNT AVGMONTHCAMOUNT,
				FACHD.AVG_SUB_AMOUNT AVGSUBAMOUNT,
				FACHD.AVG_MEDIA_REBATE AUDITCHANNELAVGMEDIAREBATE,
				FACHD.AVG_OTHER_EXPENSE AUDITCHANNELAVGOTHEREXPENSE,
				FACHD.AVG_CHANNEL_CUT AUDITCHANNELAVGCHANNELCUT,
				FACHD.AVG_MONEY AVGMONEY,
				FACHD.AVG_PAY_MONEY AVGPAYMONEY,
				FACHD.CHANNEL_MONTH_STATUS FOSAUDITCHANNELDAYMONTHSTATUS,
				FACHD.FINANCIAL_RECEIVE_STATUS FINANCIALRECEIVESTATUS,
				FACHD.FINANCIAL_PAY_STATUS FINANCIALPAYSTATUS
			FROM
				FOS_OC_DAY FOD
			LEFT JOIN FOS_AUDIT_CP_DAY FACPD ON FOD.ID = FACPD.OC_DAY_ID
			LEFT JOIN FOS_AUDIT_CHANNEL_DAY FACHD ON FOD.ID = FACHD.OC_DAY_ID
			WHERE
				1 = 1
			AND FOD.OC_DAY_STATUS = 0
			AND FOD.ENTRY_DAY_STATUS = 1
			AND FACPD.FINANCIAL_SUBMIT_CP_STATUS = 3
		) OCD ON OM.ORDER_ID = OCD.ORDERID
		LEFT OUTER JOIN FOS_ORDER O ON OM.ORDER_ID = O.ORDER_ID
		WHERE
			1 = 1
		AND OM.`STATUS` = 0
		AND OM.ENTRY_TICKET = 1
		AND OM.ENTRY_MONEY = 1
		AND AOM.FINANCIAL_SUBMIT_ORDER_STATUS = 3
		AND AOM.DRAW_BILL_STATUS = 1
		AND OM.`ENTRY_BEGINTIME` &lt;= OCD.`ENTRYTIME`
		AND OM.`ENTRY_ENDTIME` &gt;= OCD.`ENTRYTIME`
		
		<!-- 数据级控制 -->
		<if test="businessNames != null">
			AND  o.DIRECTOR_NAME in  ${businessNames}
		</if>
		<if test="channelNames != null">
			AND  OCD.CHANNELDIRECTORNAME in  ${channelNames}
		</if>
		<if test="teamId != null">
			AND  o.ORDER_DEPARTMENT =  #{teamId}
		</if>
		
		<if test="orderName != null">
			AND OM.ORDER_NAME like #{orderName}
		</if>
		<if test="productName != null">
			AND OM.PRODUCT_NAME like #{productName}
		</if>
		<if test="orderId != null">
			AND OM.ORDER_ID like #{orderId}
		</if>
		<if test="entryBegintime != null and entryEndtime != null">
			AND OM.ENTRY_BEGINTIME=#{entryBegintime} AND
			OM.ENTRY_ENDTIME=#{entryEndtime}
		</if>
		GROUP BY
			OM.ORDER_ID,
			OM.ENTRY_BEGINTIME,
			OM.ENTRY_ENDTIME
		ORDER BY
			OM.CREATE_TIME DESC
		) w
	
	</select>
	
	<select id="getDrawHistoryList" parameterType="map" resultMap="BaseResultMap">
		select fto.* 
			from fos_ticket_order fto
			left join fos_order fo on fto.order_id=fo.order_id
		where 1=1
		
		<!-- 数据级控制 -->
		<if test="businessNames != null">
			AND  fo.DIRECTOR_NAME in  ${businessNames}
		</if>
	<!-- 	<if test="channelNames != null">
			AND  oc.CHANNEL_DIRECTOR_NAME in  ${channelNames}
		</if> -->
		<if test="teamId != null">
			AND  fo.ORDER_DEPARTMENT =  #{teamId}
		</if>
		
		<if test="orderName != null">
			AND fto.ORDER_NAME like #{orderName}
		</if>
		<if test="productName != null">
			AND fto.PRODUCT_NAME like #{productName}
		</if>
		<if test="status != null">
			AND fto.STATUS = #{orderId}
		</if>
		<if test="id != null">
			AND fto.ID = #{id}
		</if>
		<if test="orderByName != null">
			order by  fto.${orderByName}
		</if>

		<if test="LimitStart != null and LimitStart&gt;=0">
			LIMIT #{LimitStart} , #{LimitEnd}
		</if>
	
	</select>
	
	<select id="countGetDrawHistoryList" parameterType="map" resultType="java.lang.Integer">
		select count(*)
		from (
			select fto.* 
			from fos_ticket_order fto
			left join fos_order fo on fto.order_id=fo.order_id
		where 1=1
		
		<!-- 数据级控制 -->
		<if test="businessNames != null">
			AND  fo.DIRECTOR_NAME in  ${businessNames}
		</if>
	<!-- 	<if test="channelNames != null">
			AND  oc.CHANNEL_DIRECTOR_NAME in  ${channelNames}
		</if> -->
		<if test="teamId != null">
			AND  fo.ORDER_DEPARTMENT =  #{teamId}
		</if>
		
		<if test="orderName != null">
			AND fto.ORDER_NAME like #{orderName}
		</if>
		<if test="productName != null">
			AND fto.PRODUCT_NAME like #{productName}
		</if>
		<if test="status != null">
			AND fto.STATUS = #{orderId}
		</if>
		<if test="id != null">
			AND fto.ID = #{id}
		</if>
		<if test="orderByName != null">
			order by  fto.${orderByName}
		</if>
		) w
		
	</select>
	
</mapper>