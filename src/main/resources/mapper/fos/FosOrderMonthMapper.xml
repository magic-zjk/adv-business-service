<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imopan.adv.platform.mapper.fos.FosOrderMonthMapper">
	<resultMap id="BaseResultMap"
		type="com.imopan.adv.platform.entity.fos.FosOrderMonth">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="ORDER_ID" jdbcType="INTEGER" property="orderId" />
		<result column="ORDER_NAME" jdbcType="VARCHAR" property="orderName" />
		<result column="PRODUCT_NAME" jdbcType="VARCHAR" property="productName" />
		<result column="DIRECTOR_NAME" jdbcType="VARCHAR" property="directorName" />
		<result column="CP_MAIN" jdbcType="TINYINT" property="cpMain" />
		<result column="ORDER_TYPE" jdbcType="TINYINT" property="orderType" />
		<result column="COOPERATE_NAME" jdbcType="VARCHAR" property="cooperateName" />
		<result column="O_UNIT" jdbcType="DECIMAL" property="oUnit" />
		<result column="O_COUNT" jdbcType="INTEGER" property="oCount" />
		<result column="O_AMOUNT" jdbcType="DECIMAL" property="oAmount" />
		<result column="SUB_O_AMOUNT" jdbcType="DECIMAL" property="subOAmount" />
		<result column="C_COUNT" jdbcType="INTEGER" property="cCount" />
		<result column="C_AMOUNT" jdbcType="DECIMAL" property="cAmount" />
		<result column="SUB_C_AMOUNT" jdbcType="DECIMAL" property="subCAmount" />
		<result column="PROFIT" jdbcType="DECIMAL" property="profit" />
		<result column="PROFIT_MARGIN" jdbcType="DECIMAL" property="profitMargin" />
		<result column="CONVER_MARGIN" jdbcType="DECIMAL" property="converMargin" />
		<result column="O_COUNT_SUM" jdbcType="INTEGER" property="oCountSum" />
		<result column="O_AMOUNT_SUM" jdbcType="DECIMAL" property="oAmountSum" />
		<result column="CUT" jdbcType="DECIMAL" property="cut" />
		<result column="SALE_REBATE" jdbcType="DECIMAL" property="saleRebate" />
		<result column="ENTRY_MONTH_STATUS" jdbcType="TINYINT"
			property="entryMonthStatus" />
		<result column="ENTRY_MONEY" jdbcType="TINYINT" property="entryMoney" />
		<result column="ENTRY_TICKET" jdbcType="TINYINT" property="entryTicket" />
		<result column="ENTRY_BEGINTIME" jdbcType="DATE" property="entryBegintime" />
		<result column="ENTRY_ENDTIME" jdbcType="DATE" property="entryEndtime" />
		<result column="STATUS" jdbcType="TINYINT" property="status" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
		<result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		ID, ORDER_ID, ORDER_NAME, PRODUCT_NAME, DIRECTOR_NAME, CP_MAIN,
		ORDER_TYPE, COOPERATE_NAME,
		O_UNIT, O_COUNT, O_AMOUNT, SUB_O_AMOUNT, C_COUNT, C_AMOUNT, SUB_C_AMOUNT,
		PROFIT,
		PROFIT_MARGIN, CONVER_MARGIN, O_COUNT_SUM, O_AMOUNT_SUM, CUT, SALE_REBATE,
		ENTRY_MONTH_STATUS,
		ENTRY_MONEY, ENTRY_TICKET, ENTRY_BEGINTIME, ENTRY_ENDTIME, `STATUS`, CREATE_TIME,
		MODIFY_TIME
	</sql>
	<select id="selectByExample"
		parameterType="com.imopan.adv.platform.entity.fos.FosOrderMonthExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from fos_order_month
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limitStart != null and limitStart&gt;=0">
			limit #{limitStart} , #{limitEnd}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from fos_order_month
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from fos_order_month
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.imopan.adv.platform.entity.fos.FosOrderMonth">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into fos_order_month (ID, ORDER_ID, ORDER_NAME,
		PRODUCT_NAME, DIRECTOR_NAME, CP_MAIN,
		ORDER_TYPE, COOPERATE_NAME, O_UNIT,
		O_COUNT, O_AMOUNT, SUB_O_AMOUNT,
		C_COUNT, C_AMOUNT, SUB_C_AMOUNT,
		PROFIT, PROFIT_MARGIN, CONVER_MARGIN,
		O_COUNT_SUM, O_AMOUNT_SUM, CUT,
		SALE_REBATE, ENTRY_MONTH_STATUS, ENTRY_MONEY,
		ENTRY_TICKET, ENTRY_BEGINTIME, ENTRY_ENDTIME,
		`STATUS`, CREATE_TIME, MODIFY_TIME
		)
		values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER},
		#{orderName,jdbcType=VARCHAR},
		#{productName,jdbcType=VARCHAR}, #{directorName,jdbcType=VARCHAR}, #{cpMain,jdbcType=TINYINT},
		#{orderType,jdbcType=TINYINT}, #{cooperateName,jdbcType=VARCHAR},
		#{oUnit,jdbcType=DECIMAL},
		#{oCount,jdbcType=INTEGER}, #{oAmount,jdbcType=DECIMAL}, #{subOAmount,jdbcType=DECIMAL},
		#{cCount,jdbcType=INTEGER}, #{cAmount,jdbcType=DECIMAL},
		#{subCAmount,jdbcType=DECIMAL},
		#{profit,jdbcType=DECIMAL}, #{profitMargin,jdbcType=DECIMAL}, #{converMargin,jdbcType=DECIMAL},
		#{oCountSum,jdbcType=INTEGER}, #{oAmountSum,jdbcType=DECIMAL},
		#{cut,jdbcType=DECIMAL},
		#{saleRebate,jdbcType=DECIMAL}, #{entryMonthStatus,jdbcType=TINYINT}, #{entryMoney,jdbcType=TINYINT},
		#{entryTicket,jdbcType=TINYINT}, #{entryBegintime,jdbcType=DATE},
		#{entryEndtime,jdbcType=DATE},
		#{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.imopan.adv.platform.entity.fos.FosOrderMonth">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into fos_order_month
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="orderId != null">
				ORDER_ID,
			</if>
			<if test="orderName != null">
				ORDER_NAME,
			</if>
			<if test="productName != null">
				PRODUCT_NAME,
			</if>
			<if test="directorName != null">
				DIRECTOR_NAME,
			</if>
			<if test="cpMain != null">
				CP_MAIN,
			</if>
			<if test="orderType != null">
				ORDER_TYPE,
			</if>
			<if test="cooperateName != null">
				COOPERATE_NAME,
			</if>
			<if test="oUnit != null">
				O_UNIT,
			</if>
			<if test="oCount != null">
				O_COUNT,
			</if>
			<if test="oAmount != null">
				O_AMOUNT,
			</if>
			<if test="subOAmount != null">
				SUB_O_AMOUNT,
			</if>
			<if test="cCount != null">
				C_COUNT,
			</if>
			<if test="cAmount != null">
				C_AMOUNT,
			</if>
			<if test="subCAmount != null">
				SUB_C_AMOUNT,
			</if>
			<if test="profit != null">
				PROFIT,
			</if>
			<if test="profitMargin != null">
				PROFIT_MARGIN,
			</if>
			<if test="converMargin != null">
				CONVER_MARGIN,
			</if>
			<if test="oCountSum != null">
				O_COUNT_SUM,
			</if>
			<if test="oAmountSum != null">
				O_AMOUNT_SUM,
			</if>
			<if test="cut != null">
				CUT,
			</if>
			<if test="saleRebate != null">
				SALE_REBATE,
			</if>
			<if test="entryMonthStatus != null">
				ENTRY_MONTH_STATUS,
			</if>
			<if test="entryMoney != null">
				ENTRY_MONEY,
			</if>
			<if test="entryTicket != null">
				ENTRY_TICKET,
			</if>
			<if test="entryBegintime != null">
				ENTRY_BEGINTIME,
			</if>
			<if test="entryEndtime != null">
				ENTRY_ENDTIME,
			</if>
			<if test="status != null">
				`STATUS`,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="modifyTime != null">
				MODIFY_TIME,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=INTEGER},
			</if>
			<if test="orderName != null">
				#{orderName,jdbcType=VARCHAR},
			</if>
			<if test="productName != null">
				#{productName,jdbcType=VARCHAR},
			</if>
			<if test="directorName != null">
				#{directorName,jdbcType=VARCHAR},
			</if>
			<if test="cpMain != null">
				#{cpMain,jdbcType=TINYINT},
			</if>
			<if test="orderType != null">
				#{orderType,jdbcType=TINYINT},
			</if>
			<if test="cooperateName != null">
				#{cooperateName,jdbcType=VARCHAR},
			</if>
			<if test="oUnit != null">
				#{oUnit,jdbcType=DECIMAL},
			</if>
			<if test="oCount != null">
				#{oCount,jdbcType=INTEGER},
			</if>
			<if test="oAmount != null">
				#{oAmount,jdbcType=DECIMAL},
			</if>
			<if test="subOAmount != null">
				#{subOAmount,jdbcType=DECIMAL},
			</if>
			<if test="cCount != null">
				#{cCount,jdbcType=INTEGER},
			</if>
			<if test="cAmount != null">
				#{cAmount,jdbcType=DECIMAL},
			</if>
			<if test="subCAmount != null">
				#{subCAmount,jdbcType=DECIMAL},
			</if>
			<if test="profit != null">
				#{profit,jdbcType=DECIMAL},
			</if>
			<if test="profitMargin != null">
				#{profitMargin,jdbcType=DECIMAL},
			</if>
			<if test="converMargin != null">
				#{converMargin,jdbcType=DECIMAL},
			</if>
			<if test="oCountSum != null">
				#{oCountSum,jdbcType=INTEGER},
			</if>
			<if test="oAmountSum != null">
				#{oAmountSum,jdbcType=DECIMAL},
			</if>
			<if test="cut != null">
				#{cut,jdbcType=DECIMAL},
			</if>
			<if test="saleRebate != null">
				#{saleRebate,jdbcType=DECIMAL},
			</if>
			<if test="entryMonthStatus != null">
				#{entryMonthStatus,jdbcType=TINYINT},
			</if>
			<if test="entryMoney != null">
				#{entryMoney,jdbcType=TINYINT},
			</if>
			<if test="entryTicket != null">
				#{entryTicket,jdbcType=TINYINT},
			</if>
			<if test="entryBegintime != null">
				#{entryBegintime,jdbcType=DATE},
			</if>
			<if test="entryEndtime != null">
				#{entryEndtime,jdbcType=DATE},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.imopan.adv.platform.entity.fos.FosOrderMonthExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from fos_order_month
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update fos_order_month
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.orderId != null">
				ORDER_ID = #{record.orderId,jdbcType=INTEGER},
			</if>
			<if test="record.orderName != null">
				ORDER_NAME = #{record.orderName,jdbcType=VARCHAR},
			</if>
			<if test="record.productName != null">
				PRODUCT_NAME = #{record.productName,jdbcType=VARCHAR},
			</if>
			<if test="record.directorName != null">
				DIRECTOR_NAME = #{record.directorName,jdbcType=VARCHAR},
			</if>
			<if test="record.cpMain != null">
				CP_MAIN = #{record.cpMain,jdbcType=TINYINT},
			</if>
			<if test="record.orderType != null">
				ORDER_TYPE = #{record.orderType,jdbcType=TINYINT},
			</if>
			<if test="record.cooperateName != null">
				COOPERATE_NAME = #{record.cooperateName,jdbcType=VARCHAR},
			</if>
			<if test="record.oUnit != null">
				O_UNIT = #{record.oUnit,jdbcType=DECIMAL},
			</if>
			<if test="record.oCount != null">
				O_COUNT = #{record.oCount,jdbcType=INTEGER},
			</if>
			<if test="record.oAmount != null">
				O_AMOUNT = #{record.oAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.subOAmount != null">
				SUB_O_AMOUNT = #{record.subOAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.cCount != null">
				C_COUNT = #{record.cCount,jdbcType=INTEGER},
			</if>
			<if test="record.cAmount != null">
				C_AMOUNT = #{record.cAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.subCAmount != null">
				SUB_C_AMOUNT = #{record.subCAmount,jdbcType=DECIMAL},
			</if>
			<if test="record.profit != null">
				PROFIT = #{record.profit,jdbcType=DECIMAL},
			</if>
			<if test="record.profitMargin != null">
				PROFIT_MARGIN = #{record.profitMargin,jdbcType=DECIMAL},
			</if>
			<if test="record.converMargin != null">
				CONVER_MARGIN = #{record.converMargin,jdbcType=DECIMAL},
			</if>
			<if test="record.oCountSum != null">
				O_COUNT_SUM = #{record.oCountSum,jdbcType=INTEGER},
			</if>
			<if test="record.oAmountSum != null">
				O_AMOUNT_SUM = #{record.oAmountSum,jdbcType=DECIMAL},
			</if>
			<if test="record.cut != null">
				CUT = #{record.cut,jdbcType=DECIMAL},
			</if>
			<if test="record.saleRebate != null">
				SALE_REBATE = #{record.saleRebate,jdbcType=DECIMAL},
			</if>
			<if test="record.entryMonthStatus != null">
				ENTRY_MONTH_STATUS = #{record.entryMonthStatus,jdbcType=TINYINT},
			</if>
			<if test="record.entryMoney != null">
				ENTRY_MONEY = #{record.entryMoney,jdbcType=TINYINT},
			</if>
			<if test="record.entryTicket != null">
				ENTRY_TICKET = #{record.entryTicket,jdbcType=TINYINT},
			</if>
			<if test="record.entryBegintime != null">
				ENTRY_BEGINTIME = #{record.entryBegintime,jdbcType=DATE},
			</if>
			<if test="record.entryEndtime != null">
				ENTRY_ENDTIME = #{record.entryEndtime,jdbcType=DATE},
			</if>
			<if test="record.status != null">
				`STATUS` = #{record.status,jdbcType=TINYINT},
			</if>
			<if test="record.createTime != null">
				CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.modifyTime != null">
				MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update fos_order_month
		set ID = #{record.id,jdbcType=INTEGER},
		ORDER_ID = #{record.orderId,jdbcType=INTEGER},
		ORDER_NAME = #{record.orderName,jdbcType=VARCHAR},
		PRODUCT_NAME = #{record.productName,jdbcType=VARCHAR},
		DIRECTOR_NAME = #{record.directorName,jdbcType=VARCHAR},
		CP_MAIN = #{record.cpMain,jdbcType=TINYINT},
		ORDER_TYPE = #{record.orderType,jdbcType=TINYINT},
		COOPERATE_NAME = #{record.cooperateName,jdbcType=VARCHAR},
		O_UNIT = #{record.oUnit,jdbcType=DECIMAL},
		O_COUNT = #{record.oCount,jdbcType=INTEGER},
		O_AMOUNT = #{record.oAmount,jdbcType=DECIMAL},
		SUB_O_AMOUNT = #{record.subOAmount,jdbcType=DECIMAL},
		C_COUNT = #{record.cCount,jdbcType=INTEGER},
		C_AMOUNT = #{record.cAmount,jdbcType=DECIMAL},
		SUB_C_AMOUNT = #{record.subCAmount,jdbcType=DECIMAL},
		PROFIT = #{record.profit,jdbcType=DECIMAL},
		PROFIT_MARGIN = #{record.profitMargin,jdbcType=DECIMAL},
		CONVER_MARGIN = #{record.converMargin,jdbcType=DECIMAL},
		O_COUNT_SUM = #{record.oCountSum,jdbcType=INTEGER},
		O_AMOUNT_SUM = #{record.oAmountSum,jdbcType=DECIMAL},
		CUT = #{record.cut,jdbcType=DECIMAL},
		SALE_REBATE = #{record.saleRebate,jdbcType=DECIMAL},
		ENTRY_MONTH_STATUS = #{record.entryMonthStatus,jdbcType=TINYINT},
		ENTRY_MONEY = #{record.entryMoney,jdbcType=TINYINT},
		ENTRY_TICKET = #{record.entryTicket,jdbcType=TINYINT},
		ENTRY_BEGINTIME = #{record.entryBegintime,jdbcType=DATE},
		ENTRY_ENDTIME = #{record.entryEndtime,jdbcType=DATE},
		`STATUS` = #{record.status,jdbcType=TINYINT},
		CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
		MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.imopan.adv.platform.entity.fos.FosOrderMonth">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update fos_order_month
		<set>
			<if test="orderId != null">
				ORDER_ID = #{orderId,jdbcType=INTEGER},
			</if>
			<if test="orderName != null">
				ORDER_NAME = #{orderName,jdbcType=VARCHAR},
			</if>
			<if test="productName != null">
				PRODUCT_NAME = #{productName,jdbcType=VARCHAR},
			</if>
			<if test="directorName != null">
				DIRECTOR_NAME = #{directorName,jdbcType=VARCHAR},
			</if>
			<if test="cpMain != null">
				CP_MAIN = #{cpMain,jdbcType=TINYINT},
			</if>
			<if test="orderType != null">
				ORDER_TYPE = #{orderType,jdbcType=TINYINT},
			</if>
			<if test="cooperateName != null">
				COOPERATE_NAME = #{cooperateName,jdbcType=VARCHAR},
			</if>
			<if test="oUnit != null">
				O_UNIT = #{oUnit,jdbcType=DECIMAL},
			</if>
			<if test="oCount != null">
				O_COUNT = #{oCount,jdbcType=INTEGER},
			</if>
			<if test="oAmount != null">
				O_AMOUNT = #{oAmount,jdbcType=DECIMAL},
			</if>
			<if test="subOAmount != null">
				SUB_O_AMOUNT = #{subOAmount,jdbcType=DECIMAL},
			</if>
			<if test="cCount != null">
				C_COUNT = #{cCount,jdbcType=INTEGER},
			</if>
			<if test="cAmount != null">
				C_AMOUNT = #{cAmount,jdbcType=DECIMAL},
			</if>
			<if test="subCAmount != null">
				SUB_C_AMOUNT = #{subCAmount,jdbcType=DECIMAL},
			</if>
			<if test="profit != null">
				PROFIT = #{profit,jdbcType=DECIMAL},
			</if>
			<if test="profitMargin != null">
				PROFIT_MARGIN = #{profitMargin,jdbcType=DECIMAL},
			</if>
			<if test="converMargin != null">
				CONVER_MARGIN = #{converMargin,jdbcType=DECIMAL},
			</if>
			<if test="oCountSum != null">
				O_COUNT_SUM = #{oCountSum,jdbcType=INTEGER},
			</if>
			<if test="oAmountSum != null">
				O_AMOUNT_SUM = #{oAmountSum,jdbcType=DECIMAL},
			</if>
			<if test="cut != null">
				CUT = #{cut,jdbcType=DECIMAL},
			</if>
			<if test="saleRebate != null">
				SALE_REBATE = #{saleRebate,jdbcType=DECIMAL},
			</if>
			<if test="entryMonthStatus != null">
				ENTRY_MONTH_STATUS = #{entryMonthStatus,jdbcType=TINYINT},
			</if>
			<if test="entryMoney != null">
				ENTRY_MONEY = #{entryMoney,jdbcType=TINYINT},
			</if>
			<if test="entryTicket != null">
				ENTRY_TICKET = #{entryTicket,jdbcType=TINYINT},
			</if>
			<if test="entryBegintime != null">
				ENTRY_BEGINTIME = #{entryBegintime,jdbcType=DATE},
			</if>
			<if test="entryEndtime != null">
				ENTRY_ENDTIME = #{entryEndtime,jdbcType=DATE},
			</if>
			<if test="status != null">
				`STATUS` = #{status,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.imopan.adv.platform.entity.fos.FosOrderMonth">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update fos_order_month
		set ORDER_ID = #{orderId,jdbcType=INTEGER},
		ORDER_NAME = #{orderName,jdbcType=VARCHAR},
		PRODUCT_NAME = #{productName,jdbcType=VARCHAR},
		DIRECTOR_NAME = #{directorName,jdbcType=VARCHAR},
		CP_MAIN = #{cpMain,jdbcType=TINYINT},
		ORDER_TYPE = #{orderType,jdbcType=TINYINT},
		COOPERATE_NAME = #{cooperateName,jdbcType=VARCHAR},
		O_UNIT = #{oUnit,jdbcType=DECIMAL},
		O_COUNT = #{oCount,jdbcType=INTEGER},
		O_AMOUNT = #{oAmount,jdbcType=DECIMAL},
		SUB_O_AMOUNT = #{subOAmount,jdbcType=DECIMAL},
		C_COUNT = #{cCount,jdbcType=INTEGER},
		C_AMOUNT = #{cAmount,jdbcType=DECIMAL},
		SUB_C_AMOUNT = #{subCAmount,jdbcType=DECIMAL},
		PROFIT = #{profit,jdbcType=DECIMAL},
		PROFIT_MARGIN = #{profitMargin,jdbcType=DECIMAL},
		CONVER_MARGIN = #{converMargin,jdbcType=DECIMAL},
		O_COUNT_SUM = #{oCountSum,jdbcType=INTEGER},
		O_AMOUNT_SUM = #{oAmountSum,jdbcType=DECIMAL},
		CUT = #{cut,jdbcType=DECIMAL},
		SALE_REBATE = #{saleRebate,jdbcType=DECIMAL},
		ENTRY_MONTH_STATUS = #{entryMonthStatus,jdbcType=TINYINT},
		ENTRY_MONEY = #{entryMoney,jdbcType=TINYINT},
		ENTRY_TICKET = #{entryTicket,jdbcType=TINYINT},
		ENTRY_BEGINTIME = #{entryBegintime,jdbcType=DATE},
		ENTRY_ENDTIME = #{entryEndtime,jdbcType=DATE},
		`STATUS` = #{status,jdbcType=TINYINT},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP}
		where ID = #{id,jdbcType=INTEGER}
	</update>



	<select id="findOrderMonth" parameterType="map" resultMap="BaseResultMap">
		SELECT
		OC.ORDER_ID ORDER_ID,
		O.ORDER_NAME ORDER_NAME,
		O.PRODUCT_NAME PRODUCT_NAME,
		O.DIRECTOR_NAME DIRECTOR_NAME,
		O.COOPERATE_NAME COOPERATE_NAME,
		O.CP_MAIN CP_MAIN,
		
		<!-- SUM(OC.O_COUNT) O_COUNT_SUM,
		SUM(OC.O_AMOUNT) O_AMOUNT_SUM, -->
		
		SUM(facd.FINANCIAL_SUBMIT_OCOUNT) O_COUNT_SUM,
		SUM(facd.FINANCIAL_SUBMIT_OAMOUNT) O_AMOUNT_SUM,
		
		#{entryBegintime} ENTRY_BEGINTIME,
		#{entryEndtime} ENTRY_ENDTIME
		FROM
		FOS_OC_DAY OC
		LEFT JOIN FOS_ORDER O ON OC.ORDER_ID = O.ORDER_ID
		LEFT JOIN fos_audit_cp_day facd on oc.id=facd.OC_DAY_ID
		WHERE
		OC.ENTRY_DAY_STATUS = 1
		AND OC.OC_DAY_STATUS = 0
		AND facd.FINANCIAL_SUBMIT_CP_STATUS = 3
		AND OC.ENTRY_TIME >= #{entryBegintime}
		AND OC.ENTRY_TIME &lt;= #{entryEndtime}
		AND OC.ORDER_ID NOT IN (
		SELECT
		ORDER_ID
		FROM
		FOS_ORDER_MONTH
		WHERE
		ENTRY_BEGINTIME = #{entryBegintime}
		AND ENTRY_ENDTIME = #{entryEndtime}
		AND ENTRY_MONTH_STATUS = 1
		)
		
		<!-- 数据级控制 -->
		<if test="businessNames != null">
			AND  oc.ORDER_DIRECTOR_NAME in  ${businessNames}
		</if>
		<if test="channelNames != null">
			AND  oc.CHANNEL_DIRECTOR_NAME in  ${channelNames}
		</if>
		<if test="teamId != null">
			AND  o.ORDER_DEPARTMENT =  #{teamId}
		</if>
		
		<if test="orderName != null">
			and O.ORDER_NAME like #{orderName}
		</if>
		<if test="productName != null">
			and O.PRODUCT_NAME like #{productName}
		</if>
		GROUP BY
		OC.ORDER_ID
		order by OC.ORDER_ID desc
		LIMIT #{LimitStart} , #{LimitEnd}
	</select>

	<select id="countFindOrderMonth" parameterType="map"
		resultType="java.lang.Integer">
		select count(w.ORDER_ID)
		from(
		SELECT
		OC.ORDER_ID ORDER_ID,
		O.ORDER_NAME ORDER_NAME,
		O.PRODUCT_NAME PRODUCT_NAME,
		O.DIRECTOR_NAME DIRECTOR_NAME,
		O.COOPERATE_NAME COOPERATE_NAME,
		O.CP_MAIN CP_MAIN,
		
		<!-- SUM(OC.O_COUNT) O_COUNT_SUM,
		SUM(OC.O_AMOUNT) O_AMOUNT_SUM, -->
		
		SUM(facd.FINANCIAL_SUBMIT_OCOUNT) O_COUNT_SUM,
		SUM(facd.FINANCIAL_SUBMIT_OAMOUNT) O_AMOUNT_SUM,
		
		#{entryBegintime} ENTRY_BEGINTIME,
		#{entryEndtime} ENTRY_ENDTIME
		FROM
		FOS_OC_DAY OC
		LEFT JOIN FOS_ORDER O ON OC.ORDER_ID = O.ORDER_ID
		LEFT JOIN fos_audit_cp_day facd on oc.id=facd.OC_DAY_ID
		WHERE
		OC.ENTRY_DAY_STATUS = 1
		AND OC.OC_DAY_STATUS = 0
		AND facd.FINANCIAL_SUBMIT_CP_STATUS = 3
		AND OC.ENTRY_TIME >= #{entryBegintime}
		AND OC.ENTRY_TIME &lt;= #{entryEndtime}
		AND OC.ORDER_ID NOT IN (
		SELECT
		ORDER_ID
		FROM
		FOS_ORDER_MONTH
		WHERE
		ENTRY_BEGINTIME = #{entryBegintime}
		AND ENTRY_ENDTIME = #{entryEndtime}
		AND ENTRY_MONTH_STATUS = 1
		)
		
		<!-- 数据级控制 -->
		<if test="businessNames != null">
			AND  oc.ORDER_DIRECTOR_NAME in  ${businessNames}
		</if>
		<if test="channelNames != null">
			AND  oc.CHANNEL_DIRECTOR_NAME in  ${channelNames}
		</if>
		<if test="teamId != null">
			AND  o.ORDER_DEPARTMENT =  #{teamId}
		</if>
		
		<if test="orderName != null">
			and O.ORDER_NAME like #{orderName}
		</if>
		<if test="productName != null">
			and O.PRODUCT_NAME like #{productName}
		</if>
		GROUP BY
		OC.ORDER_ID
		order by OC.ORDER_ID desc
		) w
	</select>

	<resultMap id="CycleBillResultMap"
		type="com.imopan.adv.platform.entity.fos.FosCycleBill">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="ORDER_ID" jdbcType="INTEGER" property="orderId" />
		<result column="ORDER_NAME" jdbcType="VARCHAR" property="orderName" />
		<result column="PRODUCT_NAME" jdbcType="VARCHAR" property="productName" />
		<result column="DIRECTOR_NAME" jdbcType="VARCHAR" property="directorName" />
		<result column="CP_MAIN" jdbcType="TINYINT" property="cpMain" />
		<result column="ORDER_TYPE" jdbcType="TINYINT" property="orderType" />
		<result column="COOPERATE_NAME" jdbcType="VARCHAR" property="cooperateName" />
		<result column="O_UNIT" jdbcType="DECIMAL" property="oUnit" />
		<result column="O_COUNT" jdbcType="INTEGER" property="oCount" />
		<result column="O_AMOUNT" jdbcType="DECIMAL" property="oAmount" />
		<result column="SUB_O_AMOUNT" jdbcType="DECIMAL" property="subOAmount" />
		<result column="C_COUNT" jdbcType="INTEGER" property="cCount" />
		<result column="C_AMOUNT" jdbcType="DECIMAL" property="cAmount" />
		<result column="SUB_C_AMOUNT" jdbcType="DECIMAL" property="subCAmount" />
		<result column="PROFIT" jdbcType="DECIMAL" property="profit" />
		<result column="PROFIT_MARGIN" jdbcType="DECIMAL" property="profitMargin" />
		<result column="CONVER_MARGIN" jdbcType="DECIMAL" property="converMargin" />
		<result column="O_COUNT_SUM" jdbcType="INTEGER" property="oCountSum" />
		<result column="O_AMOUNT_SUM" jdbcType="DECIMAL" property="oAmountSum" />
		<result column="CUT" jdbcType="DECIMAL" property="cut" />
		<result column="SALE_REBATE" jdbcType="DECIMAL" property="saleRebate" />
		<result column="ENTRY_MONTH_STATUS" jdbcType="TINYINT"
			property="entryMonthStatus" />
		<result column="ENTRY_MONEY" jdbcType="TINYINT" property="entryMoney" />
		<result column="ENTRY_TICKET" jdbcType="TINYINT" property="entryTicket" />
		<result column="ENTRY_BEGINTIME" jdbcType="DATE" property="entryBegintime" />
		<result column="ENTRY_ENDTIME" jdbcType="DATE" property="entryEndtime" />
		<result column="STATUS" jdbcType="TINYINT" property="status" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
		<result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="MEDIA_REBATE" jdbcType="DECIMAL" property="mediaRebate" />
		<result column="OTHER_EXPENSE" jdbcType="DECIMAL" property="otherExpense" />
		<result column="CHANNEL_CUT" jdbcType="DECIMAL" property="channelCut" />
		<result column="CHANNEL_ID" jdbcType="INTEGER" property="channelId" />
		<result column="CHANNEL_NAME" jdbcType="VARCHAR" property="channelName" />
		<result column="CHANNEL_DIRECTOR_NAME" jdbcType="VARCHAR"
			property="channelDirectorName" />
	</resultMap>

	<select id="findCycleBillList" parameterType="map"
		resultMap="CycleBillResultMap">
		SELECT
		OM.ORDER_ID ORDER_ID,
		OM.ORDER_NAME ORDER_NAME,
		OM.PRODUCT_NAME
		PRODUCT_NAME,
		OM.DIRECTOR_NAME DIRECTOR_NAME,
		OM.COOPERATE_NAME
		COOPERATE_NAME,
		OM.CP_MAIN CP_MAIN,
		OM.O_COUNT O_COUNT,
		OM.O_AMOUNT
		O_AMOUNT,
		OM.O_COUNT_SUM O_COUNT_SUM,
		OM.O_AMOUNT_SUM O_AMOUNT_SUM,
		OM.CUT CUT,
		OM.SALE_REBATE SALE_REBATE,
		OM.SUB_O_AMOUNT SUB_O_AMOUNT,

		SUM(OCD.C_COUNT) C_COUNT,
		SUM(OCD.C_AMOUNT) C_AMOUNT,
		SUM(OCD.AVG_MEDIA_REBATE) MEDIA_REBATE,
		SUM(OCD.AVG_OTHER_EXPENSE)
		OTHER_EXPENSE,
		SUM(OCD.AVG_CHANNEL_CUT) CHANNEL_CUT,
		SUM(OCD.C_AMOUNT) +
		SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT) SUB_C_AMOUNT,

		OM.SUB_O_AMOUNT - (
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT)
		) PROFIT,
		(
		OM.SUB_O_AMOUNT - (
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT)
		)
		) / OM.SUB_O_AMOUNT PROFIT_MARGIN,
		OM.ENTRY_BEGINTIME ENTRY_BEGINTIME,
		OM.ENTRY_ENDTIME ENTRY_ENDTIME

		FROM
		FOS_ORDER_MONTH OM
		LEFT OUTER JOIN (
		SELECT
		*
		FROM
		FOS_OC_DAY
		WHERE 1=1
		AND CHANNEL_MONTH_STATUS = 1
		AND OC_DAY_STATUS = 0
		AND
		ENTRY_DAY_STATUS = 1
		) OCD ON OM.ORDER_ID = OCD.ORDER_ID

		WHERE
		1 = 1
		AND OM.`STATUS` = 0
		AND OM.`ENTRY_BEGINTIME` &lt;=
		OCD.`ENTRY_TIME` AND OM.`ENTRY_ENDTIME` >= OCD.`ENTRY_TIME`
		<if test="orderName != null">
			AND OM.ORDER_NAME LIKE #{orderName}
		</if>
		GROUP BY
		OM.ORDER_ID,
		OM.ENTRY_BEGINTIME,
		OM.ENTRY_ENDTIME
		ORDER BY
		OM.CREATE_TIME DESC
		<if test="LimitStart != null and LimitStart&gt;=0">
			LIMIT #{LimitStart} , #{LimitEnd}
		</if>
	</select>

	<select id="countFindCycleBillList" resultType="java.lang.Integer"
		parameterType="map">
		select count(*)
		from
		(
		SELECT
		OM.ORDER_ID ORDER_ID,
		OM.ORDER_NAME ORDER_NAME,
		OM.PRODUCT_NAME
		PRODUCT_NAME,
		OM.DIRECTOR_NAME DIRECTOR_NAME,
		OM.COOPERATE_NAME
		COOPERATE_NAME,
		OM.CP_MAIN CP_MAIN,
		OM.O_COUNT O_COUNT,
		OM.O_AMOUNT
		O_AMOUNT,
		OM.O_COUNT_SUM O_COUNT_SUM,
		OM.O_AMOUNT_SUM O_AMOUNT_SUM,
		OM.CUT CUT,
		OM.SALE_REBATE SALE_REBATE,
		OM.SUB_O_AMOUNT SUB_O_AMOUNT,

		SUM(OCD.C_COUNT) C_COUNT,
		SUM(OCD.C_AMOUNT) C_AMOUNT,
		SUM(OCD.AVG_MEDIA_REBATE) MEDIA_REBATE,
		SUM(OCD.AVG_OTHER_EXPENSE)
		OTHER_EXPENSE,
		SUM(OCD.AVG_CHANNEL_CUT) CHANNEL_CUT,
		SUM(OCD.C_AMOUNT) +
		SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT) SUB_C_AMOUNT,

		OM.SUB_O_AMOUNT - (
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT)
		) PROFIT,
		(
		OM.SUB_O_AMOUNT - (
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT)
		)
		) / OM.SUB_O_AMOUNT PROFIT_MARGIN,
		OM.ENTRY_BEGINTIME ENTRY_BEGINTIME,
		OM.ENTRY_ENDTIME ENTRY_ENDTIME

		FROM
		FOS_ORDER_MONTH OM
		LEFT OUTER JOIN (
		SELECT
		*
		FROM
		FOS_OC_DAY
		WHERE 1=1
		AND CHANNEL_MONTH_STATUS = 1
		AND OC_DAY_STATUS = 0
		AND
		ENTRY_DAY_STATUS = 1
		) OCD ON OM.ORDER_ID = OCD.ORDER_ID

		WHERE
		1 = 1
		AND OM.`STATUS` = 0
		AND OM.`ENTRY_BEGINTIME` &lt;=
		OCD.`ENTRY_TIME` AND OM.`ENTRY_ENDTIME` >= OCD.`ENTRY_TIME`
		<if test="orderName != null">
			AND OM.ORDER_NAME LIKE #{orderName}
		</if>

		GROUP BY
		OM.ORDER_ID,
		OM.ENTRY_BEGINTIME,
		OM.ENTRY_ENDTIME
		ORDER BY
		OM.CREATE_TIME DESC
		) w
	</select>


	<select id="findCycleBillListSum" parameterType="map"
		resultMap="CycleBillResultMap">
		SELECT
		SUM(W.O_COUNT) O_COUNT,
		SUM(W.O_AMOUNT) O_AMOUNT,
		SUM(W.O_COUNT_SUM) O_COUNT_SUM,
		SUM(W.O_AMOUNT_SUM) O_AMOUNT_SUM,
		SUM(
		W.CUT) CUT,
		SUM(W.SALE_REBATE) SALE_REBATE,
		SUM(W.SUB_O_AMOUNT)
		SUB_O_AMOUNT,
		SUM(W.C_COUNT) C_COUNT,
		SUM(W.C_AMOUNT) C_AMOUNT,
		SUM(W.MEDIA_REBATE) MEDIA_REBATE,
		SUM(W.OTHER_EXPENSE) OTHER_EXPENSE,
		SUM(W.CHANNEL_CUT) CHANNEL_CUT,
		SUM(W.SUB_C_AMOUNT) SUB_C_AMOUNT,
		SUM(W.SUB_O_AMOUNT)-SUM(W.SUB_C_AMOUNT) PROFIT,
		(SUM(W.SUB_O_AMOUNT)-SUM(W.SUB_C_AMOUNT))/SUM(W.SUB_O_AMOUNT)
		PROFIT_MARGIN,
		W.ENTRY_BEGINTIME ENTRY_BEGINTIME,
		W.ENTRY_ENDTIME
		ENTRY_ENDTIME
		FROM
		(
		SELECT
		OM.ORDER_ID ORDER_ID,
		OM.ORDER_NAME ORDER_NAME,
		OM.PRODUCT_NAME PRODUCT_NAME,
		OM.DIRECTOR_NAME DIRECTOR_NAME,
		OM.COOPERATE_NAME COOPERATE_NAME,
		OM.CP_MAIN CP_MAIN,
		OM.O_COUNT O_COUNT,
		OM.O_AMOUNT O_AMOUNT,
		OM.O_COUNT_SUM O_COUNT_SUM,
		OM.O_AMOUNT_SUM O_AMOUNT_SUM,
		OM.CUT CUT,
		OM.SALE_REBATE SALE_REBATE,
		OM.SUB_O_AMOUNT SUB_O_AMOUNT,
		SUM(OCD.C_COUNT) C_COUNT,
		SUM(OCD.C_AMOUNT) C_AMOUNT,
		SUM(OCD.AVG_MEDIA_REBATE) MEDIA_REBATE,
		SUM(OCD.AVG_OTHER_EXPENSE) OTHER_EXPENSE,
		SUM(OCD.AVG_CHANNEL_CUT) CHANNEL_CUT,
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT) SUB_C_AMOUNT,
		OM.SUB_O_AMOUNT - (
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT)
		) PROFIT,
		(
		OM.SUB_O_AMOUNT - (
		SUM(OCD.C_AMOUNT) + SUM(OCD.AVG_MEDIA_REBATE) + SUM(OCD.AVG_OTHER_EXPENSE) +
		OM.SALE_REBATE - SUM(OCD.AVG_CHANNEL_CUT)
		)
		) / OM.SUB_O_AMOUNT PROFIT_MARGIN,
		OM.ENTRY_BEGINTIME ENTRY_BEGINTIME,
		OM.ENTRY_ENDTIME ENTRY_ENDTIME
		FROM
		FOS_ORDER_MONTH OM
		LEFT OUTER JOIN (
		SELECT
		*
		FROM
		FOS_OC_DAY
		WHERE
		1 = 1
		AND CHANNEL_MONTH_STATUS = 1
		AND OC_DAY_STATUS = 0
		AND ENTRY_DAY_STATUS = 1
		) OCD ON OM.ORDER_ID = OCD.ORDER_ID
		WHERE
		1 = 1
		AND OM.`STATUS` = 0
		AND OM.`ENTRY_BEGINTIME` &lt;= OCD.`ENTRY_TIME`
		AND OM.`ENTRY_ENDTIME` >= OCD.`ENTRY_TIME`
		<if test="orderName != null">
			AND OM.ORDER_NAME LIKE #{orderName}
		</if>
		GROUP BY
		OM.ORDER_ID,
		OM.ENTRY_BEGINTIME,
		OM.ENTRY_ENDTIME
		ORDER BY
		OM.CREATE_TIME DESC
		) W
	</select>


	<select id="findCycleBillDetail" parameterType="map"
		resultMap="CycleBillResultMap">
		SELECT
		ORDER_ID ORDER_ID,
		ORDER_NAME ORDER_NAME,
		ORDER_DIRECTOR_NAME
		DIRECTOR_NAME,
		CHANNEL_ID CHANNEL_ID,
		CHANNEL_NAME CHANNEL_NAME,
		CHANNEL_DIRECTOR_NAME CHANNEL_DIRECTOR_NAME,
		SUM(C_COUNT) C_COUNT,
		SUM(C_AMOUNT) C_AMOUNT,
		SUM(AVG_MEDIA_REBATE) MEDIA_REBATE,
		SUM(AVG_OTHER_EXPENSE) OTHER_EXPENSE,
		SUM(AVG_CHANNEL_CUT) CHANNEL_CUT,
		SUM(C_AMOUNT)+SUM(AVG_MEDIA_REBATE)+SUM(AVG_OTHER_EXPENSE)-SUM(AVG_CHANNEL_CUT)
		SUB_C_AMOUNT,
		#{entryBegintime} ENTRY_BEGINTIME,
		#{entryEndtime}
		ENTRY_ENDTIME
		FROM
		fos_oc_day
		WHERE
		ORDER_ID = #{orderId}
		AND CHANNEL_MONTH_STATUS = 1
		AND OC_DAY_STATUS = 0
		AND ENTRY_DAY_STATUS = 1
		AND ENTRY_TIME >= #{entryBegintime}
		AND
		ENTRY_TIME &lt;= #{entryEndtime}
		<if test="channelName != null">
			AND CHANNEL_NAME LIKE #{channelName}
		</if>
		<if test="groupByName != null">
			GROUP BY
			${groupByName}
		</if>
		<if test="LimitStart != null and LimitStart&gt;=0">
			LIMIT #{LimitStart} , #{LimitEnd}
		</if>
	</select>


	<select id="countFindCycleBillDetail" resultType="java.lang.Integer"
		parameterType="map">
		select count(*)
		from
		(
		SELECT
		ORDER_ID ORDER_ID,
		ORDER_NAME ORDER_NAME,
		ORDER_DIRECTOR_NAME
		DIRECTOR_NAME,
		CHANNEL_ID CHANNEL_ID,
		CHANNEL_NAME CHANNEL_NAME,
		CHANNEL_DIRECTOR_NAME CHANNEL_DIRECTOR_NAME,
		SUM(C_COUNT) C_COUNT,
		SUM(C_AMOUNT) C_AMOUNT,
		SUM(AVG_MEDIA_REBATE) MEDIA_REBATE,
		SUM(AVG_OTHER_EXPENSE) OTHER_EXPENSE,
		SUM(AVG_CHANNEL_CUT) CHANNEL_CUT,
		SUM(C_AMOUNT)+SUM(AVG_MEDIA_REBATE)+SUM(AVG_OTHER_EXPENSE)-SUM(AVG_CHANNEL_CUT)
		SUB_C_AMOUNT,
		#{entryBegintime} ENTRY_BEGINTIME,
		#{entryEndtime} ENTRY_ENDTIME
		FROM
		fos_oc_day
		WHERE
		ORDER_ID = #{orderId}
		AND CHANNEL_MONTH_STATUS = 1
		AND OC_DAY_STATUS = 0
		AND ENTRY_DAY_STATUS = 1
		AND ENTRY_TIME >= #{entryBegintime}
		AND
		ENTRY_TIME &lt;= #{entryEndtime}
		<if test="channelName != null">
			AND CHANNEL_NAME LIKE #{channelName}
		</if>
		<if test="groupByName != null">
			GROUP BY
			${groupByName}
		</if>
		) w
	</select>
	
	
	<insert id="insertSelectiveGetId" useGeneratedKeys="true" keyProperty="id" parameterType="com.imopan.adv.platform.entity.fos.FosOrderMonth">
		insert into fos_order_month
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="orderId != null">
				ORDER_ID,
			</if>
			<if test="orderName != null">
				ORDER_NAME,
			</if>
			<if test="productName != null">
				PRODUCT_NAME,
			</if>
			<if test="directorName != null">
				DIRECTOR_NAME,
			</if>
			<if test="cpMain != null">
				CP_MAIN,
			</if>
			<if test="orderType != null">
				ORDER_TYPE,
			</if>
			<if test="cooperateName != null">
				COOPERATE_NAME,
			</if>
			<if test="oUnit != null">
				O_UNIT,
			</if>
			<if test="oCount != null">
				O_COUNT,
			</if>
			<if test="oAmount != null">
				O_AMOUNT,
			</if>
			<if test="subOAmount != null">
				SUB_O_AMOUNT,
			</if>
			<if test="cCount != null">
				C_COUNT,
			</if>
			<if test="cAmount != null">
				C_AMOUNT,
			</if>
			<if test="subCAmount != null">
				SUB_C_AMOUNT,
			</if>
			<if test="profit != null">
				PROFIT,
			</if>
			<if test="profitMargin != null">
				PROFIT_MARGIN,
			</if>
			<if test="converMargin != null">
				CONVER_MARGIN,
			</if>
			<if test="oCountSum != null">
				O_COUNT_SUM,
			</if>
			<if test="oAmountSum != null">
				O_AMOUNT_SUM,
			</if>
			<if test="cut != null">
				CUT,
			</if>
			<if test="saleRebate != null">
				SALE_REBATE,
			</if>
			<if test="entryMonthStatus != null">
				ENTRY_MONTH_STATUS,
			</if>
			<if test="entryMoney != null">
				ENTRY_MONEY,
			</if>
			<if test="entryTicket != null">
				ENTRY_TICKET,
			</if>
			<if test="entryBegintime != null">
				ENTRY_BEGINTIME,
			</if>
			<if test="entryEndtime != null">
				ENTRY_ENDTIME,
			</if>
			<if test="status != null">
				`STATUS`,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="modifyTime != null">
				MODIFY_TIME,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=INTEGER},
			</if>
			<if test="orderName != null">
				#{orderName,jdbcType=VARCHAR},
			</if>
			<if test="productName != null">
				#{productName,jdbcType=VARCHAR},
			</if>
			<if test="directorName != null">
				#{directorName,jdbcType=VARCHAR},
			</if>
			<if test="cpMain != null">
				#{cpMain,jdbcType=TINYINT},
			</if>
			<if test="orderType != null">
				#{orderType,jdbcType=TINYINT},
			</if>
			<if test="cooperateName != null">
				#{cooperateName,jdbcType=VARCHAR},
			</if>
			<if test="oUnit != null">
				#{oUnit,jdbcType=DECIMAL},
			</if>
			<if test="oCount != null">
				#{oCount,jdbcType=INTEGER},
			</if>
			<if test="oAmount != null">
				#{oAmount,jdbcType=DECIMAL},
			</if>
			<if test="subOAmount != null">
				#{subOAmount,jdbcType=DECIMAL},
			</if>
			<if test="cCount != null">
				#{cCount,jdbcType=INTEGER},
			</if>
			<if test="cAmount != null">
				#{cAmount,jdbcType=DECIMAL},
			</if>
			<if test="subCAmount != null">
				#{subCAmount,jdbcType=DECIMAL},
			</if>
			<if test="profit != null">
				#{profit,jdbcType=DECIMAL},
			</if>
			<if test="profitMargin != null">
				#{profitMargin,jdbcType=DECIMAL},
			</if>
			<if test="converMargin != null">
				#{converMargin,jdbcType=DECIMAL},
			</if>
			<if test="oCountSum != null">
				#{oCountSum,jdbcType=INTEGER},
			</if>
			<if test="oAmountSum != null">
				#{oAmountSum,jdbcType=DECIMAL},
			</if>
			<if test="cut != null">
				#{cut,jdbcType=DECIMAL},
			</if>
			<if test="saleRebate != null">
				#{saleRebate,jdbcType=DECIMAL},
			</if>
			<if test="entryMonthStatus != null">
				#{entryMonthStatus,jdbcType=TINYINT},
			</if>
			<if test="entryMoney != null">
				#{entryMoney,jdbcType=TINYINT},
			</if>
			<if test="entryTicket != null">
				#{entryTicket,jdbcType=TINYINT},
			</if>
			<if test="entryBegintime != null">
				#{entryBegintime,jdbcType=DATE},
			</if>
			<if test="entryEndtime != null">
				#{entryEndtime,jdbcType=DATE},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	
	
	<select id="getAuditOrderMonthList" parameterType="map" resultType="com.imopan.adv.platform.vo.fos.FosAuditOrderMonthVo">
		SELECT
			FOM.ID id,
			FOM.ORDER_ID orderId,
			FOM.ORDER_NAME orderName,
			FOM.PRODUCT_NAME productName,
			FOM.DIRECTOR_NAME directorName,
			FOM.CP_MAIN cpMain,
			FOM.ORDER_TYPE orderType,
			FOM.COOPERATE_NAME cooperateName,
			FOM.O_UNIT oUnit,
			FOM.O_COUNT oCount,
			FOM.O_AMOUNT oAmount,
			FOM.SUB_O_AMOUNT subOAmount,
			FOM.C_COUNT cCount,
			FOM.C_AMOUNT cAmount,
			FOM.SUB_C_AMOUNT subCAmount,
			FOM.PROFIT profit,
			FOM.PROFIT_MARGIN profitMargin,
			FOM.CONVER_MARGIN converMargin,
			FOM.O_COUNT_SUM oCountSum,
			FOM.O_AMOUNT_SUM oAmountSum,
			FOM.CUT cut,
			FOM.SALE_REBATE saleRebate,
			FOM.ENTRY_MONTH_STATUS entryMonthStatus,
			FOM.ENTRY_MONEY entryMoney,
			FOM.ENTRY_TICKET entryTicket,
			FOM.ENTRY_BEGINTIME entryBegintime,
			FOM.ENTRY_ENDTIME entryEndtime,
			FOM.`STATUS` STATUS,
			FOM.CREATE_TIME createTime,
			FOM.MODIFY_TIME modifyTime,
			FAOM.ID auditOrderMonthId,
			FAOM.FOS_ORDER_MONTH_ID fosOrderMonthId,
			FAOM.ORDER_SUBMIT_CONFIRM orderSubmitConfirm,
			FAOM.ORDER_UPDATE_O_COUNT orderUpdateOCount,
			FAOM.ORDER_UPDATE_O_AMOUNT orderUpdateOAmount,
			FAOM.ORDER_UPDATE_CUT orderUpdateCut,
			FAOM.ORDER_UPDATE_SALE_REBATE orderUpdateSaleRebate,
			FAOM.FINANCIAL_SUBMIT_ORDER_STATUS financialSubmitOrderStatus,
			FAOM.FINANCIAL_SUBMIT_O_COUNT financialSubmitOCount,
			FAOM.FINANCIAL_SUBMIT_O_AMOUNT financialSubmitOAmount,
			FAOM.FINANCIAL_SUBMIT_CUT financialSubmitCut,
			FAOM.FINANCIAL_SUBMIT_SALE_REBATE financialSubmitSaleRebate,
			FAOM.FINANCIAL_SUBMIT_ORDER_DATE financialSubmitOrderDate,
			FAOM.FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME financialSubmitOrderNotthroughTime,
			FAOM.FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_REASON financialSubmitOrderNotthroughReason,
			FAOM.DRAW_BILL_STATUS drawBillStatus,
			fo.ORDER_DEPARTMENT orderDepartment
			FROM
			FOS_ORDER_MONTH FOM
			LEFT JOIN FOS_AUDIT_ORDER_MONTH FAOM ON FOM.ID = FAOM.FOS_ORDER_MONTH_ID
			LEFT JOIN FOS_ORDER FO ON FOM.ORDER_ID=FO.ORDER_ID
		WHERE
			1 = 1
			
			<!-- 数据级控制 -->
			<if test="businessNames != null">
				AND  fom.DIRECTOR_NAME in  ${businessNames}
			</if>
			<if test="teamId != null">
				AND  fo.ORDER_DEPARTMENT =  #{teamId}
			</if>
			
			<if test="orderDepartment != null">
				AND  fo.ORDER_DEPARTMENT =  #{orderDepartment}
			</if>
			
			<if test="orderName != null">
				AND FOM.ORDER_NAME LIKE #{orderName}
			</if>
			<if test="productName != null">
				AND FOM.PRODUCT_NAME LIKE #{productName}
			</if>
			<if test="id != null">
				AND FOM.ID = #{id}
			</if>
			<if test="status != null">
				AND FOM.`STATUS` = #{status}
			</if>
			<if test="entryMoney != null">
				AND FOM.ENTRY_MONEY = #{entryMoney}
			</if>
			<if test="entryTicket != null">
				AND FOM.ENTRY_TICKET = #{entryTicket}
			</if>
			<if test="financialSubmitOrderStatus != null">
				AND FAOM.FINANCIAL_SUBMIT_ORDER_STATUS = #{financialSubmitOrderStatus}
			</if>
			<if test="financialSubmitOrderNotthroughTime != null">
				AND FAOM.FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME = #{financialSubmitOrderNotthroughTime}
			</if>
			<if test="drawBillStatus != null">
				AND FAOM.DRAW_BILL_STATUS = #{drawBillStatus}
			</if>
			
			ORDER BY FOM.ID desc
			<if test="LimitStart != null and LimitStart&gt;=0">
				LIMIT #{LimitStart} , #{LimitEnd}
			</if>
	</select>
	
	<select id="countGetAuditOrderMonthList" resultType="java.lang.Integer" parameterType="map">
		select count(w.id)
		from (
			SELECT
			FOM.ID id
			FROM
			FOS_ORDER_MONTH FOM
			LEFT JOIN FOS_AUDIT_ORDER_MONTH FAOM ON FOM.ID = FAOM.FOS_ORDER_MONTH_ID
			LEFT JOIN FOS_ORDER FO ON FOM.ORDER_ID=FO.ORDER_ID
		WHERE
			1 = 1
			
			<!-- 数据级控制 -->
			<if test="businessNames != null">
				AND  fom.DIRECTOR_NAME in  ${businessNames}
			</if>
			<if test="teamId != null">
				AND  fo.ORDER_DEPARTMENT =  #{teamId}
			</if>
			
			<if test="orderDepartment != null">
				AND  fo.ORDER_DEPARTMENT =  #{orderDepartment}
			</if>
			
			<if test="orderName != null">
				AND FOM.ORDER_NAME LIKE #{orderName}
			</if>
			<if test="productName != null">
				AND FOM.PRODUCT_NAME LIKE #{productName}
			</if>
			<if test="id != null">
				AND FOM.ID = #{id}
			</if>
			<if test="status != null">
				AND FOM.`STATUS` = #{status}
			</if>
			<if test="entryMoney != null">
				AND FOM.ENTRY_MONEY = #{entryMoney}
			</if>
			<if test="entryTicket != null">
				AND FOM.ENTRY_TICKET = #{entryTicket}
			</if>
			<if test="financialSubmitOrderStatus != null">
				AND FAOM.FINANCIAL_SUBMIT_ORDER_STATUS = #{financialSubmitOrderStatus}
			</if>
			<if test="financialSubmitOrderNotthroughTime != null">
				AND FAOM.FINANCIAL_SUBMIT_ORDER_NOTTHROUGH_TIME = #{financialSubmitOrderNotthroughTime}
			</if>
			<if test="drawBillStatus != null">
				AND FAOM.DRAW_BILL_STATUS = #{drawBillStatus}
			</if>
		) w
	</select>


</mapper>