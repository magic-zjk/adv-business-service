<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imopan.adv.platform.mapper.DeveloperDrawMapper">
  <resultMap id="BaseResultMap" type="com.imopan.adv.platform.entity.DeveloperDraw">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="CREATETIME" jdbcType="TIMESTAMP" property="createtime" />
    <result column="DRAW_MONEY" jdbcType="DECIMAL" property="drawMoney" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="REFUSE_REASON" jdbcType="VARCHAR" property="refuseReason" />
    <result column="BAN_TIME" jdbcType="VARCHAR" property="banTime" />
    <result column="REAL_TIME" jdbcType="VARCHAR" property="realTime" />
    <result column="APP_ID" jdbcType="INTEGER" property="appId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, CREATETIME, DRAW_MONEY, USER_ID, `STATUS`, REFUSE_REASON, BAN_TIME, REAL_TIME, 
    APP_ID
  </sql>
  <select id="selectByExample" parameterType="com.imopan.adv.platform.entity.DeveloperDrawExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from developer_draw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from developer_draw
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from developer_draw
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.imopan.adv.platform.entity.DeveloperDraw">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into developer_draw (ID, CREATETIME, DRAW_MONEY, 
      USER_ID, `STATUS`, REFUSE_REASON, 
      BAN_TIME, REAL_TIME, APP_ID
      )
    values (#{id,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{drawMoney,jdbcType=DECIMAL}, 
      #{userId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{refuseReason,jdbcType=VARCHAR}, 
      #{banTime,jdbcType=VARCHAR}, #{realTime,jdbcType=VARCHAR}, #{appId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.imopan.adv.platform.entity.DeveloperDraw">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into developer_draw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="createtime != null">
        CREATETIME,
      </if>
      <if test="drawMoney != null">
        DRAW_MONEY,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="status != null">
        `STATUS`,
      </if>
      <if test="refuseReason != null">
        REFUSE_REASON,
      </if>
      <if test="banTime != null">
        BAN_TIME,
      </if>
      <if test="realTime != null">
        REAL_TIME,
      </if>
      <if test="appId != null">
        APP_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="drawMoney != null">
        #{drawMoney,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="refuseReason != null">
        #{refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="banTime != null">
        #{banTime,jdbcType=VARCHAR},
      </if>
      <if test="realTime != null">
        #{realTime,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imopan.adv.platform.entity.DeveloperDrawExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from developer_draw
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update developer_draw
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.drawMoney != null">
        DRAW_MONEY = #{record.drawMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `STATUS` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.refuseReason != null">
        REFUSE_REASON = #{record.refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="record.banTime != null">
        BAN_TIME = #{record.banTime,jdbcType=VARCHAR},
      </if>
      <if test="record.realTime != null">
        REAL_TIME = #{record.realTime,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        APP_ID = #{record.appId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update developer_draw
    set ID = #{record.id,jdbcType=INTEGER},
      CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      DRAW_MONEY = #{record.drawMoney,jdbcType=DECIMAL},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      `STATUS` = #{record.status,jdbcType=INTEGER},
      REFUSE_REASON = #{record.refuseReason,jdbcType=VARCHAR},
      BAN_TIME = #{record.banTime,jdbcType=VARCHAR},
      REAL_TIME = #{record.realTime,jdbcType=VARCHAR},
      APP_ID = #{record.appId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imopan.adv.platform.entity.DeveloperDraw">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update developer_draw
    <set>
      <if test="createtime != null">
        CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="drawMoney != null">
        DRAW_MONEY = #{drawMoney,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `STATUS` = #{status,jdbcType=INTEGER},
      </if>
      <if test="refuseReason != null">
        REFUSE_REASON = #{refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="banTime != null">
        BAN_TIME = #{banTime,jdbcType=VARCHAR},
      </if>
      <if test="realTime != null">
        REAL_TIME = #{realTime,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        APP_ID = #{appId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imopan.adv.platform.entity.DeveloperDraw">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update developer_draw
    set CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      DRAW_MONEY = #{drawMoney,jdbcType=DECIMAL},
      USER_ID = #{userId,jdbcType=INTEGER},
      `STATUS` = #{status,jdbcType=INTEGER},
      REFUSE_REASON = #{refuseReason,jdbcType=VARCHAR},
      BAN_TIME = #{banTime,jdbcType=VARCHAR},
      REAL_TIME = #{realTime,jdbcType=VARCHAR},
      APP_ID = #{appId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>

	<select id="getDrawStatus" parameterType="com.imopan.adv.platform.entity.DeveloperDraw" resultType="string">
		SELECT
		`STATUS`
		FROM
		developer_draw
		WHERE
		ID =#{id}

	</select>
	<select id="getDrawedMoneyById" parameterType="string" resultType="double">
		SELECT
		sum(a.DRAW_MONEY)
		FROM
		developer_draw a
		WHERE
		(a.`STATUS` = 1
		OR a.`STATUS` = 2
		OR a.`STATUS` = 5
		)
		and a.USER_ID=#{0}
	</select>
	<select id="getFreezedMoneyById" parameterType="string" resultType="double">
		SELECT
		sum(a.DRAW_MONEY)
		FROM
		developer_draw a
		WHERE
			a.`STATUS` = 6
			and a.USER_ID=#{0}
	</select>
</mapper>