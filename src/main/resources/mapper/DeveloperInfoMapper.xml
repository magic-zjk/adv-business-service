<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imopan.adv.platform.mapper.DeveloperInfoMapper">
	<resultMap id="BaseResultMap" type="com.imopan.adv.platform.entity.DeveloperInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="BASE_ID" jdbcType="INTEGER" property="baseId" />
		<result column="NICKNAME" jdbcType="VARCHAR" property="nickname" />
		<result column="EMAIL" jdbcType="VARCHAR" property="email" />
		<result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
		<result column="QQ" jdbcType="VARCHAR" property="qq" />
		<result column="ID_CARD" jdbcType="VARCHAR" property="idCard" />
		<result column="BANK_CARD" jdbcType="VARCHAR" property="bankCard" />
		<result column="BANK_NAME" jdbcType="VARCHAR" property="bankName" />
		<result column="BANK_ADDR" jdbcType="VARCHAR" property="bankAddr" />
		<result column="REAL_NAME" jdbcType="VARCHAR" property="realName" />
		<result column="TEL" jdbcType="VARCHAR" property="tel" />
		<result column="ZIP_CODE" jdbcType="VARCHAR" property="zipCode" />
		<result column="ADDRESS" jdbcType="VARCHAR" property="address" />
		<result column="CARD_TYPE" jdbcType="VARCHAR" property="cardType" />
		<result column="REFUSE_REASON" jdbcType="VARCHAR" property="refuseReason" />
		<result column="COM_CONTACTS" jdbcType="VARCHAR" property="comContacts" />
		<result column="STATUS" jdbcType="INTEGER" property="status" />
		<result column="MP_BUSINESS_NAME" jdbcType="VARCHAR" property="mpBusinessName" />
		<result column="DEVELOPER_TYPE" jdbcType="INTEGER" property="developerType" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		ID, BASE_ID, NICKNAME, EMAIL, MOBILE, QQ, ID_CARD, BANK_CARD,
		BANK_NAME, BANK_ADDR,
		REAL_NAME, TEL, ZIP_CODE, ADDRESS, CARD_TYPE, REFUSE_REASON, COM_CONTACTS,
		`STATUS`,
		MP_BUSINESS_NAME, DEVELOPER_TYPE
	</sql>
	<select id="selectByExample" parameterType="com.imopan.adv.platform.entity.DeveloperInfoExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		'false' as QUERYID,
		<include refid="Base_Column_List" />
		from developer_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limitStart != null and limitStart&gt;=0">
			limit #{limitStart} , #{limitEnd}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from developer_info
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from developer_info
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.imopan.adv.platform.entity.DeveloperInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into developer_info (ID, BASE_ID, NICKNAME,
		EMAIL, MOBILE, QQ,
		ID_CARD, BANK_CARD, BANK_NAME,
		BANK_ADDR, REAL_NAME, TEL,
		ZIP_CODE, ADDRESS, CARD_TYPE,
		REFUSE_REASON, COM_CONTACTS, `STATUS`,
		MP_BUSINESS_NAME, DEVELOPER_TYPE)
		values (#{id,jdbcType=INTEGER}, #{baseId,jdbcType=INTEGER},
		#{nickname,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR},
		#{idCard,jdbcType=VARCHAR}, #{bankCard,jdbcType=VARCHAR},
		#{bankName,jdbcType=VARCHAR},
		#{bankAddr,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},
		#{zipCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{cardType,jdbcType=VARCHAR},
		#{refuseReason,jdbcType=VARCHAR}, #{comContacts,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
		#{mpBusinessName,jdbcType=VARCHAR}, #{developerType,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.imopan.adv.platform.entity.DeveloperInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into developer_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="baseId != null">
				BASE_ID,
			</if>
			<if test="nickname != null">
				NICKNAME,
			</if>
			<if test="email != null">
				EMAIL,
			</if>
			<if test="mobile != null">
				MOBILE,
			</if>
			<if test="qq != null">
				QQ,
			</if>
			<if test="idCard != null">
				ID_CARD,
			</if>
			<if test="bankCard != null">
				BANK_CARD,
			</if>
			<if test="bankName != null">
				BANK_NAME,
			</if>
			<if test="bankAddr != null">
				BANK_ADDR,
			</if>
			<if test="realName != null">
				REAL_NAME,
			</if>
			<if test="tel != null">
				TEL,
			</if>
			<if test="zipCode != null">
				ZIP_CODE,
			</if>
			<if test="address != null">
				ADDRESS,
			</if>
			<if test="cardType != null">
				CARD_TYPE,
			</if>
			<if test="refuseReason != null">
				REFUSE_REASON,
			</if>
			<if test="comContacts != null">
				COM_CONTACTS,
			</if>
			<if test="status != null">
				`STATUS`,
			</if>
			<if test="mpBusinessName != null">
				MP_BUSINESS_NAME,
			</if>
			<if test="developerType != null">
				DEVELOPER_TYPE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="baseId != null">
				#{baseId,jdbcType=INTEGER},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="qq != null">
				#{qq,jdbcType=VARCHAR},
			</if>
			<if test="idCard != null">
				#{idCard,jdbcType=VARCHAR},
			</if>
			<if test="bankCard != null">
				#{bankCard,jdbcType=VARCHAR},
			</if>
			<if test="bankName != null">
				#{bankName,jdbcType=VARCHAR},
			</if>
			<if test="bankAddr != null">
				#{bankAddr,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				#{tel,jdbcType=VARCHAR},
			</if>
			<if test="zipCode != null">
				#{zipCode,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="cardType != null">
				#{cardType,jdbcType=VARCHAR},
			</if>
			<if test="refuseReason != null">
				#{refuseReason,jdbcType=VARCHAR},
			</if>
			<if test="comContacts != null">
				#{comContacts,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="mpBusinessName != null">
				#{mpBusinessName,jdbcType=VARCHAR},
			</if>
			<if test="developerType != null">
				#{developerType,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.imopan.adv.platform.entity.DeveloperInfoExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from developer_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.imopan.adv.platform.entity.DeveloperInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update developer_info
		<set>
			<if test="baseId != null">
				BASE_ID = #{baseId,jdbcType=INTEGER},
			</if>
			<if test="nickname != null">
				NICKNAME = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				EMAIL = #{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				MOBILE = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="qq != null">
				QQ = #{qq,jdbcType=VARCHAR},
			</if>
			<if test="idCard != null">
				ID_CARD = #{idCard,jdbcType=VARCHAR},
			</if>
			<if test="bankCard != null">
				BANK_CARD = #{bankCard,jdbcType=VARCHAR},
			</if>
			<if test="bankName != null">
				BANK_NAME = #{bankName,jdbcType=VARCHAR},
			</if>
			<if test="bankAddr != null">
				BANK_ADDR = #{bankAddr,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				REAL_NAME = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				TEL = #{tel,jdbcType=VARCHAR},
			</if>
			<if test="zipCode != null">
				ZIP_CODE = #{zipCode,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				ADDRESS = #{address,jdbcType=VARCHAR},
			</if>
			<if test="cardType != null">
				CARD_TYPE = #{cardType,jdbcType=VARCHAR},
			</if>
			<if test="refuseReason != null">
				REFUSE_REASON = #{refuseReason,jdbcType=VARCHAR},
			</if>
			<if test="comContacts != null">
				COM_CONTACTS = #{comContacts,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				`STATUS` = #{status,jdbcType=INTEGER},
			</if>
			<if test="mpBusinessName != null">
				MP_BUSINESS_NAME = #{mpBusinessName,jdbcType=VARCHAR},
			</if>
			<if test="mpBusinessId != null">
				MP_BUSINESS_ID = #{mpBusinessId,jdbcType=INTEGER},
			</if>
			<if test="developerType != null">
				DEVELOPER_TYPE = #{developerType,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.imopan.adv.platform.entity.DeveloperInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update developer_info
		set BASE_ID = #{baseId,jdbcType=INTEGER},
		NICKNAME = #{nickname,jdbcType=VARCHAR},
		EMAIL = #{email,jdbcType=VARCHAR},
		MOBILE = #{mobile,jdbcType=VARCHAR},
		QQ = #{qq,jdbcType=VARCHAR},
		ID_CARD = #{idCard,jdbcType=VARCHAR},
		BANK_CARD = #{bankCard,jdbcType=VARCHAR},
		BANK_NAME = #{bankName,jdbcType=VARCHAR},
		BANK_ADDR = #{bankAddr,jdbcType=VARCHAR},
		REAL_NAME = #{realName,jdbcType=VARCHAR},
		TEL = #{tel,jdbcType=VARCHAR},
		ZIP_CODE = #{zipCode,jdbcType=VARCHAR},
		ADDRESS = #{address,jdbcType=VARCHAR},
		CARD_TYPE = #{cardType,jdbcType=VARCHAR},
		REFUSE_REASON = #{refuseReason,jdbcType=VARCHAR},
		COM_CONTACTS = #{comContacts,jdbcType=VARCHAR},
		`STATUS` = #{status,jdbcType=INTEGER},
		MP_BUSINESS_NAME = #{mpBusinessName,jdbcType=VARCHAR},
		DEVELOPER_TYPE = #{developerType,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>


	<resultMap id="BaseExtResultMap" type="com.imopan.adv.platform.vo.DeveloperVo">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="BASE_ID" jdbcType="INTEGER" property="baseId" />
		<result column="NICKNAME" jdbcType="VARCHAR" property="nickname" />
		<result column="EMAIL" jdbcType="VARCHAR" property="email" />
		<result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
		<result column="QQ" jdbcType="VARCHAR" property="qq" />
		<result column="ID_CARD" jdbcType="VARCHAR" property="idCard" />
		<result column="BANK_CARD" jdbcType="VARCHAR" property="bankCard" />
		<result column="BANK_NAME" jdbcType="VARCHAR" property="bankName" />
		<result column="BANK_ADDR" jdbcType="VARCHAR" property="bankAddr" />
		<result column="REAL_NAME" jdbcType="VARCHAR" property="realName" />
		<result column="ID_CARD_FRONT" jdbcType="VARCHAR" property="idCardFront" />
		<result column="ID_CARD_BACK" jdbcType="VARCHAR" property="idCardBack" />
		<result column="TEL" jdbcType="VARCHAR" property="tel" />
		<result column="ZIP_CODE" jdbcType="VARCHAR" property="zipCode" />
		<result column="ADDRESS" jdbcType="VARCHAR" property="address" />
		<result column="CARD_TYPE" jdbcType="VARCHAR" property="cardType" />
		<result column="REFUSE_REASON" jdbcType="VARCHAR" property="refuseReason" />
		<result column="COM_CONTACTS" jdbcType="VARCHAR" property="comContacts" />
		<result column="STATUS" jdbcType="INTEGER" property="status" />
		<result column="MP_BUSINESS_NAME" jdbcType="VARCHAR" property="mpBusinessName" />
		<result column="DEVELOPER_TYPE" jdbcType="INTEGER" property="developerType" />
		<result column="USER_ID" jdbcType="INTEGER" property="userId" />
		<result column="ID_CARD_FRONT" property="idCardFront" />
		<result column="ID_CARD_BACK" property="idCardBack" />
		<result column="BUSINESS_LICENCE" property="businessLicence" />
		<result column="ACCOUNT_LICENSE" property="accountLicense" />
	</resultMap>
	<!-- getById -->
	<select id="getById" parameterType="string" resultMap="BaseExtResultMap">
		SELECT
		a.*,b.ID_CARD_FRONT,b.ID_CARD_BACK,b.BUSINESS_LICENCE,b.ACCOUNT_LICENSE
		FROM
		developer_info a
		LEFT JOIN developer_info_ext b ON a.ID = b.USER_ID
		WHERE a.ID=#{0}
	</select>
	<resultMap type="com.imopan.adv.platform.vo.DeveloperDrawVo"
		id="DeveloperDrawVoResultMap">
		<id column="id" property="id" />
		<result column="userid" property="userid" />
		<result column="drawmoney" property="drawmoney" />
		<result column="status" property="status" />
		<result column="createtime" property="createtime" />
		<result column="username" property="username" />
		<result column="developertype" property="developertype" />
		<result column="realname" property="realname" />
		<result column="comcontacts" property="comcontacts" />
		<result column="idcard" property="idcard" />
		<result column="bankcard" property="bankcard" />
		<result column="bank" property="bank" />
		<result column="bankaddr" property="bankaddr" />
		<result column="mpbusinessname" property="mpbusinessname" />
		<collection property="meidalist" resultMap="DeveloperDrawVoAppResultMap"></collection>
	</resultMap>
	<resultMap id="DeveloperDrawVoAppResultMap" type="string">
		<result column="appname" />
	</resultMap>
	<select id="getDrawList" parameterType="map"
		resultMap="DeveloperDrawVoResultMap">
		select f.*,c.APP_NAME AS appname from
		(SELECT
		a.ID AS `id`,
		a.USER_ID AS userid,
		a.DRAW_MONEY AS drawmoney,
		a.`STATUS` AS `status`,
		DATE_FORMAT(a.`CREATETIME`,'%Y-%m-%d') as `createtime`,
		<!-- DATE_FORMAT(a.`CREATETIME`,'%Y-%m-%d %H:%i') as `createtime`, -->
		b.NICKNAME AS username,
		b.DEVELOPER_TYPE AS developertype,
		b.REAL_NAME AS realname,
		b.COM_CONTACTS AS comcontacts,
		b.ID_CARD AS idcard,
		b.BANK_CARD AS bankcard,
		b.BANK_NAME AS bank,
		b.BANK_ADDR AS bankaddr,
		b.MP_BUSINESS_NAME AS mpbusinessname
		FROM
		developer_draw a
		LEFT JOIN developer_info b ON a.USER_ID = b.ID
		WHERE
		1=1
		<if test="status != 9">
			AND a.`STATUS` = #{status}
		</if>
		<if test="status==9">
			AND a.`STATUS` !=4 
			AND a.`STATUS` !=5
		</if>

		<if test="endtime != null and endtime!=''">
				<![CDATA[
				AND DATE_FORMAT(a.`CREATETIME`, '%Y%m%d') <= #{endtime}
				 ]]>
		</if>
		<if test="starttime != null and starttime!=''">
				<![CDATA[ 
				AND DATE_FORMAT(a.`CREATETIME`, '%Y%m%d') >= #{starttime}
				]]>
		</if>
		AND (
		b.NICKNAME LIKE #{param}
		OR b.REAL_NAME LIKE #{param}
		OR b.COM_CONTACTS LIKE #{param}
		)
		ORDER BY a.ID
		<if test="limitstart != null">
			LIMIT #{limitstart},#{limitend}
		</if>
		)f
		LEFT JOIN developer_apps c ON f.userid = c.OWNER_ID

	</select>
	<select id="getDrawList_count" parameterType="map" resultType="int">
		SELECT
		count(a.USER_ID)
		FROM
		developer_draw a
		LEFT JOIN developer_info b ON a.USER_ID = b.ID
		<!-- LEFT JOIN developer_money c ON a.USER_ID = c.USER_ID -->
		WHERE
		1=1
		<if test="status != 9">
			AND a.`STATUS` = #{status}
		</if>
		<if test="status==9">
			AND a.`STATUS` !=4
			AND a.`STATUS` !=5
		</if>
		<if test="endtime != null and endtime!=''">
				<![CDATA[
				AND DATE_FORMAT(a.`CREATETIME`, '%Y%m%d') <= #{endtime}
				 ]]>
		</if>
		<if test="starttime != null and starttime!=''">
				<![CDATA[ 
				AND DATE_FORMAT(a.`CREATETIME`, '%Y%m%d') >= #{starttime}
				]]>
		</if>
		AND (
		b.NICKNAME LIKE #{param}
		OR b.REAL_NAME LIKE #{param}
		OR b.COM_CONTACTS LIKE #{param}
		)

	</select>
	<select id="selectByExample1" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from developer_info a
		where 1=1
		<if test="status != null and status!=''">
			and a.`STATUS`= #{status}
		</if>
		<if test="!(status != null and status!='')">
			and a.`STATUS`!= 5
		</if>
		<if test="queryparam != null and queryparam !=''">
			AND (
			a.NICKNAME LIKE #{queryparam}
			OR a.MP_BUSINESS_NAME LIKE #{queryparam}
			OR a.REAL_NAME LIKE #{queryparam}
			OR a.ID LIKE #{queryparam}
			)
		</if>
		order by UPDATE_TIME DESC
		<if test="limitStart != null">
			limit #{limitStart} , #{limitEnd}
		</if>
	</select>
	<select id="countByExample1" parameterType="map" resultType="int">
		select
		count(a.ID)
		from developer_info a
		where 1=1
		<if test="status != null and status!=''">
			and a.`STATUS`= #{status}
		</if>
		<if test="!(status != null and status!='')">
			and a.`STATUS`!= 5
		</if>
		<if test="queryparam != null and queryparam !=''">
			AND (
			a.NICKNAME LIKE #{queryparam}
			OR a.MP_BUSINESS_NAME LIKE #{queryparam}
			OR a.REAL_NAME LIKE #{queryparam}
			OR a.ID LIKE #{queryparam}
			)
		</if>
	</select>
	<select id="getMediaIdsByMPId" parameterType="int" resultType="string">
		SELECT DISTINCT
		b.ID
		FROM
		developer_info a
		LEFT JOIN developer_apps b ON a.ID = b.OWNER_ID
		WHERE
		a.MP_BUSINESS_ID = #{0}
		AND b.ID IS NOT NULL;
	</select>
	<resultMap id="getMediaIdsByDPIdResultMap" type="string">
		<result column="mediaid" />
	</resultMap>
	<select id="getMediaIdsByDPId" parameterType="list"
		resultMap="getMediaIdsByDPIdResultMap">
		SELECT
		ID as mediaid
		FROM
		developer_apps b
		WHERE
		b.OWNER_ID in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="getDrawListSum" parameterType="map" resultType="java.lang.Long">

		SELECT
		SUM(a.DRAW_MONEY) AS drawmoney
		FROM
		developer_draw a
		LEFT JOIN developer_info b ON a.USER_ID = b.ID
		WHERE
		1=1
		<if test="status != 9">
			AND a.`STATUS` = #{status}
		</if>
		<if test="status==9">
			AND a.`STATUS` !=4
			AND a.`STATUS` !=5
		</if>

		<if test="endtime != null and endtime!=''">
				<![CDATA[
				AND DATE_FORMAT(a.`CREATETIME`, '%Y%m%d') <= #{endtime}
				 ]]>
		</if>
		<if test="starttime != null and starttime!=''">
				<![CDATA[ 
				AND DATE_FORMAT(a.`CREATETIME`, '%Y%m%d') >= #{starttime}
				]]>
		</if>
		AND (
		b.NICKNAME LIKE #{param}
		OR b.REAL_NAME LIKE #{param}
		OR b.COM_CONTACTS LIKE #{param}
		)
	</select>
</mapper>